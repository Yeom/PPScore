PackageBLAST_NNP :_: An_DT Adaptive_JJ Multi-Policy_NNP Grid_NNP Service_NNP for_IN Biological_NNP Sequence_NN Comparison_NN Marcelo_NNP S_NN ._.
Sousa_NNP University_NNP of_IN Brasilia_NNP Campus_NNP UNB_NNP -_: ICC_NN Norte_NNP ,_, sub-solo_JJ Brasilia_NNP ,_, Brazil_NNP msousa_NN @_IN unb_NN ._.
br_NN Alba_NNP Cristina_NNP M_NN ._.
A_DT ._.
Melo_NNP University_NNP of_IN Brasilia_NNP Campus_NNP UNB_NNP -_: ICC_NN Norte_NNP ,_, sub-solo_JJ Brasilia_NNP ,_, Brazil_NNP alves_VBZ @_IN unb_NN ._.
br_NN ABSTRACT_NN In_IN this_DT paper_NN ,_, we_PRP propose_VBP an_DT adaptive_JJ task_NN allocation_NN framework_NN to_TO perform_VB BLAST_NN searches_NNS in_IN a_DT grid_NN environment_NN against_IN sequence_NN database_NN segments_NNS ._.
The_DT framework_NN ,_, called_VBN PackageBLAST_NNP ,_, provides_VBZ an_DT infrastructure_NN to_TO choose_VB or_CC incorporate_VB task_NN allocation_NN strategies_NNS ._.
Furthermore_RB ,_, we_PRP propose_VBP a_DT mechanism_NN to_TO compute_VB grid_NN nodes_NNS execution_NN weight_NN ,_, adapting_VBG the_DT chosen_VBN allocation_NN policy_NN to_TO the_DT current_JJ computational_JJ power_NN of_IN the_DT nodes_NNS ._.
Our_PRP$ results_NNS present_JJ very_RB good_JJ speedups_NNS and_CC also_RB show_VBP that_IN no_DT single_JJ allocation_NN strategy_NN is_VBZ able_JJ to_TO achieve_VB the_DT lowest_JJS execution_NN times_NNS for_IN all_DT scenarios_NNS ._.
Categories_NNS and_CC Subject_NNP Descriptors_NNPS C_NNP ._.
#_# ._.
#_# -LSB-_-LRB- Distributed_VBN Systems_NNPS -RSB-_-RRB- :_: Distributed_VBN Applications_NNS ;_: J_NN ._.
#_# -LSB-_-LRB- Life_NNP and_CC Medical_NNP Sciences_NNPS -RSB-_-RRB- :_: Biology_NNP and_CC Genetics_NNP 1_CD ._.
INTRODUCTION_NNP Biological_JJ sequence_NN comparison_NN -LRB-_-LRB- or_CC sequence_NN alignment_NN -RRB-_-RRB- is_VBZ one_CD of_IN the_DT most_RBS important_JJ problems_NNS in_IN computational_JJ biology_NN ,_, given_VBN the_DT number_NN and_CC diversity_NN of_IN the_DT sequences_NNS and_CC the_DT frequency_NN on_IN which_WDT it_PRP is_VBZ needed_VBN to_TO be_VB solved_VBN daily_RB ._.
SW_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- is_VBZ an_DT exact_JJ algorithm_NN that_WDT finds_VBZ the_DT best_JJS local_JJ alignment_NN between_IN two_CD sequences_NNS of_IN size_NN n_NN in_IN quadratic_JJ time_NN and_CC space_NN ._.
In_IN genome_NN projects_NNS ,_, the_DT size_NN of_IN the_DT sequences_NNS to_TO be_VB compared_VBN is_VBZ constantly_RB increasing_VBG ,_, thus_RB an_DT O_NN -LRB-_-LRB- n2_NN -RRB-_-RRB- solution_NN is_VBZ expensive_JJ ._.
For_IN this_DT reason_NN ,_, heuristics_NNS like_IN BLAST_NN -LSB-_-LRB- #_# -RSB-_-RRB- were_VBD proposed_VBN to_TO reduce_VB execution_NN time_NN ._.
The_DT popularity_NN of_IN the_DT Internet_NN made_VBD possible_JJ the_DT interconnection_NN of_IN millions_NNS of_IN powerful_JJ machines_NNS in_IN a_DT global_JJ scale_NN ._.
This_DT led_VBD to_TO the_DT idea_NN of_IN grid_NN computing_NN ,_, which_WDT involves_VBZ cooperative_JJ and_CC secure_JJ sharing_NN of_IN non-dedicated_JJ and_CC heterogeneous_JJ resources_NNS that_WDT are_VBP geographically_RB distributed_VBN -LSB-_-LRB- #_# -RSB-_-RRB- ._.
Resource_NNP scheduling_NN is_VBZ one_CD of_IN the_DT most_RBS important_JJ components_NNS of_IN a_DT grid_NN system_NN ._.
The_DT choice_NN of_IN the_DT best_JJS resources_NNS for_IN a_DT particular_JJ application_NN is_VBZ called_VBN task_NN allocation_NN ,_, which_WDT is_VBZ an_DT NP-Complete_JJ problem_NN ._.
Grid_NNP applications_NNS usually_RB do_VBP not_RB have_VB high_JJ communication_NN rates_NNS and_CC many_JJ of_IN them_PRP follow_VBP the_DT master_NN /_: slave_NN model_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
In_IN order_NN to_TO schedule_VB master_NN /_: slave_NN applications_NNS many_JJ task_NN allocation_NN policies_NNS were_VBD proposed_VBN such_JJ as_IN Self_NN Scheduling_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- and_CC FAC2_NN -LSB-_-LRB- #_# -RSB-_-RRB- ._.
The_DT choice_NN of_IN the_DT best_JJS allocation_NN policy_NN depends_VBZ on_IN the_DT application_NN access_NN pattern_NN and_CC on_IN the_DT environment_NN in_IN which_WDT it_PRP runs_VBZ -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
In_IN this_DT paper_NN ,_, we_PRP propose_VBP PackageBLAST_NN ,_, an_DT adaptive_JJ multi-policy_JJ grid_NN service_NN to_TO run_VB BLAST_NN searches_NNS in_IN grids_NNS composed_VBN by_IN segmented_JJ genetic_JJ databases_NNS ._.
PackageBLAST_NN executes_VBZ on_IN Globus_NNP #_# -LSB-_-LRB- #_# -RSB-_-RRB- and_CC ,_, by_IN now_RB ,_, provides_VBZ five_CD allocation_NN policies_NNS ._.
Also_RB ,_, we_PRP propose_VBP an_DT adaptive_JJ mechanism_NN to_TO assign_VB weights_NNS to_TO the_DT grid_NN nodes_NNS ,_, taking_VBG into_IN account_VBP their_PRP$ current_JJ workload_NN ._.
As_IN far_RB as_IN we_PRP know_VBP ,_, this_DT is_VBZ the_DT first_JJ grid_NN service_NN that_WDT runs_VBZ BLAST_NN with_IN multiple_JJ task_NN policies_NNS with_IN a_DT segmented_JJ database_NN in_IN a_DT heterogeneous_JJ non-dedicated_JJ platform_NN ._.
This_DT paper_NN is_VBZ organized_VBN as_IN follows_VBZ ._.
Section_NN #_# presents_VBZ the_DT sequence_NN comparison_NN problem_NN and_CC the_DT BLAST_NN algorithm_NN ._.
Section_NN #_# describes_VBZ allocation_NN policies_NNS for_IN grids_NNS ._.
Section_NN 4_CD discusses_VBZ related_JJ work_NN ._.
Section_NN #_# presents_VBZ the_DT design_NN of_IN PackageBLAST_NN ._.
Experimental_JJ results_NNS are_VBP discussed_VBN in_IN section_NN #_# ._.
Section_NN #_# concludes_VBZ the_DT paper_NN ._.
2_LS ._.
SEQUENCE_NN COMPARISON_NN To_TO compare_VB two_CD sequences_NNS ,_, we_PRP must_MD find_VB the_DT best_JJS alignment_NN ,_, which_WDT is_VBZ to_TO place_VB one_CD sequence_NN above_IN the_DT other_JJ making_VBG clear_JJ the_DT correspondence_NN between_IN similar_JJ characters_NNS -LSB-_-LRB- #_# -RSB-_-RRB- ._.
Given_VBN an_DT alignment_NN between_IN two_CD sequences_NNS ,_, a_DT score_NN is_VBZ usually_RB associated_VBN for_IN it_PRP as_IN follows_VBZ -LRB-_-LRB- figure_NN #_# -RRB-_-RRB- ._.
For_IN each_DT column_NN ,_, we_PRP associate_VBP ,_, for_IN instance_NN ,_, +_CC #_# if_IN the_DT two_CD characters_NNS are_VBP identical_JJ ,_, -_: #_# if_IN the_DT characters_NNS are_VBP different_JJ and_CC -2_CD if_IN one_CD of_IN them_PRP is_VBZ a_DT space_NN ._.
The_DT score_NN is_VBZ the_DT sum_NN of_IN all_PDT the_DT values_NNS and_CC the_DT maximal_JJ score_NN is_VBZ the_DT similarity_NN between_IN the_DT sequences_NNS ._.
To_TO compute_VB exact_JJ local_JJ sequence_NN alignments_NNS ,_, -LSB-_-LRB- ##_CD -RSB-_-RRB- proposed_VBD an_DT algorithm_NN -LRB-_-LRB- SW_NN -RRB-_-RRB- ,_, based_VBN on_IN dynamic_JJ programming_NN ,_, with_IN quadratic_JJ time_NN and_CC space_NN complexity_NN ._.
Usually_RB ,_, one_CD given_VBN biological_JJ sequence_NN is_VBZ compared_VBN against_IN thousands_NNS or_CC even_RB millions_NNS of_IN sequences_NNS that_WDT compose_VBP genetic_JJ data_NNS banks_NNS ._.
By_IN now_RB ,_, there_EX are_VBP millions_NNS of_IN entries_NNS composed_VBN of_IN billions_NNS of_IN nucleotides_NNS at_IN GenBank_NN ,_, which_WDT is_VBZ one_CD of_IN the_DT most_RBS important_JJ public_NN gene_NN repositories_NNS ._.
Due_JJ to_TO the_DT 156_CD G_NN A_NN C_NN G_NN G_NN A_NN T_NN T_NN A_NN G_NN G_NN A_NN T_NN C_NN G_NN G_NN A_NN A_NN T_NN A_NN G_NN +_CC #_# +_CC #_# #_# +_CC #_# +_CC #_# +_CC #_# +_CC #_# #_# +_CC #_# +_CC #_# +_CC #_# =_JJ #_# Figure_NNP #_# :_: Example_NN of_IN an_DT alignment_NN with_IN score_NN #_# current_JJ growth_NN rate_NN ,_, these_DT databases_NNS will_MD soon_RB achieve_VB terabytes_NNS ._.
In_IN this_DT scenario_NN ,_, the_DT use_NN of_IN exact_JJ methods_NNS such_JJ as_IN SW_NN is_VBZ prohibitive_JJ ._.
For_IN this_DT reason_NN ,_, faster_JJR heuristic_NN methods_NNS are_VBP proposed_VBN which_WDT do_VBP not_RB guarantee_VB that_IN the_DT best_JJS alignment_NN will_MD be_VB produced_VBN ._.
Usually_RB ,_, these_DT heuristic_NN methods_NNS are_VBP evaluated_VBN using_VBG the_DT concepts_NNS of_IN sensitivity_NN and_CC sensibility_NN ._.
Sensitivity_NN is_VBZ the_DT rate_NN at_IN which_WDT the_DT method_NN fails_VBZ to_TO identify_VB similar_JJ sequences_NNS whereas_IN sensibility_NN is_VBZ the_DT rate_NN at_IN which_WDT the_DT method_NN identifies_VBZ sequences_NNS that_WDT are_VBP not_RB similar_JJ -LSB-_-LRB- #_# -RSB-_-RRB- ._.
BLAST_NN -LSB-_-LRB- #_# -RSB-_-RRB- is_VBZ the_DT most_RBS widely_RB used_VBN heuristic_NN method_NN for_IN sequence_NN comparison_NN ._.
2_LS ._.
#_# The_DT BLAST_NN Algorithm_NN BLAST_NN -LRB-_-LRB- Basic_JJ Local_JJ Alignment_NN Tool_NNP -RRB-_-RRB- -LSB-_-LRB- #_# -RSB-_-RRB- is_VBZ a_DT set_NN of_IN programs_NNS used_VBN to_TO search_VB DNA_NN and_CC protein_NN databases_NNS for_IN similarities_NNS between_IN sequences_NNS ._.
It_PRP is_VBZ designed_VBN to_TO obtain_VB high_JJ performance_NN with_IN low_JJ impact_NN in_IN terms_NNS of_IN sensibility_NN ._.
BLAST_NN provides_VBZ programs_NNS to_TO compare_VB many_JJ combinations_NNS of_IN query_NN and_CC database_NN sequence_NN types_NNS -LRB-_-LRB- table_NN #_# -RRB-_-RRB- ._.
Table_NNP #_# :_: Some_DT of_IN the_DT BLAST_NN family_NN programs_NNS Program_NN Database_NN Query_NNP Translation_NN BLASTN_NNP Nucleotide_NN Nucleotide_NN None_NN BLASTP_NNP Protein_NN Protein_NN None_NN BLASTX_NNP Protein_NN Nucleotide_NN Query_NNP The_NNP first_JJ version_NN of_IN BLAST_NN searched_VBD for_IN local_JJ similarities_NNS without_IN taking_VBG spaces_NNS -LRB-_-LRB- gaps_NNS -RRB-_-RRB- into_IN account_NN ._.
In_IN 1996-1997_CD ,_, two_CD gapped_VBD versions_NNS of_IN BLAST_NN emerged_VBD :_: NCBI-BLAST_NN -LSB-_-LRB- #_# -RSB-_-RRB- and_CC WU-BLAST_NN -LSB-_-LRB- #_# -RSB-_-RRB- ._.
Basically_RB ,_, the_DT algorithm_NN proceeds_VBZ in_IN three_CD steps_NNS :_: seeding_NN ,_, extension_NN and_CC evaluation_NN ._.
In_IN the_DT seeding_NN step_NN ,_, a_DT query_NN sequence_NN is_VBZ split_VBN in_IN portions_NNS called_VBN words_NNS of_IN size_NN W_NN ._.
These_DT words_NNS are_VBP matched_VBN to_TO database_NN sequences_NNS and_CC used_VBN as_IN alignment_NN seeds_NNS if_IN their_PRP$ scores_NNS are_VBP higher_JJR than_IN a_DT threshold_NN T_NN ._.
In_IN the_DT extension_NN step_NN ,_, alignments_NNS are_VBP generated_VBN from_IN seeds_NNS ._.
A_DT parameter_NN X_NN maintains_VBZ the_DT recent_JJ alignment_NN history_NN and_CC controls_VBZ this_DT step_NN ._.
Once_RB seeds_NNS are_VBP extended_VBN ,_, the_DT last_JJ step_NN begins_VBZ ._.
The_DT alignments_NNS are_VBP evaluated_VBN to_TO determine_VB if_IN they_PRP are_VBP statistically_RB significant_JJ ._.
The_DT significant_JJ ones_NNS are_VBP termed_VBN HSPs_NNS -LRB-_-LRB- High-scoring_JJ Segment_NNP Pairs_NNP -RRB-_-RRB- ._.
A_DT new_JJ parameter_NN ,_, S_NN ,_, is_VBZ used_VBN to_TO sort_VB alignments_NNS ._.
The_DT combination_NN of_IN parameters_NNS W_NN ,_, T_NN ,_, X_NN and_CC S_NN is_VBZ used_VBN to_TO determine_VB the_DT sensitivity_NN and_CC speed_NN of_IN BLAST_NN searches_NNS ._.
3_LS ._.
TASK_NN ALLOCATION_NN FOR_IN GRIDS_NN 3_CD ._.
#_# Grid_NNP Computing_NNP Grid_NNP Computing_NNP was_VBD initially_RB developed_VBN to_TO enable_VB resource_NN sharing_NN between_IN scientific_JJ institutions_NNS who_WP needed_VBD to_TO share_VB data_NNS ,_, software_NN and_CC computational_JJ power_NN ._.
The_DT Globus_NNP Toolkit_NNP -LSB-_-LRB- #_# -RSB-_-RRB- emerged_VBD as_IN an_DT open_JJ source_NN project_NN and_CC quickly_RB became_VBD a_DT de_FW facto_FW standard_NN for_IN grid_NN computing_NN infrastructure_NN ._.
Globus_NNP implements_VBZ a_DT set_NN of_IN protocols_NNS ,_, APIs_NNS and_CC services_NNS used_VBN by_IN hundreds_NNS of_IN grid_NN applications_NNS all_DT over_IN the_DT world_NN ._.
In_IN ####_CD ,_, the_DT Open_NNP Grid_NNP Services_NNPS Architecture_NNP -LRB-_-LRB- OGSA_NNP -RRB-_-RRB- was_VBD introduced_VBN by_IN the_DT Global_JJ Grid_NNP Forum_NNP -LRB-_-LRB- GGF_NNP -RRB-_-RRB- to_TO expand_VB standardization_NN ._.
OGSA_NN provided_VBD a_DT new_JJ architecture_NN for_IN grid_NN applications_NNS based_VBN on_IN web_NN services_NNS in_IN order_NN to_TO achieve_VB interoperability_NN using_VBG industry_NN standards_NNS ._.
Many_JJ OGSA_NN architecture_NN implementations_NNS were_VBD developed_VBN ,_, including_VBG one_CD for_IN Globus_NNP ._.
The_DT work_NN carried_VBD out_RP in_IN this_DT paper_NN is_VBZ deployed_VBN on_IN a_DT grid_NN based_VBN on_IN Globus_NNP -LRB-_-LRB- GT3_NN -RRB-_-RRB- ._.
Usually_RB ,_, grid_NN applications_NNS are_VBP modelled_VBN as_IN master_NN /_: slave_NN ,_, where_WRB one_CD problem_NN is_VBZ divided_VBN in_IN many_JJ independent_JJ work_NN units_NNS -LRB-_-LRB- tasks_NNS -RRB-_-RRB- of_IN smaller_JJR size_NN that_WDT can_MD be_VB distributed_VBN to_TO slave_NN nodes_NNS for_IN parallel_NN processing_NN ._.
A_DT very_RB important_JJ problem_NN to_TO be_VB solved_VBN in_IN this_DT context_NN is_VBZ task_NN allocation_NN ._.
The_DT task_NN allocation_NN problem_NN consists_VBZ of_IN assigning_VBG tasks_NNS to_TO processors_NNS in_IN order_NN to_TO maximize_VB system_NN performance_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
In_IN this_DT problem_NN ,_, it_PRP is_VBZ assumed_VBN that_IN no_DT precedence_NN relations_NNS exist_VBP among_IN the_DT tasks_NNS ._.
3_LS ._.
#_# Task_NNP Allocation_NNP Strategies_NNS Given_VBN a_DT master_NN /_: slave_NN application_NN composed_VBN by_IN a_DT master_NN m_NN and_CC S_NN slaves_NNS ,_, the_DT allocation_NN function_NN allocate_VBP -LRB-_-LRB- m_NN ,_, si_NN ,_, N_NN ,_, S_NN -RRB-_-RRB- determines_VBZ how_WRB many_JJ tasks_NNS out_IN of_IN N_NN must_MD be_VB assigned_VBN to_TO a_DT slave_NN si_NN -LRB-_-LRB- equation_NN #_# -RRB-_-RRB- ,_, where_WRB A_NN -LRB-_-LRB- N_NN ,_, S_NN -RRB-_-RRB- represents_VBZ an_DT allocation_NN policy_NN ._.
WeightFactor_NNP -LRB-_-LRB- m_NN ,_, si_NN ,_, S_NN -RRB-_-RRB- was_VBD defined_VBN by_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- -LRB-_-LRB- equation_NN #_# -RRB-_-RRB- and_CC provides_VBZ weights_NNS for_IN each_DT slave_NN si_NN ,_, based_VBN on_IN its_PRP$ statically_RB known_VBN processing_NN rate_NN -LRB-_-LRB- WorkerRate_NN -RRB-_-RRB- ._.
allocate_VB -LRB-_-LRB- m_NN ,_, si_NN ,_, N_NN ,_, S_NN -RRB-_-RRB- =_JJ A_NN -LRB-_-LRB- N_NN ,_, S_NN -RRB-_-RRB- W_NN eightF_NN actor_NN -LRB-_-LRB- m_NN ,_, si_NN ,_, S_NN -RRB-_-RRB- -LRB-_-LRB- #_# -RRB-_-RRB- W_NN eightF_NN actor_NN -LRB-_-LRB- m_NN ,_, si_NN ,_, S_NN -RRB-_-RRB- =_JJ P_NN W_NN orkerRate_NN -LRB-_-LRB- m_NN ,_, si_NN -RRB-_-RRB- P_NN i_FW =_JJ #_# W_NNP orkerRate_NN -LRB-_-LRB- m_NN ,_, si_NN -RRB-_-RRB- -LRB-_-LRB- #_# -RRB-_-RRB- The_DT following_VBG subsections_NNS present_VBP some_DT work_NN allocation_NN policies_NNS ,_, which_WDT are_VBP instances_NNS A_NN -LRB-_-LRB- N_NN ,_, S_NN -RRB-_-RRB- of_IN equation_NN #_# ._.
3_LS ._.
#_# Fixed_VBN -LRB-_-LRB- Static_JJ Scheduling_NN -RRB-_-RRB- The_DT Fixed_VBN -LSB-_-LRB- ##_CD -RSB-_-RRB- strategy_NN distributes_VBZ all_DT work_NN units_NNS uniformly_RB to_TO slaves_NNS nodes_NNS ._.
This_DT strategy_NN is_VBZ appropriate_JJ for_IN homogeneous_JJ systems_NNS with_IN dedicated_JJ resources_NNS -LRB-_-LRB- equation_NN #_# -RRB-_-RRB- ._.
A_DT -LRB-_-LRB- N_NN ,_, S_NN -RRB-_-RRB- =_JJ N_NN S_NN -LRB-_-LRB- #_# -RRB-_-RRB- 3_CD ._.
#_# Self_NN Scheduling_NN -LRB-_-LRB- SS_NN -RRB-_-RRB- Self_NN Scheduling_NN -LRB-_-LRB- SS_NN -RRB-_-RRB- -LSB-_-LRB- ##_CD -RSB-_-RRB- distributes_VBZ a_DT single_JJ work_NN unit_NN to_TO every_DT slave_NN node_NN -LRB-_-LRB- equation_NN #_# -RRB-_-RRB- ._.
A_DT -LRB-_-LRB- N_NN ,_, S_NN -RRB-_-RRB- =_JJ #_# ,_, while_IN work_NN units_NNS are_VBP still_RB left_VBN to_TO allocate_VB -LRB-_-LRB- #_# -RRB-_-RRB- In_IN SS_NN ,_, the_DT maximum_NN imbalance_NN is_VBZ limited_VBN by_IN the_DT processing_NN time_NN of_IN a_DT work_NN unit_NN in_IN the_DT slowest_JJS node_NN ._.
Nevertheless_RB ,_, SS_NN usually_RB demands_VBZ a_DT lot_NN of_IN communication_NN ,_, since_IN each_DT work_NN unit_NN retrieval_NN requires_VBZ one_CD interaction_NN with_IN the_DT master_NN ._.
3_LS ._.
#_# Trapezoidal_JJ Self_NN Scheduling_NN -LRB-_-LRB- TSS_NN -RRB-_-RRB- Trapezoidal_JJ Self-Scheduling_NN -LRB-_-LRB- TSS_NN -RRB-_-RRB- -LSB-_-LRB- ##_CD -RSB-_-RRB- allocates_VBZ work_NN units_NNS in_IN groups_NNS with_IN a_DT linearly_RB decreasing_VBG size_NN ._.
This_DT strategy_NN uses_VBZ two_CD variables_NNS ,_, steps_NNS and_CC ,_, that_IN represent_VBP the_DT total_JJ number_NN of_IN allocation_NN steps_NNS and_CC the_DT block_NN reduction_NN factor_NN ,_, respectively_RB -LRB-_-LRB- equations_NNS #_# and_CC #_# -RRB-_-RRB- ._.
steps_NNS =_JJ 4NS_NN N_NN +_CC 2S_NN -LRB-_-LRB- #_# -RRB-_-RRB- 157_CD =_JJ N_NN 2S_NN 2S_NN -LRB-_-LRB- steps_NNS #_# -RRB-_-RRB- -LRB-_-LRB- #_# -RRB-_-RRB- TSS_NN calculates_VBZ the_DT length_NN of_IN the_DT sth_NN block_NN using_VBG the_DT difference_NN between_IN the_DT length_NN of_IN the_DT first_JJ block_NN and_CC total_JJ reduction_NN from_IN the_DT last_JJ s_NNS #_# blocks_NNS -LRB-_-LRB- equation_NN #_# -RRB-_-RRB- ._.
A_DT -LRB-_-LRB- s_NNS ,_, N_NN ,_, S_NN -RRB-_-RRB- =_JJ max_NN N_NN 2S_NN -LSB-_-LRB- -LRB-_-LRB- s_NNS #_# -RRB-_-RRB- -RSB-_-RRB- ,_, #_# -LRB-_-LRB- #_# -RRB-_-RRB- 3_CD ._.
#_# Guided_VBD Self_NN Scheduling_NN -LRB-_-LRB- GSS_NN -RRB-_-RRB- Guided_VBD Self-Scheduling_NN -LRB-_-LRB- GSS_NN -RRB-_-RRB- -LSB-_-LRB- ##_CD -RSB-_-RRB- allocates_VBZ work_NN units_NNS in_IN groups_NNS whose_WP$ length_NN decrease_NN exponentially_RB ._.
Its_PRP$ goal_NN is_VBZ to_TO create_VB a_DT tradeoff_NN between_IN the_DT number_NN of_IN the_DT work_NN units_NNS processed_VBN and_CC the_DT imbalance_NN in_IN finishing_VBG times_NNS -LRB-_-LRB- equation_NN #_# -RRB-_-RRB- ._.
A_DT -LRB-_-LRB- s_NNS ,_, N_NN ,_, S_NN -RRB-_-RRB- =_JJ max_NN N_NN #_# #_# S_NN s1_NN S_NN ,_, #_# ,_, s_VBZ >_JJR #_# -LRB-_-LRB- #_# -RRB-_-RRB- 3_CD ._.
#_# Factoring_NN -LRB-_-LRB- FAC2_NN -RRB-_-RRB- FAC2_NN allocates_VBZ work_NN units_NNS in_IN cycles_NNS consisting_VBG of_IN S_NN allocation_NN sequences_NNS ._.
Equation_NN #_# shows_VBZ the_DT function_NN that_WDT defines_VBZ the_DT cycle_NN number_NN of_IN an_DT iteration_NN s_NNS ._.
In_IN FAC2_NN ,_, half_NN of_IN the_DT remaining_VBG work_NN units_NNS are_VBP allocated_VBN in_IN each_DT round_NN -LRB-_-LRB- equation_NN 10_CD -RRB-_-RRB- ._.
round_NN -LRB-_-LRB- s_NNS -RRB-_-RRB- =_JJ -LRB-_-LRB- s_NNS #_# -RRB-_-RRB- S_NN +_CC #_# -LRB-_-LRB- #_# -RRB-_-RRB- A_NN -LRB-_-LRB- s_NNS ,_, N_NN ,_, S_NN -RRB-_-RRB- =_JJ max_NN N_NN S_NN 2round_JJ -LRB-_-LRB- s_NNS -RRB-_-RRB- ,_, #_# -LRB-_-LRB- ##_NN -RRB-_-RRB- 4_CD ._.
RELATED_JJ WORK_VBP MpiBLAST_NN -LSB-_-LRB- #_# -RSB-_-RRB- was_VBD proposed_VBN for_IN clusters_NNS and_CC has_VBZ two_CD phases_NNS ._.
First_RB ,_, the_DT genetic_JJ database_NN is_VBZ segmented_JJ ._.
Then_RB ,_, the_DT queries_NNS are_VBP evenly_RB distributed_VBN among_IN the_DT nodes_NNS ._.
If_IN the_DT node_NN does_VBZ not_RB have_VB a_DT database_NN fragment_NN ,_, a_DT local_JJ copy_NN is_VBZ made_VBN ._.
A_DT method_NN is_VBZ proposed_VBN that_IN associates_NNS data_NNS fragments_NNS to_TO nodes_NNS ,_, trying_VBG to_TO minimize_VB the_DT number_NN of_IN copies_NNS ._.
BLAST_NN +_CC +_CC -LSB-_-LRB- ##_CD -RSB-_-RRB- groups_NNS multiple_JJ sequences_NNS to_TO reduce_VB the_DT number_NN of_IN database_NN accesses_NNS ._.
A_DT master_NN /_: slave_NN approach_NN is_VBZ used_VBN that_IN allocates_VBZ the_DT queries_NNS to_TO the_DT slaves_NNS according_VBG to_TO the_DT fixed_JJ policy_NN -LRB-_-LRB- section_NN #_# ._.
#_# -RRB-_-RRB- ._.
Each_DT worker_NN executes_VBZ BLAST_NN +_CC +_CC independently_RB and_CC ,_, finally_RB ,_, the_DT results_NNS are_VBP collected_VBN and_CC combined_VBN by_IN the_DT master_NN ._.
GridBlast_NN -LSB-_-LRB- #_# -RSB-_-RRB- is_VBZ a_DT master_NN /_: slave_NN grid_NN application_NN that_WDT uses_VBZ Globus_NNP #_# ._.
It_PRP distributes_VBZ sequences_NNS among_IN the_DT grid_NN nodes_NNS using_VBG two_CD allocation_NN policies_NNS :_: FCFS_NNS and_CC minmax_NN ._.
Of_IN those_DT ,_, only_RB the_DT last_JJ one_CD takes_VBZ into_IN account_NN the_DT current_JJ load_NN and_CC the_DT heterogeneity_NN of_IN the_DT environment_NN ._.
However_RB ,_, to_TO use_VB minmax_NN ,_, the_DT total_JJ execution_NN time_NN of_IN each_DT BLAST_NN task_NN must_MD be_VB known_VBN ._.
Having_VBG decided_VBN which_WDT sequences_NNS will_MD be_VB compared_VBN by_IN each_DT node_NN ,_, GridBlast_NNP sends_VBZ the_DT sequences_NNS ,_, the_DT executable_JJ files_NNS and_CC the_DT whole_NN database_NN to_TO the_DT chosen_VBN node_NN ._.
When_WRB the_DT search_NN finishes_NNS ,_, the_DT results_NNS are_VBP compacted_JJ and_CC sent_VBN to_TO the_DT master_NN ._.
Grid_NNP Blast_NN Toolkit_NN -LRB-_-LRB- GBTK_NN -RRB-_-RRB- -LSB-_-LRB- ##_CD -RSB-_-RRB- is_VBZ a_DT web_NN portal_NN to_TO execute_VB BLAST_NN searches_NNS in_IN Globus_NNP #_# ._.
All_DT genetic_JJ databases_NNS are_VBP statically_RB placed_VBN on_IN the_DT grid_NN nodes_NNS -LRB-_-LRB- without_IN replication_NN -RRB-_-RRB- ._.
GBTK_NNP is_VBZ a_DT master_NN /_: slave_NN application_NN that_WDT receives_VBZ the_DT sequences_NNS and_CC the_DT name_NN of_IN the_DT genetic_JJ database_NN ._.
It_PRP then_RB verifies_VBZ if_IN the_DT node_NN that_WDT contains_VBZ the_DT database_NN is_VBZ available_JJ ._.
If_IN so_RB ,_, it_PRP is_VBZ selected_VBN ._.
If_IN the_DT node_NN is_VBZ not_RB available_JJ ,_, the_DT less_JJR loaded_JJ node_NN is_VBZ chosen_VBN and_CC the_DT database_NN is_VBZ copied_VBN to_TO it_PRP ._.
Master_NN SlaveSlaveSlave_NNP Internet_NN database_NN segment_NN but_CC only_RB part_NN of_IN it_PRP is_VBZ processed_VBN in_IN each_DT node_NN The_DT database_NN is_VBZ replicated_VBN in_IN the_DT nodes_NNS ,_, Figure_NNP #_# :_: PackageBLAST_NN segmentation_NN and_CC distribution_NN mechanism_NN ._.
5_CD ._.
DESIGN_NN OF_IN PACKAGEBLAST_NNP We_PRP propose_VBP an_DT adaptive_JJ task_NN allocation_NN framework_NN which_WDT is_VBZ a_DT grid_NN service_NN to_TO perform_VB BLAST_NN searches_NNS against_IN sequence_NN database_NN segments_NNS ._.
The_DT framework_NN ,_, called_VBN PackageBLAST_NNP ,_, provides_VBZ an_DT infrastructure_NN to_TO choose_VB or_CC incorporate_VB allocation_NN strategies_NNS in_IN a_DT master_NN /_: slave_NN application_NN ._.
We_PRP also_RB propose_VBP a_DT strategy_NN to_TO compute_VB grid_NN nodes_NNS execution_NN weight_NN which_WDT distributes_VBZ work_NN units_NNS -LRB-_-LRB- database_NN segments_NNS -RRB-_-RRB- to_TO grid_NN nodes_NNS according_VBG to_TO their_PRP$ current_JJ computational_JJ power_NN ._.
5_CD ._.
#_# Database_NNP Segmentation_NNP and_CC Replication_NN Segmentation_NN consists_VBZ in_IN the_DT division_NN of_IN a_DT database_NN archive_NN in_IN many_JJ portions_NNS of_IN smaller_JJR size_NN ,_, called_VBN segments_NNS ,_, that_WDT can_MD be_VB processed_VBN independently_RB ._.
It_PRP enables_VBZ grid_NN nodes_NNS to_TO search_VB smaller_JJR parts_NNS of_IN a_DT sequence_NN database_NN ,_, reducing_VBG the_DT number_NN of_IN disk_NN accesses_NNS and_CC hence_RB improving_VBG BLAST_NN performance_NN ._.
Also_RB ,_, a_DT single_JJ query_NN sequence_NN can_MD be_VB compared_VBN against_IN all_DT segments_NNS in_IN parallel_NN ._.
Just_RB as_IN in_IN mpiBLAST_NN -LRB-_-LRB- section_NN #_# -RRB-_-RRB- ,_, we_PRP decided_VBD to_TO use_VB database_NN segmentation_NN in_IN PackageBLAST_NN with_IN an_DT NCBI_NN tool_NN called_VBN formatdb_NN ,_, which_WDT was_VBD modified_VBN to_TO generate_VB more_JJR database_NN segments_NNS of_IN smaller_JJR size_NN ._.
We_PRP opted_VBD to_TO replicate_VB the_DT segmented_JJ database_NN in_IN every_DT slave_NN grid_NN node_NN to_TO improve_VB data_NNS accesses_NNS times_NNS and_CC to_TO provide_VB a_DT potential_NN for_IN fault_NN tolerance_NN ._.
Figure_NNP #_# illustrates_VBZ this_DT ._.
5_CD ._.
#_# Task_NNP Allocation_NNP As_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- ,_, we_PRP think_VBP that_IN no_DT allocation_NN policy_NN will_MD produce_VB the_DT best_JJS results_NNS for_IN every_DT situation_NN ._.
Thus_RB ,_, we_PRP propose_VBP the_DT use_NN of_IN a_DT framework_NN where_WRB many_JJ allocation_NN policies_NNS can_MD be_VB incorporated_VBN ._.
By_IN now_RB ,_, our_PRP$ framework_NN contains_VBZ five_CD allocation_NN policies_NNS :_: Fixed_VBN ,_, SS_NN ,_, GSS_NNP ,_, TSS_NNP ,_, FAC2_NN ,_, all_DT described_VBN in_IN section_NN #_# ._.
So_RB ,_, the_DT user_NN can_MD choose_VB or_CC even_RB create_VB the_DT allocation_NN policy_NN which_WDT is_VBZ the_DT most_RBS appropriate_JJ to_TO his_PRP$ /_: her_PRP$ environment_NN and_CC his_PRP$ /_: her_PRP$ BLAST_NN parameters_NNS ._.
Besides_IN that_DT ,_, we_PRP propose_VBP PSS_NN -LRB-_-LRB- Package_NN Weighted_VBN Adaptive_JJ Self-Scheduling_NN -RRB-_-RRB- ,_, a_DT new_JJ strategy_NN that_WDT adapts_VBZ the_DT chosen_VBN allocation_NN policy_NN to_TO a_DT grid_NN with_IN local_JJ workload_NN ._.
Considering_VBG the_DT heterogeneity_NN and_CC dynamic_JJ characteristics_NNS of_IN the_DT grid_NN ,_, PSS_NN is_VBZ able_JJ to_TO modify_VB the_DT length_NN of_IN the_DT work_NN units_NNS during_IN execution_NN ,_, based_VBN on_IN average_JJ processing_NN time_NN of_IN each_DT node_NN ._.
The_DT expression_NN used_VBN for_IN work_NN unit_NN allocation_NN is_VBZ shown_VBN in_IN equation_NN ##_CD ,_, where_WRB A_NN -LRB-_-LRB- N_NN ,_, P_NN -RRB-_-RRB- is_VBZ the_DT allocation_NN policy_NN for_IN a_DT system_NN with_IN N_NN workload_NN units_NNS and_CC P_NN nodes_NNS and_CC -LRB-_-LRB- m_NN ,_, pi_NN ,_, P_NN -RRB-_-RRB- is_VBZ the_DT weight_NN calculated_VBN by_IN PSS_NN ._.
A_DT -LRB-_-LRB- N_NN ,_, P_NN -RRB-_-RRB- can_MD be_VB a_DT pre-defined_JJ allocation_NN policy_NN or_CC a_DT user-defined_JJ one_CD ._.
158_CD allocate_VB -LRB-_-LRB- m_NN ,_, pi_NN ,_, N_NN ,_, P_NN -RRB-_-RRB- =_JJ A_NN -LRB-_-LRB- N_NN ,_, P_NN -RRB-_-RRB- -LRB-_-LRB- m_NN ,_, pi_NN ,_, P_NN -RRB-_-RRB- -LRB-_-LRB- ##_CD -RRB-_-RRB- To_TO distribute_VB database_NN segments_NNS to_TO nodes_NNS ,_, the_DT master_NN analyzes_VBZ periodic_JJ slave_NN notifications_NNS ._.
The_DT expression_NN used_VBN is_VBZ -LRB-_-LRB- m_NN ,_, pi_NN ,_, P_NN -RRB-_-RRB- -LRB-_-LRB- equation_NN ##_CD -RRB-_-RRB- ,_, defined_VBN as_IN the_DT weighted_JJ mean_NN from_IN the_DT last_JJ notifications_NNS sent_VBN by_IN each_DT pi_NN slave_NN node_NN ._.
-LRB-_-LRB- m_NN ,_, pi_NN ,_, P_NN -RRB-_-RRB- =_JJ P_NN P_NN i_FW =_JJ #_# -LRB-_-LRB- m_NN ,_, pi_NN ,_, -RRB-_-RRB- -LRB-_-LRB- m_NN ,_, pi_NN ,_, -RRB-_-RRB- P_NN i_FW =_JJ #_# P_NN i_FW =_JJ #_# -LRB-_-LRB- m_NN ,_, pi_NN ,_, -RRB-_-RRB- -LRB-_-LRB- m_NN ,_, pi_NN ,_, -RRB-_-RRB- -LRB-_-LRB- ##_CD -RRB-_-RRB- -LRB-_-LRB- m_NN ,_, pi_NN ,_, -RRB-_-RRB- -LRB-_-LRB- equation_NN ##_CD -RRB-_-RRB- specifies_VBZ the_DT average_JJ computing_NN time_NN of_IN a_DT segment_NN in_IN a_DT node_NN pi_NN ,_, considering_VBG the_DT last_JJ notifications_NNS of_IN TE_NNP -LRB-_-LRB- m_NN ,_, pi_NN ,_, -RRB-_-RRB- ,_, which_WDT is_VBZ the_DT average_JJ computation_NN time_NN of_IN work_NN units_NNS -LRB-_-LRB- database_NN segments_NNS -RRB-_-RRB- assigned_VBN by_IN the_DT master_NN m_NN to_TO a_DT slave_NN pi_NN ._.
At_IN the_DT moment_NN of_IN computation_NN of_IN ,_, if_IN there_EX is_VBZ not_RB enough_JJ notifications_NNS of_IN TE_NNP ,_, the_DT calculation_NN is_VBZ done_VBN with_IN total_JJ k_NN notifications_NNS already_RB received_VBD ._.
-LRB-_-LRB- m_NN ,_, pi_NN ,_, -RRB-_-RRB- =_JJ min_NN -LRB-_-LRB- ,_, k_NN -RRB-_-RRB- j_NN =_JJ #_# T_NN E_NN -LRB-_-LRB- m_NN ,_, pi_NN ,_, -RRB-_-RRB- min_NN -LRB-_-LRB- ,_, k_NN -RRB-_-RRB- -LRB-_-LRB- ##_CD -RRB-_-RRB- 5_CD ._.
#_# PackageBLAST_NN ''_'' s_NNS General_NNP Architecture_NNP PackageBLAST_NN was_VBD designed_VBN as_IN a_DT grid_NN service_NN over_IN Globus_NNP 3_CD ,_, based_VBN on_IN Web_NN Services_NNPS and_CC Java_NNP ._.
Figure_NNP #_# presents_VBZ the_DT PackageBLAST_NN architecture_NN ._.
BLAST_NN receives_VBZ MASTER_NNP Strategies_NNS Allocation_NNP Work_NNP units_NNS Generate_VB Work_NN Units_NNS Distribute_VB Reports_NNS Generate_VB work_NN units_NNS -LRB-_-LRB- to_TO slaves_NNS -RRB-_-RRB- reports_NNS searches_NNS Figure_NNP #_# :_: PackageBLAST_NN architecture_NN ._.
The_DT module_NN Allocation_NN Strategies_NNS contains_VBZ implementations_NNS for_IN the_DT pre-defined_JJ allocation_NN policies_NNS -LRB-_-LRB- Fixed_VBN ,_, SS_NN ,_, GSS_NNP ,_, TSS_NNP and_CC FAC2_NN -RRB-_-RRB- and_CC also_RB makes_VBZ possible_JJ the_DT creation_NN of_IN new_JJ allocation_NN strategies_NNS ._.
The_DT module_NN Generate_VB Work_NN Units_NNS is_VBZ the_DT core_NN of_IN the_DT PSS_NNP mechanism_NN ._.
It_PRP calculates_VBZ the_DT weight_NN of_IN each_DT slave_NN node_NN and_CC decides_VBZ how_WRB many_JJ work_NN units_NNS will_MD be_VB assigned_VBN to_TO a_DT particular_JJ slave_NN node_NN ,_, according_VBG to_TO the_DT chosen_VBN allocation_NN policy_NN ._.
Distribute_VB Work_NNP Units_NNP is_VBZ the_DT module_NN responsible_JJ for_IN the_DT communication_NN between_IN the_DT master_NN and_CC slaves_NNS nodes_NNS ._.
It_PRP distributes_VBZ the_DT work_NN units_NNS generated_VBN by_IN the_DT previous_JJ module_NN and_CC collects_VBZ the_DT notifications_NNS ._.
Finally_RB ,_, the_DT module_NN Generate_VB Reports_NNS obtains_VBZ the_DT intermediary_JJ outputs_NNS sent_VBN by_IN the_DT slave_NN nodes_NNS through_IN file_NN transfer_NN and_CC merges_VBZ them_PRP into_IN a_DT single_JJ BLAST_NN output_NN report_NN ._.
In_IN general_JJ ,_, the_DT following_JJ execution_NN flow_NN is_VBZ executed_VBN ._.
The_DT user_NN specifies_VBZ the_DT sequence_NN to_TO be_VB compared_VBN and_CC chooses_VBZ the_DT allocation_NN strategy_NN ._.
The_DT master_NN node_NN starts_VBZ execution_NN and_CC waits_VBZ for_IN slave_NN connections_NNS ._.
To_TO start_VB processing_NN ,_, a_DT minimum_JJ number_NN of_IN slaves_NNS must_MD register_VB into_IN the_DT master_NN node_NN ,_, by_IN calling_VBG a_DT master_NN grid_NN service_NN ._.
After_IN receiving_VBG connections_NNS from_IN the_DT slaves_NNS ,_, the_DT master_NN notifies_VBZ them_PRP about_IN their_PRP$ initial_JJ segments_NNS to_TO compare_VB ._.
The_DT slave_NN processes_VBZ database_NN segments_NNS and_CC notifies_VBZ the_DT master_NN ,_, which_WDT uses_VBZ the_DT last_JJ notifications_NNS to_TO compute_VB the_DT next_JJ allocation_NN block_NN size_NN based_VBN on_IN the_DT selected_VBN allocation_NN strategy_NN and_CC the_DT weight_NN provided_VBN by_IN PSS_NN ._.
Then_RB ,_, the_DT master_NN sends_VBZ a_DT XML_NN message_NN to_TO the_DT slave_NN informing_VBG its_PRP$ new_JJ segments_NNS to_TO process_NN ._.
This_DT flow_NN continues_VBZ until_IN all_DT segments_NNS are_VBP processed_VBN ._.
6_CD ._.
EXPERIMENTAL_JJ RESULTS_NNS PackageBLAST_NN was_VBD evaluated_VBN in_IN a_DT 16-node_JJ grid_NN testbed_VBD ,_, composed_VBN by_IN two_CD laboratories_NNS ,_, interconnected_VBN by_IN a_DT localarea_NN network_NN ._.
Eleven_CD desktops_NNS -LRB-_-LRB- P01-11_NN -RRB-_-RRB- and_CC a_DT notebook_NN -LRB-_-LRB- NB_NN -RRB-_-RRB- were_VBD used_VBN in_IN LABPOS_NN and_CC four_CD desktops_NNS -LRB-_-LRB- L01-04_NN -RRB-_-RRB- were_VBD used_VBN in_IN LAICO_NN -LRB-_-LRB- table_NN #_# -RRB-_-RRB- ._.
All_DT grid_NN nodes_NNS used_VBN Linux_NN with_IN Globus_NNP #_# ._.
#_# ._.
#_# ,_, NCBI_NNP BLAST_NNP #_# ._.
#_# ._.
##_NN and_CC Java_NNP VM_NNP #_# ._.
#_# ._.
#_# ._.
Table_NNP #_# :_: Characteristics_NNS of_IN the_DT grid_NN testbed_VBD ._.
Node_VB Names_NNPS CPU_NNP Main_NNP Memory_NN HD_NN NB_NN ####_CD MHz_NNP ###_CD MB_NNP ##_CD GB_NNP L01-L03_NNP ####_CD MHz_NNP ###_CD MB_NNP ##_CD GB_NNP L04_NNP ###_CD MHz_NNP ###_CD MB_NNP #_# GB_NN P01-P10_NN ####_CD MHz_NNP ###_CD MB_NNP ##_CD GB_NNP P11_NN ###_CD MHz_NNP ###_CD MB_NNP ##_CD GB_NNP To_TO investigate_VB the_DT performance_NN gains_NNS of_IN PackageBLAST_NN ,_, we_PRP executed_VBD BLASTX_NNP in_IN #_# ,_, #_# ,_, #_# and_CC ##_CD grid_NN nodes_NNS ._.
Each_DT BLAST_NN search_NN compared_VBD a_DT 10KBP_NN real_JJ DNA_NN sequence_NN against_IN the_DT #_# ._.
2GB_NN nr_NN genetic_JJ database_NN segmented_JJ in_IN ###_CD parts_NNS of_IN 5MB_NN each_DT ._.
Fixed_VBN ,_, SS_NN ,_, TSS_NNP ,_, GSS_NNP and_CC FAC2_NN allocation_NN strategies_NNS were_VBD employed_VBN in_IN the_DT tests_NNS ._.
Execution_NN times_NNS for_IN all_DT allocation_NN strategies_NNS are_VBP presented_VBN in_IN table_NN #_# ._.
Table_NNP #_# :_: Execution_NN times_NNS for_IN BLASTX_NNP ._.
Strategy_NN #_# nodes_NNS #_# nodes_NNS #_# nodes_NNS ##_VBP nodes_NNS FIXED_VBN ####_CD ###_CD ###_CD ###_CD SS_NN ####_CD ###_CD ###_CD ###_CD TSS_NNP ####_CD ###_CD ###_CD ###_CD GSS_NNP ####_CD ###_CD ###_CD ###_CD FAC2_NN ####_CD ###_CD ###_CD ###_CD Table_NNP #_# presents_VBZ execution_NN times_NNS in_IN a_DT single_JJ machine_NN and_CC absolute_JJ speedups_NNS for_IN #_# ,_, #_# ,_, #_# and_CC ##_CD nodes_NNS ,_, considering_VBG the_DT best_JJS execution_NN time_NN for_IN a_DT given_VBN number_NN of_IN nodes_NNS ._.
To_TO calculate_VB the_DT absolute_JJ speedups_NNS ,_, the_DT BLAST_NN sequential_JJ version_NN was_VBD executed_VBN with_IN the_DT nr_NN unsegmented_JJ database_NN ._.
Table_NNP #_# :_: Sequential_JJ execution_NN times_NNS and_CC speedups_NNS ._.
Node_VB SeqTime_NNP #_# nodes_NNS #_# nodes_NNS #_# nodes_NNS ##_VBP nodes_NNS NB_NN ####_CD #_# ._.
##_NN #_# ._.
##_NN #_# ._.
##_NN ##_CD ._.
##_NN L01_NN ####_CD #_# ._.
##_NN #_# ._.
##_NN #_# ._.
##_NN ##_CD ._.
##_NN P01_NN ####_CD #_# ._.
##_NN #_# ._.
##_NN #_# ._.
##_NN ##_CD ._.
##_NN P11_NN ####_CD #_# ._.
##_NN #_# ._.
##_NN #_# ._.
##_NN ##_CD ._.
##_NN L04_NN ####_CD #_# ._.
##_NN #_# ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN PackageBLAST_NN achieved_VBD very_RB good_JJ speedups_NNS ._.
Considering_VBG the_DT worst_JJS -LRB-_-LRB- L04_NN -RRB-_-RRB- ,_, average_NN -LRB-_-LRB- P01_NN -RRB-_-RRB- and_CC best_JJS -LRB-_-LRB- NB_NN -RRB-_-RRB- node_NN in_IN the_DT grid_NN ,_, the_DT speedups_NNS obtained_VBN were_VBD superlinear_JJ ,_, close_JJ to_TO linear_JJ and_CC sublinear_JJ ,_, respectively_RB ._.
In_IN table_NN #_# ,_, it_PRP can_MD also_RB be_VB noticed_VBN that_IN there_EX is_VBZ no_DT allocation_NN strategy_NN that_WDT always_RB reaches_VBZ the_DT best_JJS execution_NN time_NN ._.
This_DT variation_NN justifies_VBZ the_DT allocation_NN framework_NN provided_VBN ._.
To_TO evaluate_VB PSS_NNP ,_, we_PRP executed_VBD PackageBLAST_NN with_IN ##_CD grid_NN nodes_NNS ,_, introducing_VBG local_JJ workload_NN in_IN nodes_NNS L01_NN ,_, L02_NN ,_, P01_NN and_CC P02_NN ._.
The_DT load_NN was_VBD started_VBN simultaneously_RB ##_CD seconds_NNS after_IN the_DT beginning_NN of_IN BLAST_NN and_CC consisted_VBD of_IN the_DT 159_CD execution_NN of_IN formatdb_NN on_IN the_DT nr_NN database_NN ._.
Three_CD scenarios_NNS were_VBD simulated_JJ -LRB-_-LRB- table_NN #_# -RRB-_-RRB- :_: #_# -RRB-_-RRB- with_IN PSS_NN strategy_NN ,_, but_CC without_IN workload_NN ;_: #_# -RRB-_-RRB- with_IN PSS_NN strategy_NN and_CC workload_NN -LRB-_-LRB- PSS_NN 2x_NN -RRB-_-RRB- ,_, to_TO use_VB grid_NN environment_NN knowledge_NN obtained_VBN in_IN the_DT preceeding_VBG iteration_NN ;_: and_CC #_# -RRB-_-RRB- Execution_NN without_IN PSS_NNP and_CC with_IN workload_NN ._.
Table_NNP #_# :_: PSS_NN evaluation_NN with_IN local_JJ workload_NN ._.
Gain_NN is_VBZ the_DT comparison_NN of_IN without_IN PSS_NN with_IN PSS_NN 2x_NN Strategy_NN with_IN PSS_NN PSS_NN 2x_NN without_IN PSS_NNP Gain_NNP Fixed_NNP ###_CD ###_CD ###_CD ###_CD ._.
##_CD %_NN SS_NN ###_CD ###_CD ###_CD #_# ._.
##_CD %_NN TSS_NN ###_CD ###_CD ###_CD #_# ._.
##_CD %_NN GSS_NN ###_CD ###_CD ###_CD ###_CD ._.
##_CD %_NN FAC2_NN ###_CD ###_CD ###_SYM -_: #_# ._.
##_CD %_NN As_IN expected_VBN ,_, the_DT allocation_NN strategies_NNS that_WDT assign_VBP a_DT large_JJ amount_NN of_IN work_NN to_TO the_DT nodes_NNS -LRB-_-LRB- fixed_VBN and_CC GSS_NN -RRB-_-RRB- obtained_VBN great_JJ benefit_NN from_IN using_VBG PSS_NNP ._.
This_DT is_VBZ due_JJ to_TO the_DT fact_NN that_IN a_DT slow_JJ node_NN can_MD easily_RB become_VB a_DT bottleneck_NN in_IN these_DT strategies_NNS ._.
TSS_NN also_RB obtained_VBD a_DT reduction_NN of_IN #_# ._.
##_CD %_NN in_IN its_PRP$ execution_NN time_NN ._.
PSS_NNP uses_VBZ two_CD parameters_NNS :_: and_CC -LRB-_-LRB- section_NN #_# ._.
#_# -RRB-_-RRB- ._.
We_PRP varied_VBD these_DT parameters_NNS in_IN order_NN to_TO evaluate_VB the_DT PSS_NN behavior_NN in_IN two_CD scenarios_NNS ._.
In_IN both_DT cases_NNS ,_, we_PRP used_VBD a_DT four-node_JJ -LRB-_-LRB- NB_NN ,_, L01_NN ,_, P01_NN ,_, L04_NN -RRB-_-RRB- grid_NN ._.
In_IN the_DT first_JJ experiment_NN ,_, a_DT local_JJ workload_NN -LRB-_-LRB- formatdb_NN -RRB-_-RRB- was_VBD introduced_VBN when_WRB the_DT last_JJ task_NN of_IN the_DT first_JJ TSS_NN allocation_NN starts_VBZ and_CC was_VBD stopped_VBN immediately_RB after_IN the_DT processing_NN of_IN one_CD segment_NN ._.
The_DT goal_NN was_VBD to_TO evaluate_VB the_DT impact_NN of_IN short-lived_JJ local_JJ tasks_NNS in_IN PSS_NNP ._.
In_IN the_DT second_JJ case_NN ,_, local_JJ workload_NN was_VBD introduced_VBN at_IN the_DT same_JJ time_NN of_IN the_DT previous_JJ case_NN ,_, but_CC continued_VBD until_IN the_DT end_NN ._.
The_DT goal_NN was_VBD to_TO evaluate_VB long-lived_JJ local_JJ tasks_NNS ._.
Figure_NNP #_# presents_VBZ the_DT gains_NNS ._.
Figure_NNP #_# :_: Percentual_JJ gain_NN obtained_VBN by_IN PSS_NN varying_VBG and_CC parameters_NNS ._.
In_IN scenario_NN #_# ,_, when_WRB a_DT very_RB recent_JJ history_NN is_VBZ considered_VBN -LRB-_-LRB- =_JJ #_# and_CC =_JJ #_# -RRB-_-RRB- ,_, PSS_NN tries_VBZ to_TO adapt_VB to_TO a_DT situation_NN that_WDT will_MD shortly_RB disappear_VB ._.
For_IN =_JJ #_# and_CC =_JJ #_# ,_, PSS_NN takes_VBZ longer_JJR to_TO notice_VB modification_NN and_CC short-lived_JJ tasks_NNS have_VBP low_JJ impact_NN ._.
On_IN the_DT other_JJ hand_NN ,_, in_IN scenario_NN #_# ,_, =_JJ #_# ,_, =_JJ #_# presents_VBZ better_JJR results_NNS than_IN =_JJ #_# ,_, =_JJ #_# ,_, because_IN it_PRP changes_VBZ weights_NNS faster_RBR ._.
7_CD ._.
CONCLUSION_NN In_IN this_DT article_NN ,_, we_PRP proposed_VBD and_CC evaluated_VBD PackageBLAST_NN ,_, an_DT adaptive_JJ multi-policy_JJ grid_NN service_NN to_TO execute_VB master_NN /_: slave_NN BLAST_NN searches_NNS ._.
PackageBLAST_NN contains_VBZ a_DT framework_NN where_WRB the_DT user_NN can_MD choose_VB or_CC incorporate_VB allocation_NN policies_NNS ._.
We_PRP also_RB defined_VBD a_DT strategy_NN ,_, PSS_NN ,_, that_WDT adapts_VBZ the_DT chosen_VBN policy_NN to_TO a_DT heterogeneous_JJ non-dedicated_JJ grid_NN environment_NN ._.
The_DT results_NNS collected_VBN by_IN running_VBG PackageBLAST_NN with_IN #_# allocation_NN policies_NNS in_IN a_DT grid_NN testbed_VBN were_VBD very_RB good_JJ ._.
In_IN order_NN to_TO compare_VB a_DT 10KBP_NN real_JJ DNA_NN sequence_NN against_IN the_DT nr_NN genetic_JJ database_NN ,_, we_PRP were_VBD able_JJ to_TO reduce_VB execution_NN time_NN from_IN ##_CD ._.
##_NN min_NN to_TO #_# ._.
##_NN min_NN ._.
Also_RB ,_, we_PRP showed_VBD that_IN ,_, in_IN our_PRP$ testbed_VBN ,_, there_EX is_VBZ no_DT allocation_NN policy_NN that_WDT always_RB achieves_VBZ the_DT best_JJS performance_NN and_CC that_IN makes_VBZ evident_JJ the_DT importance_NN of_IN providing_VBG multiple_JJ policies_NNS ._.
Moreover_RB ,_, we_PRP showed_VBD that_IN the_DT introduction_NN of_IN PSS_NN led_VBD to_TO very_RB good_JJ performance_NN gains_NNS for_IN some_DT policies_NNS ._.
As_IN future_JJ work_NN ,_, we_PRP intend_VBP to_TO run_VB PackageBLAST_NN in_IN a_DT geographically_RB dispersed_VBN grid_NN ,_, to_TO evaluate_VB the_DT impact_NN of_IN high_JJ network_NN latencies_NNS in_IN the_DT allocation_NN policies_NNS and_CC in_IN PSS_NNP ._.
Also_RB ,_, we_PRP intend_VBP to_TO provide_VB support_NN for_IN genomic_JJ database_NN synchronization_NN and_CC dynamic_JJ join_VB /_: leave_VB operations_NNS for_IN slaves_NNS ._.
8_CD ._.
REFERENCES_NNS -LSB-_-LRB- #_# -RSB-_-RRB- S_NN ._.
F_NN ._.
Altschul_NNP ,_, W_NNP ._.
Gish_NNP ,_, W_NNP ._.
Miller_NNP ,_, E_NNP ._.
W_NN ._.
Myers_NNP ,_, and_CC D_NN ._.
J_NN ._.
Lipman_NNP ._.
A_DT basic_JJ local_JJ alignment_NN search_NN tool_NN ._.
Journal_NNP of_IN Molecular_JJ Biology_NNP ,_, ###_CD :_: 403-410_CD ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- A_DT ._.
Darling_NN ,_, L_NN ._.
Carey_NNP ,_, and_CC W_NN ._.
Feng_NNP ._.
The_DT design_NN ,_, implementation_NN ,_, and_CC evaluation_NN of_IN mpiblast_NN ._.
4th_JJ International_JJ Conference_NN on_IN Linux_NNP Clusters_NNS ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- S_NN ._.
F_NN ._.
A_DT ._.
et_FW al_FW ._.
Gapped_NNP blast_NN and_CC psi-blast_NN :_: a_DT new_JJ generation_NN of_IN protein_NN database_NN search_NN programs_NNS ._.
Nucleic_JJ Acids_NNP Research_NNP ,_, ##_CD -LRB-_-LRB- ##_CD -RRB-_-RRB- :_: 3389-3402_CD ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- I_PRP ._.
Foster_NNP and_CC C_NNP ._.
Kesselman_NNP ._.
Globus_NNP :_: A_NNP metacomputing_JJ infrastructure_NN toolkit_NN ._.
International_NNP Journal_NNP of_IN Supercomputer_NNP Applications_NNS ,_, ##_NN -LRB-_-LRB- #_# -RRB-_-RRB- :_: 115-128_CD ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- I_PRP ._.
Foster_NNP and_CC C_NNP ._.
Kesselman_NNP ._.
The_DT Grid_NNP :_: Blueprint_NN of_IN a_DT Future_NNP Computing_NNP Infrastructure_NNP ._.
Morgan-Kauffman_NNP ,_, 1999_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- W_NN ._.
Gish_NNP ._.
Washington_NNP university_NN blast_NN ._.
http_NN :_: /_: /_: blast_NN ._.
wustl_NN ._.
edu_NN ,_, 1996-2002_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- D_NN ._.
Gusfield_NNP ._.
Algorithms_NNS on_IN Strings_NNP ,_, Trees_NNP and_CC Sequences_NNS ._.
Cambridge_NNP University_NNP Press_NNP ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- S_NN ._.
F_NN ._.
Hummel_NNP ,_, E_NNP ._.
Schonberg_NNP ,_, and_CC L_NN ._.
E_NN ._.
Flynn_NNP ._.
Factoring_NN :_: A_DT method_NN for_IN scheduling_NN parallel_NN loops_NNS ._.
Communications_NNPS of_IN the_DT ACM_NNP ,_, ##_CD -LRB-_-LRB- #_# -RRB-_-RRB- :_: 90-101_CD ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- A_DT ._.
Krishnan_NNP ._.
Gridblast_NNP :_: High_NNP throughput_NN blast_NN on_IN the_DT grid_NN ._.
Symposium_NNP on_IN Biocomputing_NNP ,_, January_NNP ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- D_NN ._.
Peng_NNP ._.
,_, W_NNP ._.
Yan_NNP ,_, and_CC Z_NN ._.
Lei_NN ._.
Parallelization_NN of_IN blast_NN +_CC +_CC ._.
Technical_NNP report_NN ,_, Singapore-MIT_NNP ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- C_NN ._.
D_NN ._.
Polychronopoulos_NNP and_CC D_NNP ._.
J_NN ._.
Kuck_NNP ._.
Guided_VBN self-scheduling_NN :_: A_DT practical_JJ scheduling_NN scheme_NN for_IN parallel_JJ supercomputers_NNS ._.
IEEE_NNP Transactions_NNS on_IN Computers_NNS ,_, ##_NN -LRB-_-LRB- ##_NN -RRB-_-RRB- :_: 1425-1439_CD ,_, Dec_NNP ._.
####_NN ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- M_NN ._.
K_NN ._.
Satish_NNP and_CC R_NN ._.
R_NN ._.
Joshi_NNP ._.
Gbtk_NNP :_: A_NNP toolkit_NN for_IN grid_NN implementation_NN of_IN blast_NN ._.
7th_NNP International_NNP Conference_NNP HPCAsia_NNP ,_, pages_NNS 378-382_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- G_NN ._.
Shao_NNP ._.
Adaptive_JJ Scheduling_NN of_IN Master_NN /_: Worker_NNP Applications_NNS on_IN Distributed_VBN Computational_NNP Resources_NNPS ._.
PhD_NN thesis_NN ,_, Univ_NNP ._.
California_NNP at_IN San_NNP Diego_NNP ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- T_NN ._.
Smith_NNP and_CC M_NN ._.
Waterman_NNP ._.
Identification_NN of_IN common_JJ molecular_JJ subsequences_NNS ._.
J_NN ._.
Mol_NNP ._.
Biol_NNP ._.
,_, ###_CD :_: 195-197_CD ,_, 1981_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- P_NN ._.
Tang_NNP and_CC P_NN ._.
C_NN ._.
Yew_NNP ._.
Processor_NN self-scheduling_NN for_IN multiple_JJ nested_JJ parallel_NN loops_NNS ._.
In_IN Int_NN ._.
Conf_NNP ._.
on_IN Parallel_JJ Processing_NN -LRB-_-LRB- ICPP_NN -RRB-_-RRB- ,_, pages_NNS 528-535_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- T_NN ._.
H_NN ._.
Tzen_NNP and_CC L_NNP ._.
M_NN ._.
Ni_NN ._.
Trapezoidal_JJ self-scheduling_NN :_: A_DT practical_JJ scheme_NN for_IN parallel_JJ compilers_NNS ._.
IEEE_NNP Transactions_NNS on_IN Parallel_JJ and_CC Distributed_VBN Systems_NNPS ,_, 4_CD -LRB-_-LRB- #_# -RRB-_-RRB- :_: 87-98_CD ,_, Jan_NNP ._.
####_NN ._.
160_CD
