Truthful_JJ Mechanism_NN Design_NN for_IN Multi-Dimensional_JJ Scheduling_NN via_IN Cycle_NNP Monotonicity_NNP Ron_NNP Lavi_NNP Industrial_NNP Engineering_NNP and_CC Management_NNP The_NNP Technion_NNP -_: Israel_NNP Institute_NNP of_IN Technology_NNP ronlavi_NN @_IN ie_FW ._.
technion_NN ._.
ac_NN ._.
il_NNP Chaitanya_NNP Swamy_NNP Combinatorics_NNPS and_CC Optimization_NNP University_NNP of_IN Waterloo_NNP cswamy_NN @_IN math_NN ._.
uwaterloo_NN ._.
ca_MD ABSTRACT_NN We_PRP consider_VBP the_DT problem_NN of_IN makespan_JJ minimization_NN on_IN m_NN unrelated_JJ machines_NNS in_IN the_DT context_NN of_IN algorithmic_JJ mechanism_NN design_NN ,_, where_WRB the_DT machines_NNS are_VBP the_DT strategic_JJ players_NNS ._.
This_DT is_VBZ a_DT multidimensional_JJ scheduling_NN domain_NN ,_, and_CC the_DT only_RB known_JJ positive_JJ results_NNS for_IN makespan_JJ minimization_NN in_IN such_JJ a_DT domain_NN are_VBP O_NN -LRB-_-LRB- m_NN -RRB-_-RRB- -_: approximation_NN truthful_JJ mechanisms_NNS -LSB-_-LRB- ##_NNS ,_, ##_NN -RSB-_-RRB- ._.
We_PRP study_VBP a_DT well-motivated_JJ special_JJ case_NN of_IN this_DT problem_NN ,_, where_WRB the_DT processing_NN time_NN of_IN a_DT job_NN on_IN each_DT machine_NN may_MD either_RB be_VB low_JJ or_CC high_JJ ,_, and_CC the_DT low_JJ and_CC high_JJ values_NNS are_VBP public_JJ and_CC job-dependent_JJ ._.
This_DT preserves_VBZ the_DT multidimensionality_NN of_IN the_DT domain_NN ,_, and_CC generalizes_VBZ the_DT restricted-machines_NNS -LRB-_-LRB- i_FW ._.
e_LS ._.
,_, -LCB-_-LRB- pj_NN ,_, -RCB-_-RRB- -RRB-_-RRB- setting_NN in_IN scheduling_NN ._.
We_PRP give_VBP a_DT general_JJ technique_NN to_TO convert_VB any_DT c-approximation_NN algorithm_NN to_TO a_DT 3capproximation_NN truthful-in-expectation_NN mechanism_NN ._.
This_DT is_VBZ one_CD of_IN the_DT few_JJ known_JJ results_NNS that_WDT shows_VBZ how_WRB to_TO export_VB approximation_NN algorithms_NNS for_IN a_DT multidimensional_JJ problem_NN into_IN truthful_JJ mechanisms_NNS in_IN a_DT black-box_JJ fashion_NN ._.
When_WRB the_DT low_JJ and_CC high_JJ values_NNS are_VBP the_DT same_JJ for_IN all_DT jobs_NNS ,_, we_PRP devise_VBP a_DT deterministic_JJ 2-approximation_NN truthful_JJ mechanism_NN ._.
These_DT are_VBP the_DT first_JJ truthful_JJ mechanisms_NNS with_IN non-trivial_JJ performance_NN guarantees_NNS for_IN a_DT multidimensional_JJ scheduling_NN domain_NN ._.
Our_PRP$ constructions_NNS are_VBP novel_JJ in_IN two_CD respects_NNS ._.
First_RB ,_, we_PRP do_VBP not_RB utilize_VB or_CC rely_VB on_IN explicit_JJ price_NN definitions_NNS to_TO prove_VB truthfulness_NN ;_: instead_RB we_PRP design_VBP algorithms_NNS that_WDT satisfy_VBP cycle_NN monotonicity_NN ._.
Cycle_NN monotonicity_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- is_VBZ a_DT necessary_JJ and_CC sufficient_JJ condition_NN for_IN truthfulness_NN ,_, is_VBZ a_DT generalization_NN of_IN value_NN monotonicity_NN for_IN multidimensional_JJ domains_NNS ._.
However_RB ,_, whereas_IN value_NN monotonicity_NN has_VBZ been_VBN used_VBN extensively_RB and_CC successfully_RB to_TO design_VB truthful_JJ mechanisms_NNS in_IN singledimensional_JJ domains_NNS ,_, ours_PRP is_VBZ the_DT first_JJ work_NN that_WDT leverages_VBZ cycle_NN monotonicity_NN in_IN the_DT multidimensional_JJ setting_NN ._.
Second_RB ,_, our_PRP$ randomized_JJ mechanisms_NNS are_VBP obtained_VBN by_IN first_JJ constructing_VBG a_DT fractional_JJ truthful_JJ mechanism_NN for_IN a_DT fractional_JJ relaxation_NN of_IN the_DT problem_NN ,_, and_CC then_RB converting_VBG it_PRP into_IN a_DT truthfulin-expectation_JJ mechanism_NN ._.
This_DT builds_VBZ upon_IN a_DT technique_NN of_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- ,_, and_CC shows_VBZ the_DT usefulness_NN of_IN fractional_JJ mechanisms_NNS in_IN truthful_JJ mechanism_NN design_NN ._.
Categories_NNS and_CC Subject_NNP Descriptors_NNPS F_NN ._.
#_# -LSB-_-LRB- Analysis_NN of_IN Algorithms_NNS and_CC Problem_NNP Complexity_NNP -RSB-_-RRB- ;_: J_NN ._.
#_# -LSB-_-LRB- Social_NNP and_CC Behavioral_NNP Sciences_NNPS -RSB-_-RRB- :_: Economics_NNP General_NNP Terms_NNS Algorithms_NNS ,_, Economics_NNP ,_, Theory_NNP 1_CD ._.
INTRODUCTION_NNP Mechanism_NN design_NN studies_NNS algorithmic_JJ constructions_NNS under_IN the_DT presence_NN of_IN strategic_JJ players_NNS who_WP hold_VBP the_DT inputs_NNS to_TO the_DT algorithm_NN ._.
Algorithmic_JJ mechanism_NN design_NN has_VBZ focused_VBN mainly_RB on_IN settings_NNS were_VBD the_DT social_JJ planner_NN or_CC designer_NN wishes_NNS to_TO maximize_VB the_DT social_JJ welfare_NN -LRB-_-LRB- or_CC equivalently_RB ,_, minimize_VBP social_JJ cost_NN -RRB-_-RRB- ,_, or_CC on_IN auction_NN settings_NNS where_WRB revenuemaximization_NN is_VBZ the_DT main_JJ goal_NN ._.
Alternative_JJ optimization_NN goals_NNS ,_, such_JJ as_IN those_DT that_WDT incorporate_VBP fairness_NN criteria_NNS -LRB-_-LRB- which_WDT have_VBP been_VBN investigated_VBN algorithmically_RB and_CC in_IN social_JJ choice_NN theory_NN -RRB-_-RRB- ,_, have_VBP received_VBN very_RB little_JJ or_CC no_DT attention_NN ._.
In_IN this_DT paper_NN ,_, we_PRP consider_VBP such_JJ an_DT alternative_JJ goal_NN in_IN the_DT context_NN of_IN machine_NN scheduling_NN ,_, namely_RB ,_, makespan_JJ minimization_NN ._.
There_EX are_VBP n_NN jobs_NNS or_CC tasks_NNS that_WDT need_VBP to_TO be_VB assigned_VBN to_TO m_NN machines_NNS ,_, where_WRB each_DT job_NN has_VBZ to_TO be_VB assigned_VBN to_TO exactly_RB one_CD machine_NN ._.
Assigning_VBG a_DT job_NN j_NN to_TO a_DT machine_NN i_FW incurs_VBZ a_DT load_NN -LRB-_-LRB- cost_NN -RRB-_-RRB- of_IN pij_NN #_# on_IN machine_NN i_FW ,_, and_CC the_DT load_NN of_IN a_DT machine_NN is_VBZ the_DT sum_NN of_IN the_DT loads_NNS incurred_VBN due_JJ to_TO the_DT jobs_NNS assigned_VBN to_TO it_PRP ;_: the_DT goal_NN is_VBZ to_TO schedule_VB the_DT jobs_NNS so_RB as_IN to_TO minimize_VB the_DT maximum_NN load_NN of_IN a_DT machine_NN ,_, which_WDT is_VBZ termed_VBN the_DT makespan_NN of_IN the_DT schedule_NN ._.
Makespan_JJ minimization_NN is_VBZ a_DT common_JJ objective_NN in_IN scheduling_NN environments_NNS ,_, and_CC has_VBZ been_VBN well_RB studied_VBN algorithmically_RB in_IN both_CC the_DT Computer_NNP Science_NNP and_CC Operations_NNP Research_NNP communities_NNS ._.
Following_VBG the_DT work_NN of_IN Nisan_NNP and_CC Ronen_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- ,_, we_PRP consider_VBP each_DT machine_NN to_TO be_VB a_DT strategic_JJ player_NN or_CC agent_NN who_WP privately_RB knows_VBZ its_PRP$ own_JJ processing_NN time_NN for_IN each_DT job_NN ,_, and_CC may_MD misrepresent_VB these_DT values_NNS in_IN order_NN to_TO decrease_VB its_PRP$ load_NN -LRB-_-LRB- which_WDT is_VBZ its_PRP$ incurred_VBN cost_NN -RRB-_-RRB- ._.
Hence_RB ,_, we_PRP approach_VBP the_DT problem_NN via_IN mechanism_NN design_NN :_: the_DT social_JJ designer_NN ,_, who_WP holds_VBZ the_DT set_NN of_IN jobs_NNS to_TO be_VB assigned_VBN ,_, needs_VBZ to_TO specify_VB ,_, in_IN addition_NN to_TO a_DT schedule_NN ,_, suitable_JJ payments_NNS to_TO the_DT players_NNS in_IN order_NN to_TO incentivize_VB them_PRP to_TO reveal_VB their_PRP$ true_JJ processing_NN times_NNS ._.
Such_PDT a_DT mechanism_NN is_VBZ called_VBN a_DT truthful_JJ mechanism_NN ._.
The_DT makespan-minimization_JJ objective_NN is_VBZ quite_RB different_JJ from_IN the_DT classic_JJ goal_NN of_IN social-welfare_JJ maximization_NN ,_, where_WRB one_CD wants_VBZ to_TO maximize_VB the_DT total_JJ welfare_NN -LRB-_-LRB- or_CC minimize_VB the_DT total_JJ cost_NN -RRB-_-RRB- of_IN all_DT players_NNS ._.
Instead_RB ,_, it_PRP 252_CD corresponds_VBZ to_TO maximizing_VBG the_DT minimum_JJ welfare_NN and_CC the_DT notion_NN of_IN max-min_JJ fairness_NN ,_, and_CC appears_VBZ to_TO be_VB a_DT much_JJ harder_JJR problem_NN from_IN the_DT viewpoint_NN of_IN mechanism_NN design_NN ._.
In_IN particular_JJ ,_, the_DT celebrated_JJ VCG_NN -LSB-_-LRB- ##_CD ,_, #_# ,_, ##_NN -RSB-_-RRB- family_NN of_IN mechanisms_NNS does_VBZ not_RB apply_VB here_RB ,_, and_CC we_PRP need_VBP to_TO devise_VB new_JJ techniques_NNS ._.
The_DT possibility_NN of_IN constructing_VBG a_DT truthful_JJ mechanism_NN for_IN makespan_JJ minimization_NN is_VBZ strongly_RB related_JJ to_TO assumptions_NNS on_IN the_DT players_NNS ''_'' processing_NN times_NNS ,_, in_IN particular_JJ ,_, the_DT dimensionality_NN of_IN the_DT domain_NN ._.
Nisan_NNP and_CC Ronen_NNP considered_VBD the_DT setting_NN of_IN unrelated_JJ machines_NNS where_WRB the_DT pij_NN values_NNS may_MD be_VB arbitrary_JJ ._.
This_DT is_VBZ a_DT multidimensional_JJ domain_NN ,_, since_IN a_DT player_NN ''_'' s_NNS private_JJ value_NN is_VBZ its_PRP$ entire_JJ vector_NN of_IN processing_NN times_NNS -LRB-_-LRB- pij_NN -RRB-_-RRB- j_NN ._.
Very_RB few_JJ positive_JJ results_NNS are_VBP known_VBN for_IN multidimensional_JJ domains_NNS in_IN general_JJ ,_, and_CC the_DT only_JJ positive_JJ results_NNS known_VBN for_IN multidimensional_JJ scheduling_NN are_VBP O_NN -LRB-_-LRB- m_NN -RRB-_-RRB- -_: approximation_NN truthful_JJ mechanisms_NNS -LSB-_-LRB- ##_NNS ,_, ##_NN -RSB-_-RRB- ._.
We_PRP emphasize_VBP that_IN regardless_RB of_IN computational_JJ considerations_NNS ,_, even_RB the_DT existence_NN of_IN a_DT truthful_JJ mechanism_NN with_IN a_DT significantly_RB better_JJR -LRB-_-LRB- than_IN m_NN -RRB-_-RRB- approximation_NN ratio_NN is_VBZ not_RB known_VBN for_IN any_DT such_JJ scheduling_NN domain_NN ._.
On_IN the_DT negative_JJ side_NN ,_, -LSB-_-LRB- ##_CD -RSB-_-RRB- showed_VBD that_IN no_DT truthful_JJ deterministic_JJ mechanism_NN can_MD achieve_VB approximation_NN ratio_NN better_JJR than_IN #_# ,_, and_CC strengthened_VBD this_DT lower_JJR bound_VBN to_TO m_NN for_IN two_CD specific_JJ classes_NNS of_IN deterministic_JJ mechanisms_NNS ._.
Recently_RB ,_, -LSB-_-LRB- ##_CD -RSB-_-RRB- extended_VBD this_DT lower_JJR bound_VBN to_TO randomized_JJ mechanisms_NNS ,_, and_CC -LSB-_-LRB- #_# -RSB-_-RRB- improved_VBD the_DT deterministic_JJ lower_JJR bound_VBN ._.
In_IN stark_JJ contrast_NN with_IN the_DT above_JJ state_NN of_IN affairs_NNS ,_, much_RB stronger_JJR -LRB-_-LRB- and_CC many_JJ more_JJR -RRB-_-RRB- positive_JJ results_NNS are_VBP known_VBN for_IN a_DT special_JJ case_NN of_IN the_DT unrelated_JJ machines_NNS problem_NN ,_, namely_RB ,_, the_DT setting_NN of_IN related_JJ machines_NNS ._.
Here_RB ,_, we_PRP have_VBP pij_NN =_JJ pj_NN /_: si_NNS for_IN every_DT i_FW ,_, j_NN ,_, where_WRB pj_NN is_VBZ public_JJ knowledge_NN ,_, and_CC the_DT speed_NN si_NN is_VBZ the_DT only_JJ private_JJ parameter_NN of_IN machine_NN i_FW ._.
This_DT assumption_NN makes_VBZ the_DT domain_NN of_IN players_NNS ''_'' types_NNS single-dimensional_JJ ._.
Truthfulness_NN in_IN such_JJ domains_NNS is_VBZ equivalent_JJ to_TO a_DT convenient_JJ value-monotonicity_NN condition_NN -LSB-_-LRB- ##_CD ,_, #_# -RSB-_-RRB- ,_, which_WDT appears_VBZ to_TO make_VB it_PRP significantly_RB easier_JJR to_TO design_VB truthful_JJ mechanisms_NNS in_IN such_JJ domains_NNS ._.
Archer_NNP and_CC Tardos_NNP -LSB-_-LRB- #_# -RSB-_-RRB- first_RB considered_VBN the_DT related_JJ machines_NNS setting_VBG and_CC gave_VBD a_DT randomized_VBN 3-approximation_NN truthful-in-expectation_NN mechanism_NN ._.
The_DT gap_NN between_IN the_DT single-dimensional_JJ and_CC multidimensional_JJ domains_NNS is_VBZ perhaps_RB best_RB exemplified_VBN by_IN the_DT fact_NN that_IN -LSB-_-LRB- #_# -RSB-_-RRB- showed_VBD that_IN there_EX exists_VBZ a_DT truthful_JJ mechanism_NN that_WDT always_RB outputs_VBZ an_DT optimal_JJ schedule_NN ._.
-LRB-_-LRB- Recall_VB that_IN in_IN the_DT multidimensional_JJ unrelated_JJ machines_NNS setting_VBG ,_, it_PRP is_VBZ impossible_JJ to_TO obtain_VB a_DT truthful_JJ mechanism_NN with_IN approximation_NN ratio_NN better_JJR than_IN #_# ._. -RRB-_-RRB-
Various_JJ follow-up_NN results_VBZ -LSB-_-LRB- #_# ,_, #_# ,_, #_# ,_, ##_NN -RSB-_-RRB- have_VBP strengthened_VBN the_DT notion_NN of_IN truthfulness_NN and_CC /_: or_CC improved_VBD the_DT approximation_NN ratio_NN ._.
Such_JJ difficulties_NNS in_IN moving_VBG from_IN the_DT single-dimensional_JJ to_TO the_DT multidimensional_JJ setting_NN also_RB arise_VB in_IN other_JJ mechanism_NN design_NN settings_NNS -LRB-_-LRB- e_LS ._.
g_NN ._.
,_, combinatorial_JJ auctions_NNS -RRB-_-RRB- ._.
Thus_RB ,_, in_IN addition_NN to_TO the_DT specific_JJ importance_NN of_IN scheduling_NN in_IN strategic_JJ environments_NNS ,_, ideas_NNS from_IN multidimensional_JJ scheduling_NN may_MD also_RB have_VB a_DT bearing_NN in_IN the_DT more_RBR general_JJ context_NN of_IN truthful_JJ mechanism_NN design_NN for_IN multidimensional_JJ domains_NNS ._.
In_IN this_DT paper_NN ,_, we_PRP consider_VBP the_DT makespan-minimization_NN problem_NN for_IN a_DT special_JJ case_NN of_IN unrelated_JJ machines_NNS ,_, where_WRB the_DT processing_NN time_NN of_IN a_DT job_NN is_VBZ either_RB low_JJ or_CC high_JJ on_IN each_DT machine_NN ._.
More_RBR precisely_RB ,_, in_IN our_PRP$ setting_NN ,_, pij_NN -LCB-_-LRB- Lj_NN ,_, Hj_NN -RCB-_-RRB- for_IN every_DT i_FW ,_, j_NN ,_, where_WRB the_DT Lj_NNP ,_, Hj_NNP values_NNS are_VBP publicly_RB known_VBN -LRB-_-LRB- Lj_NNP low_JJ ,_, Hj_NN high_JJ -RRB-_-RRB- ._.
We_PRP call_VBP this_DT model_NN the_DT jobdependent_JJ two-values_NNS case_NN ._.
This_DT model_NN generalizes_VBZ the_DT classic_JJ restricted_JJ machines_NNS setting_VBG ,_, where_WRB pij_NN -LCB-_-LRB- Lj_NN ,_, -RCB-_-RRB- which_WDT has_VBZ been_VBN well-studied_JJ algorithmically_RB ._.
A_DT special_JJ case_NN of_IN our_PRP$ model_NN is_VBZ when_WRB Lj_NN =_JJ L_NN and_CC Hj_NN =_JJ H_NN for_IN all_DT jobs_NNS j_NN ,_, which_WDT we_PRP denote_VBP simply_RB as_IN the_DT two-values_NNS scheduling_NN model_NN ._.
Both_DT of_IN our_PRP$ domains_NNS are_VBP multidimensional_JJ ,_, since_IN the_DT machines_NNS are_VBP unrelated_JJ :_: one_CD job_NN may_MD be_VB low_JJ on_IN one_CD machine_NN and_CC high_JJ on_IN the_DT other_JJ ,_, while_IN another_DT job_NN may_MD follow_VB the_DT opposite_JJ pattern_NN ._.
Thus_RB ,_, the_DT private_JJ information_NN of_IN each_DT machine_NN is_VBZ a_DT vector_NN specifying_VBG which_WDT jobs_NNS are_VBP low_JJ and_CC high_JJ on_IN it_PRP ._.
Thus_RB ,_, they_PRP retain_VBP the_DT core_NN property_NN underlying_VBG the_DT hardness_NN of_IN truthful_JJ mechanism_NN design_NN for_IN unrelated_JJ machines_NNS ,_, and_CC by_IN studying_VBG these_DT special_JJ settings_NNS we_PRP hope_VBP to_TO gain_VB some_DT insights_NNS that_WDT will_MD be_VB useful_JJ for_IN tackling_VBG the_DT general_JJ problem_NN ._.
Our_PRP$ Results_NNS and_CC Techniques_NNS We_PRP present_VBP various_JJ positive_JJ results_NNS for_IN our_PRP$ multidimensional_JJ scheduling_NN domains_NNS ._.
Our_PRP$ first_JJ result_NN is_VBZ a_DT general_JJ method_NN to_TO convert_VB any_DT capproximation_NN algorithm_NN for_IN the_DT job-dependent_JJ two_CD values_NNS setting_VBG into_IN a_DT 3c-approximation_JJ truthful-in-expectation_NN mechanism_NN ._.
This_DT is_VBZ one_CD of_IN the_DT very_RB few_JJ known_VBN results_NNS that_WDT use_VBP an_DT approximation_NN algorithm_NN in_IN a_DT black-box_JJ fashion_NN to_TO obtain_VB a_DT truthful_JJ mechanism_NN for_IN a_DT multidimensional_JJ problem_NN ._.
Our_PRP$ result_VBP implies_VBZ that_IN there_EX exists_VBZ a_DT 3-approximation_JJ truthfulin-expectation_NN mechanism_NN for_IN the_DT Lj-Hj_NN setting_NN ._.
Interestingly_RB ,_, the_DT proof_NN of_IN truthfulness_NN is_VBZ not_RB based_VBN on_IN supplying_VBG explicit_JJ prices_NNS ,_, and_CC our_PRP$ construction_NN does_VBZ not_RB necessarily_RB yield_VB efficiently-computable_JJ prices_NNS -LRB-_-LRB- but_CC the_DT allocation_NN rule_NN is_VBZ efficiently_RB computable_JJ -RRB-_-RRB- ._.
Our_PRP$ second_JJ result_NN applies_VBZ to_TO the_DT twovalues_NNS setting_VBG -LRB-_-LRB- Lj_NN =_JJ L_NN ,_, Hj_NN =_JJ H_NN -RRB-_-RRB- ,_, for_IN which_WDT we_PRP improve_VBP both_CC the_DT approximation_NN ratio_NN and_CC strengthen_VB the_DT notion_NN of_IN truthfulness_NN ._.
We_PRP obtain_VB a_DT deterministic_JJ 2-approximation_NN truthful_JJ mechanism_NN -LRB-_-LRB- along_IN with_IN prices_NNS -RRB-_-RRB- for_IN this_DT problem_NN ._.
These_DT are_VBP the_DT first_JJ truthful_JJ mechanisms_NNS with_IN non-trivial_JJ performance_NN guarantees_NNS for_IN a_DT multidimensional_JJ scheduling_NN domain_NN ._.
Complementing_VBG this_DT ,_, we_PRP observe_VBP that_IN even_RB this_DT seemingly_RB simple_JJ setting_NN does_VBZ not_RB admit_VB truthful_JJ mechanisms_NNS that_WDT return_VBP an_DT optimal_JJ schedule_NN -LRB-_-LRB- unlike_IN in_IN the_DT case_NN of_IN related_JJ machines_NNS -RRB-_-RRB- ._.
By_IN exploiting_VBG the_DT multidimensionality_NN of_IN the_DT domain_NN ,_, we_PRP prove_VBP that_IN no_DT truthful_JJ deterministic_JJ mechanism_NN can_MD obtain_VB an_DT approximation_NN ratio_NN better_JJR than_IN #_# ._.
##_NN to_TO the_DT makespan_NN -LRB-_-LRB- irrespective_JJ of_IN computational_JJ considerations_NNS -RRB-_-RRB- ._.
The_DT main_JJ technique_NN ,_, and_CC one_CD of_IN the_DT novelties_NNS ,_, underlying_VBG our_PRP$ constructions_NNS and_CC proofs_NNS ,_, is_VBZ that_IN we_PRP do_VBP not_RB rely_VB on_IN explicit_JJ price_NN specifications_NNS in_IN order_NN to_TO prove_VB the_DT truthfulness_NN of_IN our_PRP$ mechanisms_NNS ._.
Instead_RB we_PRP exploit_VBP certain_JJ algorithmic_JJ monotonicity_NN conditions_NNS that_WDT characterize_VBP truthfulness_NN to_TO first_JJ design_NN an_DT implementable_JJ algorithm_NN ,_, i_FW ._.
e_LS ._.
,_, an_DT algorithm_NN for_IN which_WDT prices_NNS ensuring_VBG truthfulness_NN exist_VBP ,_, and_CC then_RB find_VB these_DT prices_NNS -LRB-_-LRB- by_IN further_JJ delving_NN into_IN the_DT proof_NN of_IN implementability_NN -RRB-_-RRB- ._.
This_DT kind_NN of_IN analysis_NN has_VBZ been_VBN the_DT method_NN of_IN choice_NN in_IN the_DT design_NN of_IN truthful_JJ mechanisms_NNS for_IN singledimensional_JJ domains_NNS ,_, where_WRB value-monotonicity_NN yields_VBZ a_DT convenient_JJ characterization_NN enabling_VBG one_CD to_TO concentrate_VB on_IN the_DT algorithmic_JJ side_NN of_IN the_DT problem_NN ._.
But_CC for_IN multidimensional_JJ domains_NNS ,_, almost_RB all_DT positive_JJ results_NNS have_VBP relied_VBN on_IN explicit_JJ price_NN specifications_NNS in_IN order_NN to_TO prove_VB truthfulness_NN -LRB-_-LRB- an_DT exception_NN is_VBZ the_DT work_NN on_IN unknown_JJ single-minded_JJ players_NNS in_IN combinatorial_JJ auctions_NNS -LSB-_-LRB- ##_NNS ,_, #_# -RSB-_-RRB- -RRB-_-RRB- ,_, a_DT fact_NN that_IN yet_RB again_RB shows_VBZ the_DT gap_NN in_IN our_PRP$ understanding_NN of_IN multidimensional_JJ vs_CC ._.
single-dimensional_JJ domains_NNS ._.
Our_PRP$ work_NN is_VBZ the_DT first_JJ to_TO leverage_NN monotonicity_NN conditions_NNS for_IN truthful_JJ mechanism_NN design_NN in_IN arbitrary_JJ domains_NNS ._.
The_DT monotonicity_NN condition_NN we_PRP use_VBP ,_, which_WDT is_VBZ sometimes_RB called_VBN cycle_NN monotonicity_NN ,_, was_VBD first_JJ proposed_VBN by_IN Rochet_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- -LRB-_-LRB- see_VB also_RB -LSB-_-LRB- ##_CD -RSB-_-RRB- -RRB-_-RRB- ._.
It_PRP is_VBZ a_DT generalization_NN of_IN value-monotonicity_NN and_CC completely_RB characterizes_VBZ truthfulness_NN in_IN every_DT domain_NN ._.
Our_PRP$ methods_NNS and_CC analyses_NNS demonstrate_VBP the_DT potential_JJ benefits_NNS 253_CD of_IN this_DT characterization_NN ,_, and_CC show_VBP that_IN cycle_NN monotonicity_NN can_MD be_VB effectively_RB utilized_VBN to_TO devise_VB truthful_JJ mechanisms_NNS for_IN multidimensional_JJ domains_NNS ._.
Consider_VB ,_, for_IN example_NN ,_, our_PRP$ first_JJ result_NN showing_VBG that_IN any_DT c-approximation_NN algorithm_NN can_MD be_VB exported_VBN to_TO a_DT 3c-approximation_JJ truthful-in-expectation_NN mechanism_NN ._.
At_IN the_DT level_NN of_IN generality_NN of_IN an_DT arbitrary_JJ approximation_NN algorithm_NN ,_, it_PRP seems_VBZ unlikely_JJ that_IN one_CD would_MD be_VB able_JJ to_TO come_VB up_RP with_IN prices_NNS to_TO prove_VB truthfulness_NN of_IN the_DT constructed_VBN mechanism_NN ._.
But_CC ,_, cycle_NN monotonicity_NN does_VBZ allow_VB us_PRP to_TO prove_VB such_PDT a_DT statement_NN ._.
In_IN fact_NN ,_, some_DT such_JJ condition_NN based_VBN only_RB on_IN the_DT underlying_VBG algorithm_NN -LRB-_-LRB- and_CC not_RB on_IN the_DT prices_NNS -RRB-_-RRB- seems_VBZ necessary_JJ to_TO prove_VB such_PDT a_DT general_JJ statement_NN ._.
The_DT method_NN for_IN converting_VBG approximation_NN algorithms_NNS into_IN truthful_JJ mechanisms_NNS involves_VBZ another_DT novel_JJ idea_NN ._.
Our_PRP$ randomized_VBN mechanism_NN is_VBZ obtained_VBN by_IN first_JJ constructing_VBG a_DT truthful_JJ mechanism_NN that_WDT returns_VBZ a_DT fractional_JJ schedule_NN ._.
Moving_VBG to_TO a_DT fractional_JJ domain_NN allows_VBZ us_PRP to_TO plug-in_JJ truthfulness_NN into_IN the_DT approximation_NN algorithm_NN in_IN a_DT rather_RB simple_JJ fashion_NN ,_, while_IN losing_VBG a_DT factor_NN of_IN #_# in_IN the_DT approximation_NN ratio_NN ._.
We_PRP then_RB use_VBP a_DT suitable_JJ randomized_VBN rounding_VBG procedure_NN to_TO convert_VB the_DT fractional_JJ assignment_NN into_IN a_DT random_JJ integral_JJ assignment_NN ._.
For_IN this_DT ,_, we_PRP use_VBP a_DT recent_JJ rounding_VBG procedure_NN of_IN Kumar_NNP et_FW al_FW ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- that_WDT is_VBZ tailored_VBN for_IN unrelated-machine_JJ scheduling_NN ._.
This_DT preserves_VBZ truthfulness_NN ,_, but_CC we_PRP lose_VBP another_DT additive_JJ factor_NN equal_JJ to_TO the_DT approximation_NN ratio_NN ._.
Our_PRP$ construction_NN uses_VBZ and_CC extends_VBZ some_DT observations_NNS of_IN Lavi_NNP and_CC Swamy_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- ,_, and_CC further_RB demonstrates_VBZ the_DT benefits_NNS of_IN fractional_JJ mechanisms_NNS in_IN truthful_JJ mechanism_NN design_NN ._.
Related_JJ Work_NN Nisan_NN and_CC Ronen_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- first_RB considered_VBN the_DT makespan-minimization_NN problem_NN for_IN unrelated_JJ machines_NNS ._.
They_PRP gave_VBD an_DT m-approximation_NN positive_JJ result_NN and_CC proved_VBD various_JJ lower_JJR bounds_NNS ._.
Recently_RB ,_, Mu_NN ''_'' alem_NN and_CC Schapira_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- proved_VBD a_DT lower_JJR bound_VBN of_IN #_# on_IN the_DT approximation_NN ratio_NN achievable_JJ by_IN truthful-in-expectation_JJ mechanisms_NNS ,_, and_CC Christodoulou_NNP ,_, Koutsoupias_NNP ,_, and_CC Vidali_JJ -LSB-_-LRB- #_# -RSB-_-RRB- proved_VBD a_DT -LRB-_-LRB- #_# +_CC 2_LS -RRB-_-RRB- -_: lower_JJR bound_VBN for_IN deterministic_JJ truthful_JJ mechanisms_NNS ._.
Archer_NNP and_CC Tardos_NNP -LSB-_-LRB- #_# -RSB-_-RRB- first_RB considered_VBN the_DT related-machines_NNS problem_NN and_CC gave_VBD a_DT 3-approximation_JJ truthful-in-expectation_NN mechanism_NN ._.
This_DT been_VBN improved_VBN in_IN -LSB-_-LRB- #_# ,_, #_# ,_, #_# ,_, ##_NN -RSB-_-RRB- to_TO :_: a_DT 2-approximation_JJ randomized_VBN mechanism_NN -LSB-_-LRB- #_# -RSB-_-RRB- ;_: an_DT FPTAS_NNP for_IN any_DT fixed_JJ number_NN of_IN machines_NNS given_VBN by_IN Andelman_NNP ,_, Azar_NNP and_CC Sorani_NNP -LSB-_-LRB- #_# -RSB-_-RRB- ,_, and_CC a_DT 3-approximation_JJ deterministic_JJ mechanism_NN by_IN Kovacs_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
The_DT algorithmic_JJ problem_NN -LRB-_-LRB- i_FW ._.
e_LS ._.
,_, without_IN requiring_VBG truthfulness_NN -RRB-_-RRB- of_IN makespan-minimization_NN on_IN unrelated_JJ machines_NNS is_VBZ well_RB understood_VBN and_CC various_JJ 2-approximation_JJ algorithms_NNS are_VBP known_VBN ._.
Lenstra_NNP ,_, Shmoys_NNP and_CC Tardos_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- gave_VBD the_DT first_JJ such_JJ algorithm_NN ._.
Shmoys_NNPS and_CC Tardos_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- later_RB gave_VBD a_DT 2approximation_JJ algorithm_NN for_IN the_DT generalized_VBN assignment_NN problem_NN ,_, a_DT generalization_NN where_WRB there_EX is_VBZ a_DT cost_NN cij_NN for_IN assigning_VBG a_DT job_NN j_NN to_TO a_DT machine_NN i_FW ,_, and_CC the_DT goal_NN is_VBZ to_TO minimize_VB the_DT cost_NN subject_NN to_TO a_DT bound_VBN on_IN the_DT makespan_NN ._.
Recently_RB ,_, Kumar_NNP ,_, Marathe_NNP ,_, Parthasarathy_NNP ,_, and_CC Srinivasan_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- gave_VBD a_DT randomized_VBN rounding_VBG algorithm_NN that_WDT yields_VBZ the_DT same_JJ bounds_NNS ._.
We_PRP use_VBP their_PRP$ procedure_NN in_IN our_PRP$ randomized_VBN mechanism_NN ._.
The_DT characterization_NN of_IN truthfulness_NN for_IN arbitrary_JJ domains_NNS in_IN terms_NNS of_IN cycle_NN monotonicity_NN seems_VBZ to_TO have_VB been_VBN first_JJ observed_VBN by_IN Rochet_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
This_DT generalizes_VBZ the_DT value-monotonicity_JJ condition_NN for_IN single-dimensional_JJ domains_NNS which_WDT was_VBD given_VBN by_IN Myerson_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- and_CC rediscovered_VBN by_IN -LSB-_-LRB- #_# -RSB-_-RRB- ._.
As_IN mentioned_VBN earlier_RBR ,_, this_DT condition_NN has_VBZ been_VBN exploited_VBN numerous_JJ times_NNS to_TO obtain_VB truthful_JJ mechanisms_NNS for_IN single-dimensional_JJ domains_NNS -LSB-_-LRB- #_# ,_, #_# ,_, #_# ,_, #_# ,_, ##_NN -RSB-_-RRB- ._.
For_IN convex_NN domains_NNS -LRB-_-LRB- i_FW ._.
e_LS ._.
,_, each_DT players_NNS ''_'' set_NN of_IN private_JJ values_NNS is_VBZ convex_NN -RRB-_-RRB- ,_, it_PRP is_VBZ known_VBN that_IN cycle_NN monotonicity_NN is_VBZ implied_VBN by_IN a_DT simpler_JJR condition_NN ,_, called_VBN weak_JJ monotonicity_NN -LSB-_-LRB- ##_CD ,_, #_# ,_, ##_NN -RSB-_-RRB- ._.
But_CC even_RB this_DT simpler_JJR condition_NN has_VBZ not_RB found_VBN much_JJ application_NN in_IN truthful_JJ mechanism_NN design_NN for_IN multidimensional_JJ problems_NNS ._.
Objectives_NNS other_JJ than_IN social-welfare_JJ maximization_NN and_CC revenue_NN maximization_NN have_VBP received_VBN very_RB little_JJ attention_NN in_IN mechanism_NN design_NN ._.
In_IN the_DT context_NN of_IN combinatorial_JJ auctions_NNS ,_, the_DT problems_NNS of_IN maximizing_VBG the_DT minimum_JJ value_NN received_VBN by_IN a_DT player_NN ,_, and_CC computing_VBG an_DT envy-minimizing_JJ allocation_NN have_VBP been_VBN studied_VBN briefly_RB ._.
Lavi_NNP ,_, Mu_NN ''_'' alem_NN ,_, and_CC Nisan_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- showed_VBD that_IN the_DT former_JJ objective_NN can_MD not_RB be_VB implemented_VBN truthfully_RB ;_: Bezakova_NNP and_CC Dani_NNP -LSB-_-LRB- #_# -RSB-_-RRB- gave_VBD a_DT #_# ._.
5-approximation_NN mechanism_NN for_IN two_CD players_NNS with_IN additive_JJ valuations_NNS ._.
Lipton_NNP et_FW al_FW ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- showed_VBD that_IN the_DT latter_JJ objective_NN can_MD not_RB be_VB implemented_VBN truthfully_RB ._.
These_DT lower_JJR bounds_NNS were_VBD strengthened_VBN in_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- ._.
2_LS ._.
PRELIMINARIES_NN 2_CD ._.
#_# The_DT scheduling_NN domain_NN In_IN our_PRP$ scheduling_NN problem_NN ,_, we_PRP are_VBP given_VBN n_NN jobs_NNS and_CC m_NN machines_NNS ,_, and_CC each_DT job_NN must_MD be_VB assigned_VBN to_TO exactly_RB one_CD machine_NN ._.
In_IN the_DT unrelated-machines_JJ setting_NN ,_, each_DT machine_NN i_FW is_VBZ characterized_VBN by_IN a_DT vector_NN of_IN processing_NN times_NNS -LRB-_-LRB- pij_NN -RRB-_-RRB- j_NN ,_, where_WRB pij_NN R0_NN -LCB-_-LRB- -RCB-_-RRB- denotes_VBZ i_FW ''_'' s_VBZ processing_NN time_NN for_IN job_NN j_NN with_IN the_DT value_NN specifying_VBG that_IN i_FW can_MD not_RB process_VB j_NN ._.
We_PRP consider_VBP two_CD special_JJ cases_NNS of_IN this_DT problem_NN :_: 1_CD ._.
The_DT job-dependent_JJ two-values_NNS case_NN ,_, where_WRB pij_NN -LCB-_-LRB- Lj_NN ,_, Hj_NN -RCB-_-RRB- for_IN every_DT i_FW ,_, j_NN ,_, with_IN Lj_NNP Hj_NNP ,_, and_CC the_DT values_NNS Lj_NNP ,_, Hj_NNP are_VBP known_VBN ._.
This_DT generalizes_VBZ the_DT classic_JJ scheduling_NN model_NN of_IN restricted_JJ machines_NNS ,_, where_WRB Hj_NN =_JJ ._.
2_LS ._.
The_DT two-values_NNS case_NN ,_, which_WDT is_VBZ a_DT special_JJ case_NN of_IN above_IN where_WRB Lj_NN =_JJ L_NN and_CC Hj_NN =_JJ H_NN for_IN all_DT jobs_NNS j_NN ,_, i_FW ._.
e_LS ._.
,_, pij_NN -LCB-_-LRB- L_NN ,_, H_NN -RCB-_-RRB- for_IN every_DT i_FW ,_, j_NN ._.
We_PRP say_VBP that_IN a_DT job_NN j_NN is_VBZ low_JJ on_IN machine_NN i_FW if_IN pij_NN =_JJ Lj_NN ,_, and_CC high_JJ if_IN pij_NN =_JJ Hj_NN ._.
We_PRP will_MD use_VB the_DT terms_NNS schedule_NN and_CC assignment_NN interchangeably_RB ._.
We_PRP represent_VBP a_DT deterministic_JJ schedule_NN by_IN a_DT vector_NN x_NN =_JJ -LRB-_-LRB- xij_NN -RRB-_-RRB- i_LS ,_, j_NN ,_, where_WRB xij_NN is_VBZ #_# if_IN job_NN j_NN is_VBZ assigned_VBN to_TO machine_NN i_FW ,_, thus_RB we_PRP have_VBP xij_NN -LCB-_-LRB- #_# ,_, #_# -RCB-_-RRB- for_IN every_DT i_FW ,_, j_NN ,_, P_NN i_FW xij_FW =_JJ #_# for_IN every_DT job_NN j_NN ._.
We_PRP will_MD also_RB consider_VB randomized_VBN algorithms_NNS and_CC algorithms_NNS that_WDT return_VBP a_DT fractional_JJ assignment_NN ._.
In_IN both_DT these_DT settings_NNS ,_, we_PRP will_MD again_RB specify_VB an_DT assignment_NN by_IN a_DT vector_NN x_NN =_JJ -LRB-_-LRB- xij_NN -RRB-_-RRB- i_FW ,_, j_NN with_IN P_NN j_NN xij_NN =_JJ #_# ,_, but_CC now_RB xij_NN -LSB-_-LRB- #_# ,_, #_# -RSB-_-RRB- for_IN every_DT i_FW ,_, j_NN ._.
For_IN a_DT randomized_VBN algorithm_NN ,_, xij_NN is_VBZ simply_RB the_DT probability_NN that_WDT j_NN is_VBZ assigned_VBN to_TO i_FW -LRB-_-LRB- thus_RB ,_, x_NN is_VBZ a_DT convex_NN combination_NN of_IN integer_NN assignments_NNS -RRB-_-RRB- ._.
We_PRP denote_VBP the_DT load_NN of_IN machine_NN i_FW -LRB-_-LRB- under_IN a_DT given_VBN assignment_NN -RRB-_-RRB- by_IN li_NN =_JJ P_NN j_NN xijpij_NN ,_, and_CC the_DT makespan_NN of_IN a_DT schedule_NN is_VBZ defined_VBN as_IN the_DT maximum_NN load_NN on_IN any_DT machine_NN ,_, i_FW ._.
e_LS ._.
,_, maxi_FW li_FW ._.
The_DT goal_NN in_IN the_DT makespan-minimization_NN problem_NN is_VBZ to_TO assign_VB the_DT jobs_NNS to_TO the_DT machines_NNS so_RB as_IN to_TO minimize_VB the_DT makespan_NN of_IN the_DT schedule_NN ._.
2_LS ._.
#_# Mechanism_NN design_NN We_PRP consider_VBP the_DT makespan-minimization_NN problem_NN in_IN the_DT above_JJ scheduling_NN domains_NNS in_IN the_DT context_NN of_IN mechanism_NN design_NN ._.
Mechanism_NN design_NN studies_NNS strategic_JJ settings_NNS where_WRB the_DT social_JJ designer_NN needs_VBZ to_TO ensure_VB the_DT cooperation_NN of_IN the_DT different_JJ entities_NNS involved_VBN in_IN the_DT algorithmic_JJ procedure_NN ._.
Following_VBG the_DT work_NN of_IN Nisan_NNP and_CC Ronen_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- ,_, we_PRP consider_VBP the_DT machines_NNS to_TO be_VB the_DT strategic_JJ players_NNS or_CC agents_NNS ._.
The_DT social_JJ designer_NN holds_VBZ the_DT set_NN of_IN jobs_NNS that_WDT need_VBP to_TO be_VB assigned_VBN ,_, but_CC does_VBZ 254_CD not_RB know_VB the_DT -LRB-_-LRB- true_JJ -RRB-_-RRB- processing_NN times_NNS of_IN these_DT jobs_NNS on_IN the_DT different_JJ machines_NNS ._.
Each_DT machine_NN is_VBZ a_DT selfish_JJ entity_NN ,_, that_WDT privately_RB knows_VBZ its_PRP$ own_JJ processing_NN time_NN for_IN each_DT job_NN ._.
on_IN a_DT machine_NN incurs_VBZ a_DT cost_NN to_TO the_DT machine_NN equal_JJ to_TO the_DT true_JJ processing_NN time_NN of_IN the_DT job_NN on_IN the_DT machine_NN ,_, and_CC a_DT machine_NN may_MD choose_VB to_TO misrepresent_VB its_PRP$ vector_NN of_IN processing_NN times_NNS ,_, which_WDT are_VBP private_JJ ,_, in_IN order_NN to_TO decrease_VB its_PRP$ cost_NN ._.
We_PRP consider_VBP direct-revelation_NN mechanisms_NNS :_: each_DT machine_NN reports_VBZ its_PRP$ -LRB-_-LRB- possibly_RB false_JJ -RRB-_-RRB- vector_NN of_IN processing_NN times_NNS ,_, the_DT mechanism_NN then_RB computes_VBZ a_DT schedule_NN and_CC hands_NNS out_IN payments_NNS to_TO the_DT players_NNS -LRB-_-LRB- i_FW ._.
e_LS ._.
,_, machines_NNS -RRB-_-RRB- to_TO compensate_VB them_PRP for_IN the_DT cost_NN they_PRP incur_VBP in_IN processing_VBG their_PRP$ assigned_VBN jobs_NNS ._.
A_DT -LRB-_-LRB- direct-revelation_NN -RRB-_-RRB- mechanism_NN thus_RB consists_VBZ of_IN a_DT tuple_NN -LRB-_-LRB- x_NN ,_, P_NN -RRB-_-RRB- :_: x_CC specifies_VBZ the_DT schedule_NN ,_, and_CC P_NN =_JJ -LCB-_-LRB- Pi_NN -RCB-_-RRB- specifies_VBZ the_DT payments_NNS handed_VBD out_RP to_TO the_DT machines_NNS ,_, where_WRB both_DT x_NN and_CC the_DT Pis_NNP are_VBP functions_NNS of_IN the_DT reported_VBN processing_NN times_NNS p_NN =_JJ -LRB-_-LRB- pij_NN -RRB-_-RRB- i_LS ,_, j_NN ._.
The_DT mechanism_NN ''_'' s_NNS goal_NN is_VBZ to_TO compute_VB a_DT schedule_NN that_WDT has_VBZ near-optimal_JJ makespan_NN with_IN respect_NN to_TO the_DT true_JJ processing_NN times_NNS ;_: a_DT machine_NN i_FW is_VBZ however_RB only_RB interested_JJ in_IN maximizing_VBG its_PRP$ own_JJ utility_NN ,_, Pi_NNP li_NN ,_, where_WRB li_NN is_VBZ its_PRP$ load_NN under_IN the_DT output_NN assignment_NN ,_, and_CC may_MD declare_VB false_JJ processing_NN times_NNS if_IN this_DT could_MD increase_VB its_PRP$ utility_NN ._.
The_DT mechanism_NN must_MD therefore_RB incentivize_VB the_DT machines_NNS /_: players_NNS to_TO truthfully_RB reveal_VB their_PRP$ processing_NN times_NNS via_IN the_DT payments_NNS ._.
This_DT is_VBZ made_VBN precise_JJ using_VBG the_DT notion_NN of_IN dominant-strategy_JJ truthfulness_NN ._.
Definition_NN #_# ._.
#_# -LRB-_-LRB- Truthfulness_NN -RRB-_-RRB- A_DT scheduling_NN mechanism_NN is_VBZ truthful_JJ if_IN ,_, for_IN every_DT machine_NN i_FW ,_, every_DT vector_NN of_IN processing_NN times_NNS of_IN the_DT other_JJ machines_NNS ,_, pi_NN ,_, every_DT true_JJ processing-time_NN vector_NN p1_NN i_FW and_CC any_DT other_JJ vector_NN p2_NN i_FW of_IN machine_NN i_FW ,_, we_PRP have_VBP :_: P1_NN i_FW X_NN j_NN x1_NN ijp1_NN ij_NN P2_NN i_FW X_NN j_NN x2_NN ijp1_NN ij_NN ,_, -LRB-_-LRB- #_# -RRB-_-RRB- where_WRB -LRB-_-LRB- x1_NN ,_, P1_NN -RRB-_-RRB- and_CC -LRB-_-LRB- x2_NN ,_, P2_NN -RRB-_-RRB- are_VBP respectively_RB the_DT schedule_NN and_CC payments_NNS when_WRB the_DT other_JJ machines_NNS declare_VBP pi_NN and_CC machine_NN i_FW declares_VBZ p1_NN i_FW and_CC p2_FW i_FW ,_, i_FW ._.
e_LS ._.
,_, x1_NN =_JJ x_NN -LRB-_-LRB- p1_NN i_FW ,_, pi_NN -RRB-_-RRB- ,_, P1_NN i_FW =_JJ Pi_NN -LRB-_-LRB- p1_NN i_FW ,_, pi_NN -RRB-_-RRB- and_CC x2_NN =_JJ x_NN -LRB-_-LRB- p2_NN i_FW ,_, pi_NN -RRB-_-RRB- ,_, P2_NN i_FW =_JJ Pi_NN -LRB-_-LRB- p2_NN i_FW ,_, pi_NN -RRB-_-RRB- ._.
To_TO put_VB it_PRP in_IN words_NNS ,_, in_IN a_DT truthful_JJ mechanism_NN ,_, no_DT machine_NN can_MD improve_VB its_PRP$ utility_NN by_IN declaring_VBG a_DT false_JJ processing_NN time_NN ,_, no_DT matter_NN what_WP the_DT other_JJ machines_NNS declare_VBP ._.
We_PRP will_MD also_RB consider_VB fractional_JJ mechanisms_NNS that_WDT return_VBP a_DT fractional_JJ assignment_NN ,_, and_CC randomized_JJ mechanisms_NNS that_WDT are_VBP allowed_VBN to_TO toss_VB coins_NNS and_CC where_WRB the_DT assignment_NN and_CC the_DT payments_NNS may_MD be_VB random_JJ variables_NNS ._.
The_DT notion_NN of_IN truthfulness_NN for_IN a_DT fractional_JJ mechanism_NN is_VBZ the_DT same_JJ as_IN in_IN Definition_NNP #_# ._.
#_# ,_, where_WRB x1_NN ,_, x2_NN are_VBP now_RB fractional_JJ assignments_NNS ._.
For_IN a_DT randomized_VBN mechanism_NN ,_, we_PRP will_MD consider_VB the_DT notion_NN of_IN truthfulness_NN in_IN expectation_NN -LSB-_-LRB- #_# -RSB-_-RRB- ,_, which_WDT means_VBZ that_IN a_DT machine_NN -LRB-_-LRB- player_NN -RRB-_-RRB- maximizes_VBZ her_PRP$ expected_JJ utility_NN by_IN declaring_VBG her_PRP$ true_JJ processing-time_NN vector_NN ._.
Inequality_NN -LRB-_-LRB- #_# -RRB-_-RRB- also_RB defines_VBZ truthfulness-in-expectation_NN for_IN a_DT randomized_VBN mechanism_NN ,_, where_WRB P1_NN i_FW ,_, P2_NN i_FW now_RB denote_VBP the_DT expected_VBN payments_NNS made_VBD to_TO player_NN i_FW ,_, x1_NN ,_, x2_NN are_VBP the_DT fractional_JJ assignments_NNS denoting_VBG the_DT randomized_VBN algorithm_NN ''_'' s_NNS schedule_NN -LRB-_-LRB- i_FW ._.
e_LS ._.
,_, xk_NN ij_NN is_VBZ the_DT probability_NN that_WDT j_NN is_VBZ assigned_VBN to_TO i_FW in_IN the_DT schedule_NN output_NN for_IN -LRB-_-LRB- pk_NN i_FW ,_, pi_NN -RRB-_-RRB- -RRB-_-RRB- ._.
For_IN our_PRP$ two_CD scheduling_NN domains_NNS ,_, the_DT informational_JJ assumption_NN is_VBZ that_IN the_DT values_NNS Lj_NNP ,_, Hj_NNP are_VBP publicly_RB known_VBN ._.
The_DT private_JJ information_NN of_IN a_DT machine_NN is_VBZ which_WDT jobs_NNS have_VBP value_NN Lj_NN -LRB-_-LRB- or_CC L_NN -RRB-_-RRB- and_CC which_WDT ones_NNS have_VBP value_NN Hj_NN -LRB-_-LRB- or_CC H_NN -RRB-_-RRB- on_IN it_PRP ._.
We_PRP emphasize_VBP that_IN both_DT of_IN our_PRP$ domains_NNS are_VBP multidimensional_JJ ,_, since_IN each_DT machine_NN i_FW needs_VBZ to_TO specify_VB a_DT vector_NN saying_VBG which_WDT jobs_NNS are_VBP low_JJ and_CC high_JJ on_IN it_PRP ._.
3_LS ._.
CYCLE_NN MONOTONICITY_NNP Although_IN truthfulness_NN is_VBZ defined_VBN in_IN terms_NNS of_IN payments_NNS ,_, it_PRP turns_VBZ out_RP that_IN truthfulness_NN actually_RB boils_VBZ down_RP to_TO a_DT certain_JJ algorithmic_JJ condition_NN of_IN monotonicity_NN ._.
This_DT seems_VBZ to_TO have_VB been_VBN first_JJ observed_VBN for_IN multidimensional_JJ domains_NNS by_IN Rochet_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- in_IN ####_CD ,_, and_CC has_VBZ been_VBN used_VBN successfully_RB in_IN algorithmic_JJ mechanism_NN design_NN several_JJ times_NNS ,_, but_CC for_IN singledimensional_JJ domains_NNS ._.
However_RB for_IN multidimensional_JJ domains_NNS ,_, the_DT monotonicity_NN condition_NN is_VBZ more_RBR involved_JJ and_CC there_EX has_VBZ been_VBN no_DT success_NN in_IN employing_VBG it_PRP in_IN the_DT design_NN of_IN truthful_JJ mechanisms_NNS ._.
Most_JJS positive_JJ results_NNS for_IN multidimensional_JJ domains_NNS have_VBP relied_VBN on_IN explicit_JJ price_NN specifications_NNS in_IN order_NN to_TO prove_VB truthfulness_NN ._.
One_CD of_IN the_DT main_JJ contributions_NNS of_IN this_DT paper_NN is_VBZ to_TO demonstrate_VB that_IN the_DT monotonicity_NN condition_NN for_IN multidimensional_JJ settings_NNS ,_, which_WDT is_VBZ sometimes_RB called_VBN cycle_NN monotonicity_NN ,_, can_MD indeed_RB be_VB effectively_RB utilized_VBN to_TO devise_VB truthful_JJ mechanisms_NNS ._.
We_PRP include_VBP a_DT brief_JJ exposition_NN on_IN it_PRP for_IN completeness_NN ._.
The_DT exposition_NN here_RB is_VBZ largely_RB based_VBN on_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- ._.
Cycle_NN monotonicity_NN is_VBZ best_JJS described_VBN in_IN the_DT abstract_JJ social_JJ choice_NN setting_NN :_: there_EX is_VBZ a_DT finite_JJ set_NN A_NN of_IN alternatives_NNS ,_, there_EX are_VBP m_NN players_NNS ,_, and_CC each_DT player_NN has_VBZ a_DT private_JJ type_NN -LRB-_-LRB- valuation_NN function_NN -RRB-_-RRB- v_LS :_: A_DT R_NN ,_, where_WRB vi_LS -LRB-_-LRB- a_DT -RRB-_-RRB- should_MD be_VB interpreted_VBN as_IN i_FW ''_'' s_VBZ value_NN for_IN alternative_NN a_DT ._.
In_IN the_DT scheduling_NN domain_NN ,_, A_DT represents_VBZ all_PDT the_DT possible_JJ assignments_NNS of_IN jobs_NNS to_TO machines_NNS ,_, and_CC vi_LS -LRB-_-LRB- a_DT -RRB-_-RRB- is_VBZ the_DT negative_JJ of_IN i_FW ''_'' s_VBZ load_NN in_IN the_DT schedule_NN a_DT ._.
Let_VB Vi_NNP denote_VB the_DT set_NN of_IN all_DT possible_JJ types_NNS of_IN player_NN i_FW ._.
A_DT mechanism_NN is_VBZ a_DT tuple_NN -LRB-_-LRB- f_FW ,_, -LCB-_-LRB- Pi_NNP -RCB-_-RRB- -RRB-_-RRB- where_WRB f_SYM :_: V1_NN Vm_NN A_NN is_VBZ the_DT algorithm_NN for_IN choosing_VBG the_DT alternative_NN ,_, and_CC Pi_NNP :_: V1_NN Vm_NN A_NN is_VBZ the_DT price_NN charged_VBN to_TO player_NN i_FW -LRB-_-LRB- in_IN the_DT scheduling_NN setting_NN ,_, the_DT mechanism_NN pays_VBZ the_DT players_NNS ,_, which_WDT corresponds_VBZ to_TO negative_JJ prices_NNS -RRB-_-RRB- ._.
The_DT mechanism_NN is_VBZ truthful_JJ if_IN for_IN every_DT i_FW ,_, every_DT vi_LS Vi_NN =_JJ Q_NNP i_FW =_JJ i_FW Vi_FW ,_, and_CC any_DT vi_LS ,_, vi_LS Vi_NNP we_PRP have_VBP vi_LS -LRB-_-LRB- a_DT -RRB-_-RRB- Pi_NN -LRB-_-LRB- vi_LS ,_, vi_LS -RRB-_-RRB- vi_LS -LRB-_-LRB- b_NN -RRB-_-RRB- Pi_NN -LRB-_-LRB- vi_LS ,_, vi_LS -RRB-_-RRB- ,_, where_WRB a_DT =_JJ f_FW -LRB-_-LRB- vi_LS ,_, vi_LS -RRB-_-RRB- and_CC b_NN =_JJ f_FW -LRB-_-LRB- vi_LS ,_, vi_LS -RRB-_-RRB- ._.
A_DT basic_JJ question_NN that_WDT arises_VBZ is_VBZ given_VBN an_DT algorithm_NN f_FW :_: V1_NN Vm_NN A_NN ,_, do_VBP there_EX exist_VBP prices_NNS that_WDT will_MD make_VB the_DT resulting_VBG mechanism_NN truthful_JJ ?_.
It_PRP is_VBZ well_RB known_VBN that_IN the_DT price_NN Pi_NN can_MD only_RB depend_VB on_IN the_DT alternative_JJ chosen_VBN and_CC the_DT others_NNS ''_'' declarations_NNS ,_, that_DT is_VBZ ,_, we_PRP may_MD write_VB Pi_NNP :_: Vi_NNP A_NNP R_NN ._.
Thus_RB ,_, truthfulness_NN implies_VBZ that_IN for_IN every_DT i_FW ,_, every_DT vi_LS Vi_NNP ,_, and_CC any_DT vi_LS ,_, vi_LS Vi_NN with_IN f_FW -LRB-_-LRB- vi_LS ,_, vi_LS -RRB-_-RRB- =_JJ a_DT and_CC f_FW -LRB-_-LRB- vi_LS ,_, vi_LS -RRB-_-RRB- =_JJ b_NN ,_, we_PRP have_VBP vi_LS -LRB-_-LRB- a_DT -RRB-_-RRB- Pi_NN -LRB-_-LRB- a_DT ,_, vi_LS -RRB-_-RRB- vi_LS -LRB-_-LRB- b_NN -RRB-_-RRB- Pi_NN -LRB-_-LRB- b_NN ,_, vi_LS -RRB-_-RRB- ._.
Now_RB fix_VB a_DT player_NN i_FW ,_, and_CC fix_VB the_DT declarations_NNS vi_LS of_IN the_DT others_NNS ._.
We_PRP seek_VBP an_DT assignment_NN to_TO the_DT variables_NNS -LCB-_-LRB- Pa_NNP -RCB-_-RRB- aA_NNP such_JJ that_IN vi_LS -LRB-_-LRB- a_DT -RRB-_-RRB- vi_LS -LRB-_-LRB- b_NN -RRB-_-RRB- Pa_NNP Pb_NN for_IN every_DT a_DT ,_, b_NN A_NN and_CC vi_LS Vi_NN with_IN f_FW -LRB-_-LRB- vi_LS ,_, vi_LS -RRB-_-RRB- =_JJ a_DT ._.
-LRB-_-LRB- Strictly_RB speaking_VBG ,_, we_PRP should_MD use_VB A_NN =_JJ f_FW -LRB-_-LRB- Vi_NNP ,_, vi_LS -RRB-_-RRB- instead_RB of_IN A_DT here_RB ._. -RRB-_-RRB-
Define_VB a_DT ,_, b_NN :_: =_JJ inf_NN -LCB-_-LRB- vi_LS -LRB-_-LRB- a_DT -RRB-_-RRB- vi_LS -LRB-_-LRB- b_NN -RRB-_-RRB- :_: vi_LS Vi_NNP ,_, f_FW -LRB-_-LRB- vi_LS ,_, vi_LS -RRB-_-RRB- =_JJ a_DT -RCB-_-RRB- ._.
We_PRP can_MD now_RB rephrase_VB the_DT above_JJ price-assignment_NN problem_NN :_: we_PRP seek_VBP an_DT assignment_NN to_TO the_DT variables_NNS -LCB-_-LRB- Pa_NNP -RCB-_-RRB- aA_NNP such_JJ that_IN Pa_NNP Pb_NN a_DT ,_, b_NN a_DT ,_, b_NN A_NN -LRB-_-LRB- #_# -RRB-_-RRB- This_DT is_VBZ easily_RB solved_VBN by_IN looking_VBG at_IN the_DT allocation_NN graph_NN and_CC applying_VBG a_DT standard_JJ basic_JJ result_NN of_IN graph_NN theory_NN ._.
Definition_NN #_# ._.
#_# -LRB-_-LRB- Gui_NNP et_FW al_FW ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- -RRB-_-RRB- The_DT allocation_NN graph_NN of_IN f_FW is_VBZ a_DT directed_VBN weighted_JJ graph_NN G_NN =_JJ -LRB-_-LRB- A_NN ,_, E_NN -RRB-_-RRB- where_WRB E_NN =_JJ A_NN A_NN and_CC the_DT weight_NN of_IN an_DT edge_NN b_NN a_DT -LRB-_-LRB- for_IN any_DT a_DT ,_, b_NN A_NN -RRB-_-RRB- is_VBZ a_DT ,_, b_NN ._.
Theorem_NNP #_# ._.
#_# There_EX exists_VBZ a_DT feasible_JJ assignment_NN to_TO -LRB-_-LRB- #_# -RRB-_-RRB- iff_IN the_DT allocation_NN graph_NN has_VBZ no_DT negative-length_JJ cycles_NNS ._.
Furthermore_RB ,_, if_IN all_DT cycles_NNS are_VBP non-negative_JJ ,_, a_DT feasible_JJ assignment_NN is_VBZ 255_CD obtained_VBN as_IN follows_VBZ :_: fix_VB an_DT arbitrary_JJ node_NN a_DT A_NN and_CC set_VBN Pa_NNP to_TO be_VB the_DT length_NN of_IN the_DT shortest_JJS path_NN from_IN a_DT to_TO a_DT ._.
This_DT leads_VBZ to_TO the_DT following_VBG definition_NN ,_, which_WDT is_VBZ another_DT way_NN of_IN phrasing_NN the_DT condition_NN that_IN the_DT allocation_NN graph_NN have_VBP no_DT negative_JJ cycles_NNS ._.
Definition_NN #_# ._.
#_# -LRB-_-LRB- Cycle_NN monotonicity_NN -RRB-_-RRB- A_DT social_JJ choice_NN function_NN f_FW satisfies_VBZ cycle_NN monotonicity_NN if_IN for_IN every_DT player_NN i_FW ,_, every_DT vi_LS Vi_NNP ,_, every_DT integer_NN K_NN ,_, and_CC every_DT v1_NN i_FW ,_, ..._: ,_, vK_NN i_FW Vi_FW ,_, KX_NNP k_NN =_JJ #_# h_NN vk_NN i_FW -LRB-_-LRB- ak_NN -RRB-_-RRB- vk_NN i_FW -LRB-_-LRB- ak_NN +_CC #_# -RRB-_-RRB- i_FW #_# where_WRB ak_NN =_JJ f_FW -LRB-_-LRB- vk_NN i_FW ,_, vi_LS -RRB-_-RRB- for_IN #_# k_NN K_NN ,_, and_CC aK_NN +_CC #_# =_JJ a1_NN ._.
Corollary_NNP #_# ._.
#_# There_EX exist_VBP prices_NNS P_NN such_JJ that_IN the_DT mechanism_NN -LRB-_-LRB- f_FW ,_, P_NN -RRB-_-RRB- is_VBZ truthful_JJ iff_FW f_FW satisfies_NNS cycle_NN monotonicity_NN ._.
#_# We_PRP now_RB consider_VBP our_PRP$ specific_JJ scheduling_NN domain_NN ._.
Fix_VB a_DT player_NN i_FW ,_, pi_NN ,_, and_CC any_DT p1_NN i_FW ,_, ..._: ,_, pK_NN i_FW ._.
Let_VB x_NN -LRB-_-LRB- pk_NN i_FW ,_, pi_NN -RRB-_-RRB- =_JJ xk_NN for_IN 1_CD k_NN K_NN ,_, and_CC let_VB xK_NN +_CC #_# =_JJ x1_NN ,_, pK_NN +_CC #_# =_JJ p1_NN ._.
xk_NN could_MD be_VB a_DT -LCB-_-LRB- #_# ,_, #_# -RCB-_-RRB- -_: assignment_NN or_CC a_DT fractional_JJ assignment_NN ._.
We_PRP have_VBP vk_NN i_FW -LRB-_-LRB- xk_NN -RRB-_-RRB- =_JJ P_NN j_NN xk_NN ijpk_NN ij_NN ,_, so_RB cycle_NN monotonicity_NN translates_VBZ to_TO PK_NN k_NN =_JJ #_# P_NN j_NN xk_NN ijpk_NN ij_NN +_CC P_NN j_NN xk_NN +_CC #_# ij_FW pk_NN ij_NN #_# ._.
Rearranging_VBG ,_, we_PRP get_VBP KX_NNP k_NN =_JJ #_# X_NN j_NN xk_NN +_CC #_# ij_FW `_`` pk_NN ij_NN pk_NN +_CC #_# ij_FW #_# ._.
-LRB-_-LRB- #_# -RRB-_-RRB- Thus_RB -LRB-_-LRB- #_# -RRB-_-RRB- reduces_VBZ our_PRP$ mechanism_NN design_NN problem_NN to_TO a_DT concrete_JJ algorithmic_JJ problem_NN ._.
For_IN most_JJS of_IN this_DT paper_NN ,_, we_PRP will_MD consequently_RB ignore_VB any_DT strategic_JJ considerations_NNS and_CC focus_VB on_IN designing_VBG an_DT approximation_NN algorithm_NN for_IN minimizing_VBG makespan_NN that_IN satisfies_NNS -LRB-_-LRB- #_# -RRB-_-RRB- ._.
4_LS ._.
A_DT GENERAL_JJ TECHNIQUE_NN TO_TO OBTAIN_VB RANDOMIZED_JJ MECHANISMS_NNS In_IN this_DT section_NN ,_, we_PRP consider_VBP the_DT case_NN of_IN job-dependent_JJ Lj_NN ,_, Hj_NN values_NNS -LRB-_-LRB- with_IN Lj_NN Hj_NN -RRB-_-RRB- ,_, which_WDT generalizes_VBZ the_DT classical_JJ restricted-machines_NNS model_NN -LRB-_-LRB- where_WRB Hj_NN =_JJ -RRB-_-RRB- ._.
We_PRP show_VBP the_DT power_NN of_IN randomization_NN ,_, by_IN providing_VBG a_DT general_JJ technique_NN that_WDT converts_VBZ any_DT c-approximation_NN algorithm_NN into_IN a_DT 3c-approximation_NN ,_, truthful-in-expectation_JJ mechanism_NN ._.
This_DT is_VBZ one_CD of_IN the_DT few_JJ results_NNS that_WDT shows_VBZ how_WRB to_TO export_VB approximation_NN algorithms_NNS for_IN a_DT multidimensional_JJ problem_NN into_IN truthful_JJ mechanisms_NNS when_WRB the_DT algorithm_NN is_VBZ given_VBN as_IN a_DT black_JJ box_NN ._.
Our_PRP$ construction_NN and_CC proof_NN are_VBP simple_JJ ,_, and_CC based_VBN on_IN two_CD ideas_NNS ._.
First_RB ,_, as_IN outlined_VBN above_IN ,_, we_PRP prove_VBP truthfulness_NN using_VBG cycle_NN monotonicity_NN ._.
It_PRP seems_VBZ unlikely_JJ that_IN for_IN an_DT arbitrary_JJ approximation_NN algorithm_NN given_VBN only_RB as_IN a_DT black_JJ box_NN ,_, one_CD would_MD be_VB able_JJ to_TO come_VB up_RP with_IN payments_NNS in_IN order_NN to_TO prove_VB truthfulness_NN ;_: but_CC cycle-monotonicity_NN allows_VBZ us_PRP to_TO prove_VB precisely_RB this_DT ._.
Second_RB ,_, we_PRP obtain_VB our_PRP$ randomized_VBN mechanism_NN by_IN -LRB-_-LRB- a_DT -RRB-_-RRB- first_RB moving_VBG to_TO a_DT fractional_JJ domain_NN ,_, and_CC constructing_VBG a_DT fractional_JJ truthful_JJ mechanism_NN that_WDT is_VBZ allowed_VBN to_TO return_VB fractional_JJ assignments_NNS ;_: then_RB -LRB-_-LRB- b_NN -RRB-_-RRB- using_VBG a_DT rounding_VBG procedure_NN to_TO express_VB the_DT fractional_JJ schedule_NN as_IN a_DT convex_NN combination_NN of_IN integer_NN schedules_NNS ._.
This_DT builds_VBZ upon_IN a_DT theme_NN introduced_VBN by_IN Lavi_NNP and_CC Swamy_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- ,_, namely_RB that_IN of_IN using_VBG fractional_JJ mechanisms_NNS to_TO obtain_VB truthful-in-expectation_JJ mechanisms_NNS ._.
1_CD It_PRP is_VBZ not_RB clear_JJ if_IN Theorem_NNP #_# ._.
#_# ,_, and_CC hence_RB ,_, this_DT statement_NN ,_, hold_VBP if_IN A_DT is_VBZ not_RB finite_JJ ._.
We_PRP should_MD point_VB out_RP however_RB that_IN one_PRP can_MD not_RB simply_RB plug_VB in_IN the_DT results_NNS of_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- ._.
Their_PRP$ results_NNS hold_VBP for_IN social-welfaremaximization_NN problems_NNS and_CC rely_VBP on_IN using_VBG VCG_NNP to_TO obtain_VB a_DT fractional_JJ truthful_JJ mechanism_NN ._.
VCG_NNP however_RB does_VBZ not_RB apply_VB to_TO makespan_JJ minimization_NN ,_, and_CC in_IN our_PRP$ case_NN even_RB the_DT existence_NN of_IN a_DT near-optimal_JJ fractional_JJ truthful_JJ mechanism_NN is_VBZ not_RB known_VBN ._.
We_PRP use_VBP the_DT following_VBG result_NN adapted_VBD from_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- ._.
Lemma_NNP #_# ._.
#_# -LRB-_-LRB- Lavi_NNP and_CC Swamy_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- -RRB-_-RRB- Let_VB M_NN =_JJ -LRB-_-LRB- x_NN ,_, P_NN -RRB-_-RRB- be_VB a_DT fractional_JJ truthful_JJ mechanism_NN ._.
Let_VB A_DT be_VB a_DT randomized_VBN rounding_VBG algorithm_NN that_IN given_VBN a_DT fractional_JJ assignment_NN x_NN ,_, outputs_VBZ a_DT random_JJ assignment_NN X_NN such_JJ that_IN E_NN Xij_NN =_JJ xij_NN for_IN all_DT i_FW ,_, j_NN ._.
Then_RB there_EX exist_VBP payments_NNS P_NN such_JJ that_IN the_DT mechanism_NN M_NN =_JJ -LRB-_-LRB- A_NN ,_, P_NN -RRB-_-RRB- is_VBZ truthful_JJ in_IN expectation_NN ._.
Furthermore_RB ,_, if_IN M_NN is_VBZ individually_RB rational_JJ then_RB M_NN is_VBZ individually_RB rational_JJ for_IN every_DT realization_NN of_IN coin_NN tosses_NNS ._.
Let_VB OPT_NNP -LRB-_-LRB- p_NN -RRB-_-RRB- denote_VBP the_DT optimal_JJ makespan_NN -LRB-_-LRB- over_IN integer_NN schedules_NNS -RRB-_-RRB- for_IN instance_NN p_NN ._.
As_IN our_PRP$ first_JJ step_NN ,_, we_PRP take_VBP a_DT capproximation_NN algorithm_NN and_CC convert_VB it_PRP to_TO a_DT 2c-approximation_JJ fractional_JJ truthful_JJ mechanism_NN ._.
This_DT conversion_NN works_VBZ even_RB when_WRB the_DT approximation_NN algorithm_NN returns_NNS only_RB a_DT fractional_JJ schedule_NN -LRB-_-LRB- satisfying_VBG certain_JJ properties_NNS -RRB-_-RRB- of_IN makespan_NN at_IN most_JJS c_NN OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- for_IN every_DT instance_NN p_NN ._.
We_PRP prove_VBP truthfulness_NN by_IN showing_VBG that_IN the_DT fractional_JJ algorithm_NN satisfies_NNS cycle_NN monotonicity_NN -LRB-_-LRB- #_# -RRB-_-RRB- ._.
Notice_NNP that_IN the_DT alternative-set_NN of_IN our_PRP$ fractional_JJ mechanism_NN is_VBZ finite_JJ -LRB-_-LRB- although_IN the_DT set_NN of_IN all_DT fractional_JJ assignments_NNS is_VBZ infinite_JJ -RRB-_-RRB- :_: its_PRP$ cardinality_NN is_VBZ at_IN most_JJS that_DT of_IN the_DT inputdomain_NN ,_, which_WDT is_VBZ at_IN most_JJS 2mn_JJ in_IN the_DT two-value_JJ case_NN ._.
Thus_RB ,_, we_PRP can_MD apply_VB Corollary_NNP #_# ._.
#_# here_RB ._.
To_TO convert_VB this_DT fractional_JJ truthful_JJ mechanism_NN into_IN a_DT randomized_VBN truthful_JJ mechanism_NN we_PRP need_VBP a_DT randomized_VBN rounding_VBG procedure_NN satisfying_VBG the_DT requirements_NNS of_IN Lemma_NNP #_# ._.
#_# ._.
Fortunately_RB ,_, such_PDT a_DT procedure_NN is_VBZ already_RB provided_VBN by_IN Kumar_NNP ,_, Marathe_NNP ,_, Parthasarathy_NNP ,_, and_CC Srinivasan_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
Lemma_NNP #_# ._.
#_# -LRB-_-LRB- Kumar_NNP et_FW al_FW ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- -RRB-_-RRB- Given_VBN a_DT fractional_JJ assignment_NN x_NN and_CC a_DT processing_NN time_NN vector_NN p_NN ,_, there_EX exists_VBZ a_DT randomized_VBN rounding_VBG procedure_NN that_WDT yields_VBZ a_DT -LRB-_-LRB- random_JJ -RRB-_-RRB- assignment_NN X_NN such_JJ that_IN ,_, 1_CD ._.
for_IN any_DT i_FW ,_, j_NN ,_, E_NN Xij_NN =_JJ xij_NN ._.
2_LS ._.
for_IN any_DT i_FW ,_, P_NN j_NN Xijpij_NN <_JJR P_NN j_NN xijpij_NN +_CC max_NN -LCB-_-LRB- j_NN :_: xij_NN -LRB-_-LRB- #_# ,_, #_# -RRB-_-RRB- -RCB-_-RRB- pij_NN with_IN probability_NN #_# ._.
Property_NN #_# will_MD be_VB used_VBN to_TO obtain_VB truthfulness_NN in_IN expectation_NN ,_, and_CC property_NN #_# will_MD allow_VB us_PRP to_TO prove_VB an_DT approximation_NN guarantee_NN ._.
We_PRP first_RB show_VBP that_IN any_DT algorithm_NN that_WDT returns_VBZ a_DT fractional_JJ assignment_NN having_VBG certain_JJ properties_NNS satisfies_VBZ cycle_NN monotonicity_NN ._.
Lemma_NNP #_# ._.
#_# Let_VB A_DT be_VB an_DT algorithm_NN that_IN for_IN any_DT input_NN p_NN ,_, outputs_VBZ a_DT -LRB-_-LRB- fractional_JJ -RRB-_-RRB- assignment_NN x_CC such_JJ that_IN ,_, if_IN pij_NN =_JJ Hj_NN then_RB xij_VBD #_# /_: m_NN ,_, and_CC if_IN pij_NN =_JJ Lj_NN then_RB xij_VBD #_# /_: m_NN ._.
Then_RB A_DT satisfies_NNS cycle-monotonicity_NN ._.
Proof_NN ._.
Fix_VB a_DT player_NN i_FW ,_, and_CC the_DT vector_NN of_IN processing_NN times_NNS of_IN the_DT other_JJ players_NNS pi_NN ._.
We_PRP need_VBP to_TO prove_VB -LRB-_-LRB- #_# -RRB-_-RRB- ,_, that_WDT is_VBZ ,_, PK_NN k_NN =_JJ #_# P_NN j_NN xk_NN +_CC #_# ij_FW `_`` pk_NN ij_NN pk_NN +_CC #_# ij_FW #_# for_IN every_DT p1_NN i_FW ,_, ..._: ,_, pK_NN i_FW ,_, where_WRB index_NN k_NN =_JJ K_NN +_CC #_# is_VBZ taken_VBN to_TO be_VB k_NN =_JJ #_# ._.
We_PRP will_MD show_VB that_IN for_IN every_DT job_NN j_NN ,_, PK_NN k_NN =_JJ #_# xk_NN +_CC #_# ij_FW `_`` pk_NN ij_NN pk_NN +_CC #_# ij_FW #_# ._.
If_IN pk_NN ij_NN is_VBZ the_DT same_JJ for_IN all_DT k_NN -LRB-_-LRB- either_CC always_RB Lj_NN or_CC always_RB Hj_NN -RRB-_-RRB- ,_, then_RB the_DT above_JJ inequality_NN clearly_RB holds_VBZ ._.
Otherwise_RB we_PRP can_MD 256_CD divide_VBP the_DT indices_NNS #_# ,_, ..._: ,_, K_NNP ,_, into_IN maximal_JJ segments_NNS ,_, where_WRB a_DT maximal_JJ segment_NN is_VBZ a_DT maximal_JJ set_NN of_IN consecutive_JJ indices_NNS k_NN ,_, k_NN +_CC #_# ,_, ..._: ,_, k_NN #_# ,_, k_NN -LRB-_-LRB- where_WRB K_NN +_CC #_# #_# -RRB-_-RRB- such_JJ that_IN pk_NN ij_NN =_JJ Hj_NN pk_NN +_CC #_# ij_FW pk_NN ij_NN =_JJ Lj_NN ._.
This_DT follows_VBZ because_IN there_EX must_MD be_VB some_DT k_NN such_JJ that_IN pk_NN ij_NN =_JJ Hj_NN >_JJR pk1_NN ij_NN =_JJ Lj_NN ._.
We_PRP take_VBP k_NN =_JJ k_NN and_CC then_RB keep_VB including_VBG indices_NNS in_IN this_DT segment_NN till_IN we_PRP reach_VBP a_DT k_NN such_JJ that_IN pk_NN ij_NN =_JJ Lj_NN and_CC pk_NN +_CC #_# ij_NN =_JJ Hj_NN ._.
We_PRP set_VBD k_NN =_JJ k_NN ,_, and_CC then_RB start_VB a_DT new_JJ maximal_JJ segment_NN with_IN index_NN k_NN +_CC #_# ._.
Note_VB that_DT k_NN =_JJ k_NN and_CC k_NN +_CC #_# =_JJ k_NN #_# ._.
We_PRP now_RB have_VBP a_DT subset_NN of_IN indices_NNS and_CC we_PRP can_MD continue_VB recursively_RB ._.
So_RB all_DT indices_NNS are_VBP included_VBN in_IN some_DT maximal_JJ segment_NN ._.
We_PRP will_MD show_VB that_IN for_IN every_DT such_JJ maximal_JJ segment_NN k_NN ,_, k_NN +_CC #_# ,_, ..._: ,_, k_NN ,_, P_NN k_NN 1k_NN <_JJR k_NN xk_NN +_CC #_# ij_FW `_`` pk_NN ij_NN pk_NN +_CC #_# ij_FW #_# ._.
Adding_VBG this_DT for_IN each_DT segment_NN yields_VBZ the_DT desired_VBN inequality_NN ._.
So_RB now_RB focus_VB on_IN a_DT maximal_JJ segment_NN k_NN ,_, k_NN +_CC #_# ,_, ..._: ,_, k_NN 1_CD ,_, k_NN ._.
Thus_RB ,_, there_EX is_VBZ some_DT k_NN such_JJ that_IN for_IN k_NN k_NN <_JJR k_NN ,_, we_PRP have_VBP pk_NN ij_NN =_JJ Hj_NN ,_, and_CC for_IN k_NN k_NN k_NN ,_, we_PRP have_VBP pk_NN ij_NN =_JJ Lj_NN ._.
Now_RB the_DT left_JJ hand_NN side_NN of_IN the_DT above_JJ inequality_NN for_IN this_DT segment_NN is_VBZ simply_RB xk_NN ij_NN -LRB-_-LRB- Lj_NN Hj_NN -RRB-_-RRB- +_CC xk_NN ij_NN -LRB-_-LRB- Hj_NN Lj_NN -RRB-_-RRB- #_# ,_, since_IN xk_NN ij_NN #_# m_NN xk_NN ij_NN as_IN pk_NN ij_NN =_JJ Hj_NN and_CC pk_NN ij_NN =_JJ Lj_NN ._.
We_PRP now_RB describe_VBP how_WRB to_TO use_VB a_DT c-approximation_NN algorithm_NN to_TO obtain_VB an_DT algorithm_NN satisfying_VBG the_DT property_NN in_IN Lemma_NNP #_# ._.
#_# ._.
For_IN simplicity_NN ,_, first_JJ suppose_VB that_IN the_DT approximation_NN algorithm_NN returns_VBZ an_DT integral_JJ schedule_NN ._.
The_DT idea_NN is_VBZ to_TO simply_RB spread_VB this_DT schedule_NN ._.
We_PRP take_VBP each_DT job_NN j_NN assigned_VBN to_TO a_DT high_JJ machine_NN and_CC assign_VB it_PRP to_TO an_DT extent_NN #_# /_: m_NN on_IN all_DT machines_NNS ;_: for_IN each_DT job_NN j_NN assigned_VBN to_TO a_DT low_JJ machine_NN ,_, say_VBP i_LS ,_, we_PRP assign_VBP 1_CD /_: m-fraction_NN of_IN it_PRP to_TO the_DT other_JJ machines_NNS where_WRB it_PRP is_VBZ low_JJ ,_, and_CC assign_VB its_PRP$ remaining_VBG fraction_NN -LRB-_-LRB- which_WDT is_VBZ at_IN least_JJS #_# /_: m_NN -RRB-_-RRB- to_TO i_LS ._.
The_DT resulting_VBG assignment_NN clearly_RB satisfies_VBZ the_DT desired_VBN properties_NNS ._.
Also_RB observe_VBP that_IN the_DT load_NN on_IN any_DT machine_NN has_VBZ at_IN most_JJS increased_VBN by_IN #_# m_NN -LRB-_-LRB- load_NN on_IN other_JJ machines_NNS -RRB-_-RRB- makespan_NN ,_, and_CC hence_RB the_DT makespan_NN has_VBZ at_IN most_JJS doubled_VBN ._.
This_DT spreading_VBG out_RP can_MD also_RB be_VB done_VBN if_IN the_DT initial_JJ schedule_NN is_VBZ fractional_JJ ._.
We_PRP now_RB describe_VBP the_DT algorithm_NN precisely_RB ._.
Algorithm_NN #_# Let_VB A_DT be_VB any_DT algorithm_NN that_WDT on_IN any_DT input_NN p_NN outputs_VBZ a_DT possibly_RB fractional_JJ assignment_NN x_NN such_JJ that_IN xij_NN >_JJR #_# implies_VBZ that_IN pij_NN T_NN ,_, where_WRB T_NN is_VBZ the_DT makespan_NN of_IN x_NN ._.
-LRB-_-LRB- In_IN particular_JJ ,_, note_NN that_IN any_DT algorithm_NN that_WDT returns_VBZ an_DT integral_JJ assignment_NN has_VBZ these_DT properties_NNS ._. -RRB-_-RRB-
Our_PRP$ algorithm_NN ,_, which_WDT we_PRP call_VBP A_DT ,_, returns_VBZ the_DT following_VBG assignment_NN xF_NN ._.
Initialize_VB xF_NN ij_NN =_JJ 0_CD for_IN all_DT i_FW ,_, j_NN ._.
For_IN every_DT i_FW ,_, j_NN ,_, 1_CD ._.
if_IN pij_NN =_JJ Hj_NN ,_, set_VBN xF_NN ij_NN =_JJ P_NN i_FW :_: pi_NN j_NN =_JJ Hj_NN xi_NN j_NN /_: m_NN ;_: 2_LS ._.
if_IN pij_NN =_JJ Lj_NN ,_, set_VBN xF_NN ij_NN =_JJ xij_NN +_CC P_NN i_FW =_JJ i_FW :_: pi_NN j_NN =_JJ Lj_NN -LRB-_-LRB- xi_NN j_NN xij_NN -RRB-_-RRB- /_: m_NN +_CC P_NN i_FW :_: pi_NN j_NN =_JJ Hj_NN xi_NN j_NN /_: m_NN ._.
Theorem_NNP #_# ._.
#_# Suppose_VB algorithm_NN A_NN satisfies_VBZ the_DT conditions_NNS in_IN Algorithm_NNP #_# and_CC returns_VBZ a_DT makespan_NN of_IN at_IN most_JJS cOPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- for_IN every_DT p_NN ._.
Then_RB ,_, the_DT algorithm_NN A_DT constructed_VBN above_IN is_VBZ a_DT 2c-approximation_JJ ,_, cycle-monotone_JJ fractional_JJ algorithm_NN ._.
Moreover_RB ,_, if_IN xF_NN ij_NN >_JJR #_# on_IN input_NN p_NN ,_, then_RB pij_NN c_NN OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
Proof_NN ._.
First_RB ,_, note_VBP that_IN xF_NN is_VBZ a_DT valid_JJ assignment_NN :_: for_IN every_DT job_NN j_NN ,_, P_NN i_FW xF_FW ij_NN =_JJ P_NN i_FW xij_FW +_CC P_NN i_FW ,_, i_FW =_JJ i_FW :_: pij_NN =_JJ pi_NN j_NN =_JJ Lj_NN -LRB-_-LRB- xi_NN j_NN xij_NN -RRB-_-RRB- /_: m_NN =_JJ P_NN i_FW xij_FW =_JJ #_# ._.
We_PRP also_RB have_VBP that_IN if_IN pij_NN =_JJ Hj_NN then_RB xF_NN ij_NN =_JJ P_NN i_FW :_: pi_NN j_NN =_JJ Hj_NN xi_NN j_NN /_: m_NN #_# /_: m_NN ._.
If_IN pij_NN =_JJ Lj_NN ,_, then_RB xF_NN ij_NN =_JJ xij_NN -LRB-_-LRB- #_# /_: m_NN -RRB-_-RRB- +_CC P_NN i_FW =_JJ i_FW xi_FW j_FW /_: m_NN where_WRB =_JJ |_CD -LCB-_-LRB- i_FW =_JJ i_FW :_: pi_NN j_NN =_JJ Lj_NN -RCB-_-RRB- |_CD m_NN #_# ;_: so_RB xF_NN ij_NN P_NN i_FW xi_FW j_FW /_: m_NN #_# /_: m_NN ._.
Thus_RB ,_, by_IN Lemma_NNP #_# ._.
#_# ,_, A_DT satisfies_NNS cycle_NN monotonicity_NN ._.
The_DT total_JJ load_NN on_IN any_DT machine_NN i_FW under_IN xF_NN is_VBZ at_IN mostP_NN j_NN :_: pij_NN =_JJ Hj_NN P_NN i_FW :_: pi_NN j_NN =_JJ Hj_NN Hj_NN xi_NN j_NN m_NN +_CC P_NN j_NN :_: pij_NN =_JJ Lj_NN Lj_NN `_`` xij_NN +_CC P_NN i_FW =_JJ i_FW xi_FW j_FW m_NN ,_, which_WDT is_VBZ at_IN most_JJS P_NN j_NN pijxij_NN +_CC P_NN i_FW =_JJ i_FW P_NN j_NN pi_NN jxi_NN j_NN /_: m_NN 2c_JJ OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
Finally_RB ,_, if_IN xF_NN ij_NN >_JJR #_# and_CC pij_NN =_JJ Lj_NN ,_, then_RB pij_NN OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
If_IN pij_NN =_JJ Hj_NN ,_, then_RB for_IN some_DT i_FW -LRB-_-LRB- possibly_RB i_LS -RRB-_-RRB- with_IN pi_NN j_NN =_JJ Hj_NN we_PRP have_VBP xi_NN j_NN >_JJR #_# ,_, so_RB by_IN assumption_NN ,_, pi_NN j_NN =_JJ Hj_NN =_JJ pij_NN c_NN OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
Theorem_NNP #_# ._.
#_# combined_VBN with_IN Lemmas_NNP #_# ._.
#_# and_CC #_# ._.
#_# ,_, gives_VBZ a_DT 3c-approximation_NN ,_, truthful-in-expectation_JJ mechanism_NN ._.
The_DT computation_NN of_IN payments_NNS will_MD depend_VB on_IN the_DT actual_JJ approximation_NN algorithm_NN used_VBN ._.
Section_NN #_# does_VBZ however_RB give_VB an_DT explicit_JJ procedure_NN to_TO compute_VB payments_NNS ensuring_VBG truthfulness_NN ,_, though_IN perhaps_RB not_RB in_IN polynomial-time_NN ._.
Theorem_NNP #_# ._.
#_# The_DT procedure_NN in_IN Algorithm_NNP #_# converts_VBZ any_DT c-approximation_NN fractional_JJ algorithm_NN into_IN a_DT 3c-approximation_NN ,_, truthful-in-expectation_JJ mechanism_NN ._.
Taking_VBG A_DT in_IN Algorithm_NNP #_# to_TO be_VB the_DT algorithm_NN that_WDT returns_VBZ an_DT LP-optimum_NN assignment_NN satisfying_VBG the_DT required_JJ conditions_NNS ,_, we_PRP obtain_VBP a_DT 3-approximation_JJ mechanism_NN ._.
Corollary_NNP #_# ._.
#_# There_EX is_VBZ a_DT truthful-in-expectation_JJ mechanism_NN with_IN approximation_NN ratio_NN #_# for_IN the_DT Lj-Hj_NN setting_NN ._.
5_CD ._.
A_DT DETERMINISTIC_JJ MECHANISM_NN FOR_IN THE_DT TWO-VALUES_NN CASE_NN We_PRP now_RB present_VBP a_DT deterministic_JJ 2-approximation_NN truthful_JJ mechanism_NN for_IN the_DT case_NN where_WRB pij_NN -LCB-_-LRB- L_NN ,_, H_NN -RCB-_-RRB- for_IN all_DT i_FW ,_, j_NN ._.
In_IN the_DT sequel_NN ,_, we_PRP will_MD often_RB say_VB that_IN j_NN is_VBZ assigned_VBN to_TO a_DT lowmachine_NN to_TO denote_VB that_IN j_NN is_VBZ assigned_VBN to_TO a_DT machine_NN i_FW where_WRB pij_NN =_JJ L_NN ._.
We_PRP will_MD call_VB a_DT job_NN j_NN a_DT low_JJ job_NN of_IN machine_NN i_FW if_IN pij_NN =_JJ L_NN ;_: the_DT low-load_JJ of_IN i_FW is_VBZ the_DT load_NN on_IN i_FW due_JJ to_TO its_PRP$ low_JJ jobs_NNS ,_, i_FW ._.
e_LS ._.
,_, P_NN j_NN :_: pij_NN =_JJ L_NN xijpij_NN ._.
As_IN in_IN Section_NN #_# ,_, our_PRP$ goal_NN is_VBZ to_TO obtain_VB an_DT approximation_NN algorithm_NN that_WDT satisfies_VBZ cycle_NN monotonicity_NN ._.
We_PRP first_RB obtain_VB a_DT simplification_NN of_IN condition_NN -LRB-_-LRB- #_# -RRB-_-RRB- for_IN our_PRP$ two-values_NNS -LCB-_-LRB- L_NN ,_, H_NN -RCB-_-RRB- scheduling_NN domain_NN -LRB-_-LRB- Proposition_NN #_# ._.
#_# -RRB-_-RRB- that_WDT will_MD be_VB convenient_JJ to_TO work_VB with_IN ._.
We_PRP describe_VBP our_PRP$ algorithm_NN in_IN Section_NN #_# ._.
#_# ._.
In_IN Section_NN #_# ._.
#_# ,_, we_PRP bound_VBD its_PRP$ approximation_NN guarantee_NN and_CC prove_VB that_IN it_PRP satisfies_VBZ cycle-monotonicity_NN ._.
In_IN Section_NN #_# ._.
#_# ,_, we_PRP compute_VBP explicit_JJ payments_NNS giving_VBG a_DT truthful_JJ mechanism_NN ._.
Finally_RB ,_, in_IN Section_NN #_# ._.
#_# we_PRP show_VBP that_IN no_DT deterministic_JJ mechanism_NN can_MD achieve_VB the_DT optimum_JJ makespan_NN ._.
Define_VB nk_NN ,_, H_NN =_JJ -LCB-_-LRB- j_NN :_: xk_NN ij_NN =_JJ #_# ,_, pk_NN ij_NN =_JJ L_NN ,_, pij_NN =_JJ H_NN -RCB-_-RRB- -LRB-_-LRB- #_# -RRB-_-RRB- nk_NN ,_, L_NN =_JJ -LCB-_-LRB- j_NN :_: xk_NN ij_NN =_JJ #_# ,_, pk_NN ij_NN =_JJ H_NN ,_, pij_NN =_JJ L_NN -RCB-_-RRB- ._.
-LRB-_-LRB- #_# -RRB-_-RRB- Then_RB ,_, P_NN j_NN xk_NN +_CC #_# ij_NN -LRB-_-LRB- pk_NN ij_NN pk_NN +_CC #_# ij_NN -RRB-_-RRB- =_JJ -LRB-_-LRB- nk_NN +_CC #_# ,_, k_NN H_NN nk_NN +_CC #_# ,_, k_NN L_NN -RRB-_-RRB- -LRB-_-LRB- H_NN L_NN -RRB-_-RRB- ._.
Plugging_VBG this_DT into_IN -LRB-_-LRB- #_# -RRB-_-RRB- and_CC dividing_VBG by_IN -LRB-_-LRB- H_NN L_NN -RRB-_-RRB- ,_, we_PRP get_VBP the_DT following_VBG ._.
Proposition_NN #_# ._.
#_# Cycle_NN monotonicity_NN in_IN the_DT two-values_NNS scheduling_NN domain_NN is_VBZ equivalent_JJ to_TO the_DT condition_NN that_IN ,_, for_IN every_DT player_NN i_FW ,_, every_DT pi_NN ,_, every_DT integer_NN K_NN ,_, and_CC every_DT p1_NN i_FW ,_, ..._: ,_, pK_NN i_FW ,_, KX_NNP k_NN =_JJ #_# `_`` nk_NN +_CC #_# ,_, k_NN H_NN nk_NN +_CC #_# ,_, k_NN L_NN #_# ._.
-LRB-_-LRB- #_# -RRB-_-RRB- 257_CD 5_CD ._.
#_# Acycle-monotone_NN approximation_NN algorithm_NN We_PRP now_RB describe_VBP an_DT algorithm_NN that_IN satisfies_NNS condition_NN -LRB-_-LRB- #_# -RRB-_-RRB- and_CC achieves_VBZ a_DT 2-approximation_NN ._.
We_PRP will_MD assume_VB that_IN L_NN ,_, H_NN are_VBP integers_NNS ,_, which_WDT is_VBZ without_IN loss_NN of_IN generality_NN ._.
A_DT core_NN component_NN of_IN our_PRP$ algorithm_NN will_MD be_VB a_DT procedure_NN that_WDT takes_VBZ an_DT integer_NN load_NN threshold_NN T_NN and_CC computes_VBZ an_DT integer_NN partial_JJ assignment_NN x_NN of_IN jobs_NNS to_TO machines_NNS such_JJ that_IN -LRB-_-LRB- a_DT -RRB-_-RRB- a_DT job_NN is_VBZ only_RB assigned_VBN to_TO a_DT low_JJ machine_NN ;_: -LRB-_-LRB- b_LS -RRB-_-RRB- the_DT load_NN on_IN any_DT machine_NN is_VBZ at_IN most_JJS T_NN ;_: and_CC -LRB-_-LRB- c_LS -RRB-_-RRB- the_DT number_NN of_IN jobs_NNS assigned_VBN is_VBZ maximized_VBN ._.
Such_PDT an_DT assignment_NN can_MD be_VB computed_VBN by_IN solving_VBG a_DT max-flow_JJ problem_NN :_: we_PRP construct_VBP a_DT directed_VBN bipartite_JJ graph_NN with_IN a_DT node_NN for_IN every_DT job_NN j_NN and_CC every_DT machine_NN i_FW ,_, and_CC an_DT edge_NN -LRB-_-LRB- j_NN ,_, i_LS -RRB-_-RRB- of_IN infinite_JJ capacity_NN if_IN pij_NN =_JJ L_NN ._.
We_PRP also_RB add_VBP a_DT source_NN node_NN s_NNS with_IN edges_NNS -LRB-_-LRB- s_NNS ,_, j_NN -RRB-_-RRB- having_VBG capacity_NN #_# ,_, and_CC sink_VB node_NN t_NN with_IN edges_NNS -LRB-_-LRB- i_FW ,_, t_NN -RRB-_-RRB- having_VBG capacity_NN T_NN /_: L_NN ._.
Clearly_RB any_DT integer_NN flow_NN in_IN this_DT network_NN corresponds_VBZ to_TO a_DT valid_JJ integer_NN partial_JJ assignment_NN x_NN of_IN makespan_NN at_IN most_JJS T_NN ,_, where_WRB xij_NN =_JJ #_# iff_FW there_EX is_VBZ a_DT flow_NN of_IN #_# on_IN the_DT edge_NN from_IN j_NN to_TO i_FW ._.
We_PRP will_MD therefore_RB use_VB the_DT terms_NNS assignment_NN and_CC flow_NN interchangeably_RB ._.
Moreover_RB ,_, there_EX is_VBZ always_RB an_DT integral_JJ max-flow_NN -LRB-_-LRB- since_IN all_DT capacities_NNS are_VBP integers_NNS -RRB-_-RRB- ._.
We_PRP will_MD often_RB refer_VB to_TO such_PDT a_DT max-flow_NN as_IN the_DT max-flow_NN for_IN -LRB-_-LRB- p_NN ,_, T_NN -RRB-_-RRB- ._.
We_PRP need_VBP one_CD additional_JJ concept_NN before_IN describing_VBG the_DT algorithm_NN ._.
There_EX could_MD potentially_RB be_VB many_JJ max-flows_NNS and_CC we_PRP will_MD be_VB interested_JJ in_IN the_DT most_RBS balanced_JJ ones_NNS ,_, which_WDT we_PRP formally_RB define_VBP as_IN follows_VBZ ._.
Fix_VB some_DT max-flow_NN ._.
Let_VB ni_NNS p_NN ,_, T_NN be_VB the_DT amount_NN of_IN flow_NN on_IN edge_NN -LRB-_-LRB- i_FW ,_, t_NN -RRB-_-RRB- -LRB-_-LRB- or_CC equivalently_RB the_DT number_NN of_IN jobs_NNS assigned_VBN to_TO i_FW in_IN the_DT corresponding_JJ schedule_NN -RRB-_-RRB- ,_, and_CC let_VB np_NN ,_, T_NN be_VB the_DT total_JJ size_NN of_IN the_DT max-flow_NN ,_, i_FW ._.
e_LS ._.
,_, np_NN ,_, T_NN =_JJ P_NN i_FW ni_FW p_NN ,_, T_NN ._.
For_IN any_DT T_NN T_NN ,_, define_VB ni_NNS p_NN ,_, T_NN |_CD T_NN =_JJ min_NN -LRB-_-LRB- ni_NNS p_NN ,_, T_NN ,_, T_NN -RRB-_-RRB- ,_, that_WDT is_VBZ ,_, we_PRP truncate_VBP the_DT flow_NN /_: assignment_NN on_IN i_FW so_IN that_IN the_DT total_JJ load_NN on_IN i_FW is_VBZ at_IN most_JJS T_NN ._.
Define_VB np_NN ,_, T_NN |_CD T_NN =_JJ P_NN i_FW ni_FW p_NN ,_, T_NN |_CD T_NN ._.
We_PRP define_VBP a_DT prefix-maximal_JJ flow_NN or_CC assignment_NN for_IN T_NN as_IN follows_VBZ ._.
Definition_NN #_# ._.
#_# -LRB-_-LRB- Prefix-maximal_JJ flow_NN -RRB-_-RRB- A_NN flow_NN for_IN the_DT above_JJ network_NN with_IN threshold_NN T_NN is_VBZ prefix-maximal_JJ if_IN for_IN every_DT integer_NN T_NN T_NN ,_, we_PRP have_VBP np_NN ,_, T_NN |_CD T_NN =_JJ np_NN ,_, T_NN ._.
That_DT is_VBZ ,_, in_IN a_DT prefix-maximal_JJ flow_NN for_IN -LRB-_-LRB- p_NN ,_, T_NN -RRB-_-RRB- ,_, if_IN we_PRP truncate_VBP the_DT flow_NN at_IN some_DT T_NN T_NN ,_, we_PRP are_VBP left_VBN with_IN a_DT max-flow_NN for_IN -LRB-_-LRB- p_NN ,_, T_NN -RRB-_-RRB- ._.
An_DT elementary_JJ fact_NN about_IN flows_NNS is_VBZ that_IN if_IN an_DT assignment_NN /_: flow_NN x_NN is_VBZ not_RB a_DT maximum_NN flow_NN for_IN -LRB-_-LRB- p_NN ,_, T_NN -RRB-_-RRB- then_RB there_EX must_MD be_VB an_DT augmenting_VBG path_NN P_NN =_JJ -LRB-_-LRB- s_NNS ,_, j1_NN ,_, i1_NN ,_, ..._: ,_, jK_NNP ,_, iK_NNP ,_, t_NN -RRB-_-RRB- in_IN the_DT residual_JJ graph_NN that_WDT allows_VBZ us_PRP to_TO increase_VB the_DT size_NN of_IN the_DT flow_NN ._.
The_DT interpretation_NN is_VBZ that_IN in_IN the_DT current_JJ assignment_NN ,_, j1_NN is_VBZ unassigned_JJ ,_, xi_NN j_NN =_JJ #_# ,_, which_WDT is_VBZ denoted_VBN by_IN the_DT forward_JJ edges_NNS -LRB-_-LRB- j_NN ,_, i_LS -RRB-_-RRB- ,_, and_CC xi_NN j_NN +_CC #_# =_JJ #_# ,_, which_WDT is_VBZ denoted_VBN by_IN the_DT reverse_JJ edges_NNS -LRB-_-LRB- i_FW ,_, j_NN +_CC #_# -RRB-_-RRB- ._.
Augmenting_VBG x_CC using_VBG P_NN changes_NNS the_DT assignment_NN so_IN that_IN each_DT j_NN is_VBZ assigned_VBN to_TO i_FW in_IN the_DT new_JJ assignment_NN ,_, which_WDT increases_VBZ the_DT value_NN of_IN the_DT flow_NN by_IN #_# ._.
A_DT simple_JJ augmenting_VBG path_NN does_VBZ not_RB decrease_VB the_DT load_NN of_IN any_DT machine_NN ;_: thus_RB ,_, one_PRP can_MD argue_VB that_IN a_DT prefix-maximal_JJ flow_NN for_IN a_DT threshold_NN T_NN always_RB exists_VBZ ._.
We_PRP first_RB compute_VB a_DT max-flow_NN for_IN threshold_NN #_# ,_, use_VB simple_JJ augmenting_VBG paths_NNS to_TO augment_VB it_PRP to_TO a_DT max-flow_NN for_IN threshold_NN #_# ,_, and_CC repeat_NN ,_, each_DT time_NN augmenting_VBG the_DT max-flow_NN for_IN the_DT previous_JJ threshold_NN t_NN to_TO a_DT max-flow_NN for_IN threshold_NN t_NN +_CC #_# using_VBG simple_JJ augmenting_VBG paths_NNS ._.
Algorithm_NN #_# Given_VBN a_DT vector_NN of_IN processing_NN times_NNS p_NN ,_, construct_NN an_DT assignment_NN of_IN jobs_NNS to_TO machines_NNS as_IN follows_VBZ ._.
1_LS ._.
Compute_VB T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- =_JJ min_NN T_NN H_NN ,_, T_NN multiple_NN of_IN L_NN :_: np_NN ,_, T_NN L_NN +_CC -LRB-_-LRB- n_NN np_NN ,_, T_NN -RRB-_-RRB- H_NN m_NN T_NN ._.
Note_VB that_DT np_NN ,_, T_NN L_NN +_CC -LRB-_-LRB- nnp_NN ,_, T_NN -RRB-_-RRB- H_NN mT_NN is_VBZ a_DT decreasing_VBG function_NN of_IN T_NN ,_, so_RB T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- can_MD be_VB computed_VBN in_IN polynomial_JJ time_NN via_IN binary_JJ search_NN ._.
2_LS ._.
Compute_VB a_DT prefix-maximal_JJ flow_NN for_IN threshold_NN T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- and_CC the_DT corresponding_JJ partial_JJ assignment_NN -LRB-_-LRB- i_FW ._.
e_LS ._.
,_, j_NN is_VBZ assigned_VBN to_TO i_FW iff_FW there_EX is_VBZ #_# unit_NN of_IN flow_NN on_IN edge_NN -LRB-_-LRB- j_NN ,_, i_LS -RRB-_-RRB- -RRB-_-RRB- ._.
3_LS ._.
Assign_VB the_DT remaining_VBG jobs_NNS ,_, i_FW ._.
e_LS ._.
,_, the_DT jobs_NNS unassigned_JJ in_IN the_DT flow-phase_NN ,_, in_IN a_DT greedy_JJ manner_NN as_IN follows_VBZ ._.
Consider_VB these_DT jobs_NNS in_IN an_DT arbitrary_JJ order_NN and_CC assign_VB each_DT job_NN to_TO the_DT machine_NN with_IN the_DT current_JJ lowest_JJS load_NN -LRB-_-LRB- where_WRB the_DT load_NN includes_VBZ the_DT jobs_NNS assigned_VBN in_IN the_DT flow-phase_NN -RRB-_-RRB- ._.
Our_PRP$ algorithm_NN needs_VBZ to_TO compute_VB a_DT prefix-maximal_JJ assignment_NN for_IN the_DT threshold_NN T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
The_DT proof_NN showing_VBG the_DT existence_NN of_IN a_DT prefix-maximal_JJ flow_NN only_RB yields_VBZ a_DT pseudopolynomial_JJ time_NN algorithm_NN for_IN computing_VBG it_PRP ._.
But_CC notice_NN that_IN the_DT max-flow_NN remains_VBZ the_DT same_JJ for_IN any_DT T_NN T_NN =_JJ n_NN L_NN ._.
So_IN a_DT prefix-maximal_JJ flow_NN for_IN T_NN is_VBZ also_RB prefix-maximal_JJ for_IN any_DT T_NN T_NN ._.
Thus_RB ,_, we_PRP only_RB need_VBP to_TO compute_VB a_DT prefix-maximal_JJ flow_NN for_IN T_NN =_JJ min_NN -LCB-_-LRB- T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ,_, T_NN -RCB-_-RRB- ._.
This_DT can_MD be_VB be_VB done_VBN in_IN polynomial_JJ time_NN by_IN using_VBG the_DT iterative-augmenting-paths_JJ algorithm_NN in_IN the_DT existence_NN proof_NN to_TO compute_VB iteratively_RB the_DT maxflow_NN for_IN the_DT polynomially_RB many_JJ multiples_NNS of_IN L_NN up_IN to_TO -LRB-_-LRB- and_CC including_VBG -RRB-_-RRB- T_NN ._.
Theorem_NNP #_# ._.
#_# One_CD can_MD efficiently_RB compute_VB payments_NNS that_WDT when_WRB combined_VBN with_IN Algorithm_NN #_# yield_VB a_DT deterministic_JJ 2approximation_NN truthful_JJ mechanism_NN for_IN the_DT two-values_NNS scheduling_NN domain_NN ._.
5_CD ._.
#_# Analysis_NN Let_VB OPT_NNP -LRB-_-LRB- p_NN -RRB-_-RRB- denote_VBP the_DT optimal_JJ makespan_NN for_IN p_NN ._.
We_PRP now_RB prove_VBP that_IN Algorithm_NN #_# is_VBZ a_DT 2-approximation_JJ algorithm_NN that_WDT satisfies_VBZ cycle_NN monotonicity_NN ._.
This_DT will_MD then_RB allow_VB us_PRP to_TO compute_VB payments_NNS in_IN Section_NN #_# ._.
#_# and_CC prove_VB Theorem_NNP #_# ._.
#_# ._.
5_CD ._.
#_# ._.
#_# Proof_NNP of_IN approximation_NN Claim_NN #_# ._.
#_# If_IN OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- <_JJR H_NN ,_, the_DT makespan_NN is_VBZ at_IN most_JJS OPT_NNS -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
Proof_NN ._.
If_IN OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- <_JJR H_NN ,_, it_PRP must_MD be_VB that_IN the_DT optimal_JJ schedule_NN assigns_VBZ all_DT jobs_NNS to_TO low_JJ machines_NNS ,_, so_RB np_NN ,_, OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- =_JJ n_NN ._.
Thus_RB ,_, we_PRP have_VBP T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- =_JJ L_NN H_NN L_NN ._.
Furthermore_RB ,_, since_IN we_PRP compute_VBP a_DT prefix-maximal_JJ flow_NN for_IN threshold_NN T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- we_PRP have_VBP np_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- |_CD OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- =_JJ np_NN ,_, OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- =_JJ n_NN ,_, which_WDT implies_VBZ that_IN the_DT load_NN on_IN each_DT machine_NN is_VBZ at_IN most_JJS OPT_NNS -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
So_RB in_IN this_DT case_NN the_DT makespan_NN is_VBZ at_IN most_JJS -LRB-_-LRB- and_CC hence_RB exactly_RB -RRB-_-RRB- OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
Claim_NN #_# ._.
#_# If_IN OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- H_NN ,_, then_RB T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- L_NN OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- L_NN OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- +_CC L_NN ._.
Proof_NN ._.
Let_VB nOPT_NNP -LRB-_-LRB- p_NN -RRB-_-RRB- be_VB the_DT number_NN of_IN jobs_NNS assigned_VBN to_TO low_JJ machines_NNS in_IN an_DT optimum_JJ schedule_NN ._.
The_DT total_JJ load_NN on_IN all_DT machines_NNS is_VBZ exactly_RB nOPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- L_NN +_CC -LRB-_-LRB- n_NN nOPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- -RRB-_-RRB- H_NN ,_, and_CC is_VBZ at_IN most_JJS m_NN OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ,_, since_IN every_DT machine_NN has_VBZ load_NN at_IN most_JJS OPT_NNS -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
So_RB taking_VBG T_NN =_JJ L_NN OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- L_NN H_NN ,_, since_IN np_NN ,_, T_NN nOPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- we_PRP have_VBP that_IN np_NN ,_, T_NN L_NN +_CC -LRB-_-LRB- nnp_NN ,_, T_NN -RRB-_-RRB- H_NN mT_NN ._.
Hence_RB ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ,_, the_DT smallest_JJS such_JJ T_NN ,_, is_VBZ at_IN most_JJS L_NN OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- L_NN ._.
Claim_NN #_# ._.
#_# Each_DT job_NN assigned_VBN in_IN step_NN #_# of_IN the_DT algorithm_NN is_VBZ assigned_VBN to_TO a_DT high_JJ machine_NN ._.
258_CD Proof_NNP ._.
Suppose_VB j_NN is_VBZ assigned_VBN to_TO machine_NN i_FW in_IN step_NN #_# ._.
If_IN pij_NN =_JJ L_NN ,_, then_RB we_PRP must_MD have_VB ni_NNS p_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- =_JJ T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ,_, otherwise_RB we_PRP could_MD have_VB assigned_VBN j_NN to_TO i_FW in_IN step_NN #_# to_TO obtain_VB a_DT flow_NN of_IN larger_JJR value_NN ._.
So_RB at_IN the_DT point_NN just_RB before_IN j_NN is_VBZ assigned_VBN in_IN step_NN #_# ,_, the_DT load_NN of_IN each_DT machine_NN must_MD be_VB at_IN least_JJS T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
Hence_RB ,_, the_DT total_JJ load_NN after_IN j_NN is_VBZ assigned_VBN is_VBZ at_IN least_JJS m_NN T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- +_CC L_NN >_JJR m_NN T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
But_CC the_DT total_JJ load_NN is_VBZ also_RB at_IN most_JJS np_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- L_NN +_CC -LRB-_-LRB- n_NN np_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- -RRB-_-RRB- H_NN m_NN T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ,_, yielding_VBG a_DT contradiction_NN ._.
Lemma_NNP #_# ._.
#_# The_DT above_IN algorithm_NN returns_VBZ a_DT schedule_NN with_IN makespan_NN at_IN most_JJS OPT_NNS -LRB-_-LRB- p_NN -RRB-_-RRB- +_CC max_NN L_NN ,_, H_NN -LRB-_-LRB- #_# #_# m_NN -RRB-_-RRB- 2OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
Proof_NN ._.
If_IN OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- <_JJR H_NN ,_, then_RB by_IN Claim_NNP #_# ._.
#_# ,_, we_PRP are_VBP done_VBN ._.
So_RB suppose_VB OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- H_NN ._.
By_IN Claim_NN #_# ._.
#_# ,_, we_PRP know_VBP that_IN T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- +_CC L_NN ._.
If_IN there_EX are_VBP no_DT unassigned_JJ jobs_NNS after_IN step_NN #_# of_IN the_DT algorithm_NN ,_, then_RB the_DT makespan_NN is_VBZ at_IN most_JJS T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- and_CC we_PRP are_VBP done_VBN ._.
So_RB assume_VB that_IN there_EX are_VBP some_DT unassigned_JJ jobs_NNS after_IN step_NN #_# ._.
We_PRP will_MD show_VB that_IN the_DT makespan_NN after_IN step_NN 3_CD is_VBZ at_IN most_JJS T_NN +_CC H_NN `_`` 1_CD #_# m_NN where_WRB T_NN =_JJ min_NN T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ,_, OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
Suppose_VB the_DT claim_NN is_VBZ false_JJ ._.
Let_VB i_FW be_VB the_DT machine_NN with_IN the_DT maximum_NN load_NN ,_, so_RB li_JJ >_JJR T_NN +_CC H_NN `_`` 1_CD #_# m_NN ._.
Let_VB j_NN be_VB the_DT last_JJ job_NN assigned_VBN to_TO i_FW in_IN step_NN #_# ,_, and_CC consider_VB the_DT point_NN just_RB before_IN it_PRP is_VBZ assigned_VBN to_TO i_LS ._.
So_RB li_JJ >_JJR T_NN H_NN /_: m_NN at_IN this_DT point_NN ._.
Also_RB since_IN j_NN is_VBZ assigned_VBN to_TO i_FW ,_, by_IN our_PRP$ greedy_JJ rule_NN ,_, the_DT load_NN on_IN all_PDT the_DT other_JJ machines_NNS must_MD be_VB at_IN least_JJS li_NNS ._.
So_IN the_DT total_JJ load_NN after_IN j_NN is_VBZ assigned_VBN ,_, is_VBZ at_IN least_JJS H_NN +_CC m_NN li_NN >_JJR m_NN T_NN -LRB-_-LRB- since_IN pij_NN =_JJ H_NN by_IN Claim_NNP #_# ._.
#_# -RRB-_-RRB- ._.
Also_RB ,_, for_IN any_DT assignment_NN of_IN jobs_NNS to_TO machines_NNS in_IN step_NN #_# ,_, the_DT total_JJ load_NN is_VBZ at_IN most_JJS np_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- L_NN +_CC -LRB-_-LRB- n_NN np_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- -RRB-_-RRB- H_NN since_IN there_EX are_VBP np_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- jobs_NNS assigned_VBN to_TO low_JJ machines_NNS ._.
Therefore_RB ,_, we_PRP must_MD have_VB m_NN T_NN <_JJR np_CD ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- L_NN +_CC -LRB-_-LRB- n_NN np_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- -RRB-_-RRB- H_NN ._.
But_CC we_PRP will_MD argue_VB that_IN m_NN T_NN np_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- L_NN +_CC -LRB-_-LRB- nnp_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- -RRB-_-RRB- H_NN ,_, which_WDT yields_VBZ a_DT contradiction_NN ._.
If_IN T_NN =_JJ T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ,_, this_DT follows_VBZ from_IN the_DT definition_NN of_IN T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
If_IN T_NN =_JJ OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ,_, then_RB letting_VBG nOPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- denote_VBP the_DT number_NN of_IN jobs_NNS assigned_VBN to_TO low_JJ machines_NNS in_IN an_DT optimum_JJ schedule_NN ,_, we_PRP have_VBP np_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- nOPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
So_RB np_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- L_NN +_CC -LRB-_-LRB- nnp_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- -RRB-_-RRB- H_NN nOPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- L_NN +_CC -LRB-_-LRB- nnOPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- -RRB-_-RRB- H_NN ._.
This_DT is_VBZ exactly_RB the_DT total_JJ load_NN in_IN an_DT optimum_JJ schedule_NN ,_, which_WDT is_VBZ at_IN most_JJS m_NN OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
5_CD ._.
#_# ._.
#_# Proof_NNP of_IN cycle_NN monotonicity_NN Lemma_NNP #_# ._.
#_# Consider_VB any_DT two_CD instances_NNS p_NN =_JJ -LRB-_-LRB- pi_NN ,_, pi_NN -RRB-_-RRB- and_CC p_NN =_JJ -LRB-_-LRB- pi_NN ,_, pi_NN -RRB-_-RRB- where_WRB pi_NN pi_NN ,_, i_FW ._.
e_LS ._.
,_, pij_NN pij_NN j_NN ._.
If_IN T_NN is_VBZ a_DT threshold_NN such_JJ that_IN np_NN ,_, T_NN >_JJR np_NN ,_, T_NN ,_, then_RB every_DT maximum_NN flow_NN x_NN for_IN -LRB-_-LRB- p_NN ,_, T_NN -RRB-_-RRB- must_MD assign_VB all_DT jobs_NNS j_VBP such_JJ that_IN pij_NN =_JJ L_NN ._.
Proof_NN ._.
Let_VB Gp_NNP denote_VB the_DT residual_JJ graph_NN for_IN -LRB-_-LRB- p_NN ,_, T_NN -RRB-_-RRB- and_CC flow_NN x_NN ._.
Suppose_VB by_IN contradiction_NN that_IN there_EX exists_VBZ a_DT job_NN j_NN with_IN pij_NN =_JJ L_NN that_WDT is_VBZ unassigned_JJ by_IN x_NN ._.
Since_IN pi_NN pi_NN ,_, all_DT edges_NNS -LRB-_-LRB- j_NN ,_, i_LS -RRB-_-RRB- that_WDT are_VBP present_JJ in_IN the_DT network_NN for_IN -LRB-_-LRB- p_NN ,_, T_NN -RRB-_-RRB- are_VBP also_RB present_JJ in_IN the_DT network_NN for_IN -LRB-_-LRB- p_NN ,_, T_NN -RRB-_-RRB- ._.
Thus_RB ,_, x_NN is_VBZ a_DT valid_JJ flow_NN for_IN -LRB-_-LRB- p_NN ,_, T_NN -RRB-_-RRB- ._.
But_CC it_PRP is_VBZ not_RB a_DT max-flow_NN ,_, since_IN np_NN ,_, T_NN >_JJR np_NN ,_, T_NN ._.
So_RB there_EX exists_VBZ an_DT augmenting_VBG path_NN P_NN in_IN the_DT residual_JJ graph_NN for_IN -LRB-_-LRB- p_NN ,_, T_NN -RRB-_-RRB- and_CC flow_NN x_NN ._.
Observe_VB that_DT node_NN i_FW must_MD be_VB included_VBN in_IN P_NN ,_, otherwise_RB P_NN would_MD also_RB be_VB an_DT augmenting_VBG path_NN in_IN the_DT residual_JJ graph_NN Gp_NN contradicting_VBG the_DT fact_NN that_IN x_NN is_VBZ a_DT maxflow_NN ._.
In_IN particular_JJ ,_, this_DT implies_VBZ that_IN there_EX is_VBZ a_DT path_NN P_NN P_NN from_IN i_FW to_TO the_DT sink_NN t_NN ._.
Let_VB P_NN =_JJ -LRB-_-LRB- i_FW ,_, j1_NN ,_, i1_NN ,_, ..._: ,_, jK_NNP ,_, iK_NNP ,_, t_NN -RRB-_-RRB- ._.
All_PDT the_DT edges_NNS of_IN P_NN are_VBP also_RB present_JJ as_IN edges_NNS in_IN Gp_NN -_: all_DT reverse_JJ edges_NNS -LRB-_-LRB- i_FW ,_, j_NN +_CC #_# -RRB-_-RRB- are_VBP present_JJ since_IN such_PDT an_DT edge_NN implies_VBZ that_IN xi_NN j_NN +_CC #_# =_JJ #_# ;_: all_DT forward_RB edges_NNS -LRB-_-LRB- j_NN ,_, i_LS -RRB-_-RRB- are_VBP present_JJ since_IN i_FW =_JJ i_FW so_IN pi_NN j_NN =_JJ pi_NN j_NN =_JJ L_NN ,_, and_CC xi_NN j_NN +_CC #_# =_JJ #_# ._.
But_CC then_RB there_EX is_VBZ an_DT augmenting_VBG path_NN -LRB-_-LRB- j_NN ,_, i_FW ,_, j1_NN ,_, i1_NN ,_, ..._: ,_, jK_NNP ,_, iK_NNP ,_, t_NN -RRB-_-RRB- in_IN Gp_NN which_WDT contradicts_VBZ the_DT maximality_NN of_IN x_NN ._.
Let_VB L_NNP denote_VB the_DT all-low_JJ processing_NN time_NN vector_NN ._.
Define_VB TL_NN i_FW -LRB-_-LRB- pi_NN -RRB-_-RRB- =_JJ T_NN -LRB-_-LRB- L_NN ,_, pi_NN -RRB-_-RRB- ._.
Since_IN we_PRP are_VBP focusing_VBG on_IN machine_NN i_FW ,_, and_CC pi_NN is_VBZ fixed_VBN throughout_IN ,_, we_PRP abbreviate_VBP TL_NN i_FW -LRB-_-LRB- pi_NN -RRB-_-RRB- to_TO TL_NN ._.
Also_RB ,_, let_VB pL_NN =_JJ -LRB-_-LRB- L_NN ,_, pi_NN -RRB-_-RRB- ._.
Note_VB that_IN T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- TL_NN for_IN every_DT instance_NN p_NN =_JJ -LRB-_-LRB- pi_NN ,_, pi_NN -RRB-_-RRB- ._.
Corollary_NNP #_# ._.
#_# Let_VB p_NN =_JJ -LRB-_-LRB- pi_NN ,_, pi_NN -RRB-_-RRB- be_VB any_DT instance_NN and_CC let_VB x_NN be_VB any_DT prefix-maximal_JJ flow_NN for_IN -LRB-_-LRB- p_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- -RRB-_-RRB- ._.
Then_RB ,_, the_DT low-load_JJ on_IN machine_NN i_FW is_VBZ at_IN most_JJS TL_NN ._.
Proof_NN ._.
Let_VB T_NN =_JJ T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
If_IN T_NN =_JJ TL_NN ,_, then_RB this_DT is_VBZ clearly_RB true_JJ ._.
Otherwise_RB ,_, consider_VB the_DT assignment_NN x_NN truncated_VBN at_IN TL_NN ._.
Since_IN x_NN is_VBZ prefix-maximal_JJ ,_, we_PRP know_VBP that_IN this_DT constitutes_VBZ a_DT max-flow_NN for_IN -LRB-_-LRB- p_NN ,_, TL_NN -RRB-_-RRB- ._.
Also_RB ,_, np_NN ,_, T_NN L_NN <_JJR npL_NN ,_, T_NN L_NN because_IN T_NN >_JJR TL_NN ._.
So_RB by_IN Lemma_NNP #_# ._.
#_# ,_, this_DT truncated_VBN flow_NN must_MD assign_VB all_PDT the_DT low_JJ jobs_NNS of_IN i_FW ._.
Hence_RB ,_, there_EX can_MD not_RB be_VB a_DT job_NN j_NN with_IN pij_NN =_JJ L_NN that_WDT is_VBZ assigned_VBN to_TO i_FW after_IN the_DT TL_NN -_: threshold_NN since_IN then_RB j_NN would_MD not_RB be_VB assigned_VBN by_IN this_DT truncated_VBN flow_NN ._.
Thus_RB ,_, the_DT low-load_JJ of_IN i_FW is_VBZ at_IN most_JJS TL_NN ._.
Using_VBG these_DT properties_NNS ,_, we_PRP will_MD prove_VB the_DT following_VBG key_JJ inequality_NN :_: for_IN any_DT p1_NN =_JJ -LRB-_-LRB- pi_NN ,_, p1_NN i_LS -RRB-_-RRB- and_CC p2_NN =_JJ -LRB-_-LRB- pi_NN ,_, p2_NN i_LS -RRB-_-RRB- ,_, np1_NN ,_, T_NN L_NN np2_NN ,_, T_NN L_NN n2_NN ,_, #_# H_NN +_CC n2_NN ,_, #_# L_NN -LRB-_-LRB- #_# -RRB-_-RRB- where_WRB n2_NN ,_, #_# H_NN and_CC n2_NN ,_, #_# L_NN are_VBP as_IN defined_VBN in_IN -LRB-_-LRB- #_# -RRB-_-RRB- and_CC -LRB-_-LRB- #_# -RRB-_-RRB- ,_, respectively_RB ._.
Notice_NNP that_IN this_DT immediately_RB implies_VBZ cycle_NN monotonicity_NN ,_, since_IN if_IN we_PRP take_VBP p1_NN =_JJ pk_NN and_CC p2_NN =_JJ pk_NN +_CC #_# ,_, then_RB -LRB-_-LRB- #_# -RRB-_-RRB- implies_VBZ that_IN npk_NN ,_, T_NN L_NN npk_NN +_CC #_# ,_, T_NN L_NN nk_NN +_CC #_# ,_, k_NN H_NN +_CC nk_NN +_CC #_# ,_, k_NN L_NN ;_: summing_VBG this_DT over_IN all_DT k_NN =_JJ #_# ,_, ..._: ,_, K_NNP gives_VBZ -LRB-_-LRB- #_# -RRB-_-RRB- ._.
Lemma_NNP #_# ._.
##_NN If_IN T_NN -LRB-_-LRB- p1_NN -RRB-_-RRB- >_JJR TL_NN ,_, then_RB -LRB-_-LRB- #_# -RRB-_-RRB- holds_VBZ ._.
Proof_NN ._.
Let_VB T1_NN =_JJ T_NN -LRB-_-LRB- p1_NN -RRB-_-RRB- and_CC T2_NN =_JJ T_NN -LRB-_-LRB- p2_NN -RRB-_-RRB- ._.
Take_VB the_DT prefix-maximal_JJ flow_NN x2_NN for_IN -LRB-_-LRB- p2_NN ,_, T2_NN -RRB-_-RRB- ,_, truncate_VB it_PRP at_IN TL_NN ,_, and_CC remove_VB all_PDT the_DT jobs_NNS from_IN this_DT assignment_NN that_WDT are_VBP counted_VBN in_IN n2_NN ,_, #_# H_NN ,_, that_WDT is_VBZ ,_, all_DT jobs_NNS j_VBP such_JJ that_IN x2_NN ij_NN =_JJ #_# ,_, p2_NN ij_NN =_JJ L_NN ,_, p1_NN ij_NN =_JJ H_NN ._.
Denote_VB this_DT flow_NN by_IN x_NN ._.
Observe_VB that_DT x_NN is_VBZ a_DT valid_JJ flow_NN for_IN -LRB-_-LRB- p1_NN ,_, TL_NN -RRB-_-RRB- ,_, and_CC the_DT size_NN of_IN this_DT flow_NN is_VBZ exactly_RB np2_NN ,_, T_NN #_# |_CD T_NN L_NN n2_NN ,_, #_# H_NN =_JJ np2_NN ,_, T_NN L_NN n2_NN ,_, #_# H_NN ._.
Also_RB none_NN of_IN the_DT jobs_NNS that_WDT are_VBP counted_VBN in_IN n2_NN ,_, #_# L_NN are_VBP assigned_VBN by_IN x_CC since_IN each_DT such_JJ job_NN j_NN is_VBZ high_JJ on_IN i_FW in_FW p2_NN ._.
Since_IN T1_NN >_JJR TL_NN ,_, we_PRP must_MD have_VB np1_NN ,_, T_NN L_NN <_JJR npL_NN ,_, T_NN L_NN ._.
So_RB if_IN we_PRP augment_VBP x_NN to_TO a_DT max-flow_NN for_IN -LRB-_-LRB- p1_NN ,_, TL_NN -RRB-_-RRB- ,_, then_RB by_IN Lemma_NNP #_# ._.
#_# -LRB-_-LRB- with_IN p_NN =_JJ pL_NN and_CC p_NN =_JJ p1_NN -RRB-_-RRB- ,_, all_PDT the_DT jobs_NNS corresponding_VBG to_TO n2_NN ,_, #_# L_NN must_MD be_VB assigned_VBN in_IN this_DT max-flow_NN ._.
Thus_RB ,_, the_DT size_NN of_IN this_DT max-flow_NN is_VBZ at_IN least_JJS -LRB-_-LRB- size_NN of_IN x_NN -RRB-_-RRB- +_CC n2_NN ,_, #_# L_NN ,_, that_WDT is_VBZ ,_, np1_NN ,_, T_NN L_NN np2_NN ,_, T_NN L_NN n2_NN ,_, #_# H_NN +_CC n2_NN ,_, #_# L_NN ,_, as_IN claimed_VBN ._.
Lemma_NNP #_# ._.
##_NN Suppose_VB T_NN -LRB-_-LRB- p1_NN -RRB-_-RRB- =_JJ TL_NN ._.
Then_RB -LRB-_-LRB- #_# -RRB-_-RRB- holds_VBZ ._.
Proof_NN ._.
Again_RB let_VB T1_NN =_JJ T_NN -LRB-_-LRB- p1_NN -RRB-_-RRB- =_JJ TL_NN and_CC T2_NN =_JJ T_NN -LRB-_-LRB- p2_NN -RRB-_-RRB- ._.
Let_VB x1_NN ,_, x2_NN be_VB the_DT complete_JJ assignment_NN ,_, i_FW ._.
e_LS ._.
,_, the_DT assignment_NN after_IN both_DT steps_NNS #_# and_CC #_# ,_, computed_VBN by_IN our_PRP$ algorithm_NN for_IN p1_NN ,_, p2_NN respectively_RB ._.
Let_VB S_NN =_JJ -LCB-_-LRB- j_NN :_: x2_NN ij_NN =_JJ #_# and_CC p2_NN ij_NN =_JJ L_NN -RCB-_-RRB- and_CC S_NN =_JJ -LCB-_-LRB- j_NN :_: x2_NN ij_NN =_JJ #_# and_CC p1_NN ij_NN =_JJ L_NN -RCB-_-RRB- ._.
Therefore_RB ,_, |_CD S_NN |_NN =_JJ |_CD S_NN |_CD n2_NN ,_, #_# H_NN +_CC n2_NN ,_, #_# L_NN and_CC |_NN S_NN |_NN =_JJ ni_NNS p2_NN ,_, T_NN #_# =_JJ ni_NNS p2_NN ,_, T_NN #_# |_CD T_NN L_NN -LRB-_-LRB- by_IN Corollary_NNP #_# ._.
#_# -RRB-_-RRB- ._.
Let_VB T_NN =_JJ |_CD S_NN |_CD L_NN ._.
We_PRP consider_VBP two_CD cases_NNS ._.
Suppose_VB first_RB that_DT T_NN TL_NN ._.
Consider_VB the_DT following_VBG flow_NN for_IN -LRB-_-LRB- p1_NN ,_, TL_NN -RRB-_-RRB- :_: assign_VB to_TO every_DT machine_NN other_JJ than_IN i_FW the_DT lowassignment_NN of_IN x2_NN truncated_VBN at_IN TL_NN ,_, and_CC assign_VB the_DT jobs_NNS in_IN S_NN to_TO machine_NN i_FW ._.
This_DT is_VBZ a_DT valid_JJ flow_NN for_IN -LRB-_-LRB- p1_NN ,_, TL_NN -RRB-_-RRB- since_IN the_DT load_NN on_IN i_FW is_VBZ T_NN TL_NN ._.
Its_PRP$ size_NN is_VBZ equal_JJ to_TO P_NN i_FW =_JJ i_FW ni_FW p2_NN ,_, T_NN #_# |_CD T_NN L_NN +_CC |_CD S_NN |_NN =_JJ np2_NN ,_, T_NN #_# |_CD T_NN L_NN n2_NN ,_, #_# H_NN +_CC n2_NN ,_, #_# L_NN =_JJ np2_NN ,_, T_NN L_NN n2_NN ,_, #_# H_NN +_CC n2_NN ,_, #_# L_NN ._.
The_DT size_NN of_IN the_DT max-flow_NN for_IN -LRB-_-LRB- p1_NN ,_, TL_NN -RRB-_-RRB- is_VBZ no_DT smaller_JJR ,_, and_CC the_DT claim_NN follows_VBZ ._.
259_CD Now_RB suppose_VBP T_NN >_JJR TL_NN ._.
Since_IN |_CD S_NN |_CD L_NN TL_NN -LRB-_-LRB- by_IN Corollary_NNP #_# ._.
#_# -RRB-_-RRB- ,_, it_PRP follows_VBZ that_IN n2_NN ,_, #_# L_NN >_JJR n2_NN ,_, #_# H_NN #_# ._.
Let_VB T_NN =_JJ T_NN L_NN TL_NN since_IN T_NN ,_, TL_NN are_VBP both_DT multiples_NNS of_IN L_NN ._.
Let_VB M_NN =_JJ np2_NN ,_, T_NN #_# n2_NN ,_, #_# H_NN +_CC n2_NN ,_, #_# L_NN =_JJ |_CD S_NN |_NN +_CC P_NN i_FW =_JJ i_FW ni_FW p2_NN ,_, T_NN #_# ._.
We_PRP first_RB show_VBP that_IN m_NN T_NN <_JJR M_NN L_NN +_CC -LRB-_-LRB- n_NN M_NN -RRB-_-RRB- H_NN ._.
-LRB-_-LRB- #_# -RRB-_-RRB- Let_VB N_NN be_VB the_DT number_NN of_IN jobs_NNS assigned_VBN to_TO machine_NN i_FW in_IN x2_NN ._.
The_DT load_NN on_IN machine_NN i_FW is_VBZ |_CD S_NN |_CD L_NN +_CC -LRB-_-LRB- N_NN |_CD S_NN |_NN -RRB-_-RRB- H_NN |_CD S_NN |_CD Ln2_NN ,_, #_# L_NN L_NN +_CC -LRB-_-LRB- N_NN |_CD S_NN |_NN -RRB-_-RRB- H_NN which_WDT is_VBZ at_IN least_JJS |_CD S_NN |_CD L_NN >_JJR T_NN since_IN n2_NN ,_, #_# L_NN N_NN |_CD S_NN |_NN ._.
Thus_RB we_PRP get_VBP the_DT inequality_NN |_CD S_NN |_CD L_NN +_CC -LRB-_-LRB- N_NN |_CD S_NN |_NN -RRB-_-RRB- H_NN >_JJR T_NN ._.
Now_RB consider_VB the_DT point_NN in_IN the_DT execution_NN of_IN the_DT algorithm_NN on_IN instance_NN p2_NN just_RB before_IN the_DT last_JJ high_JJ job_NN is_VBZ assigned_VBN to_TO i_FW in_IN Step_NN #_# -LRB-_-LRB- there_EX must_MD be_VB such_JJ a_DT job_NN since_IN n2_NN ,_, #_# L_NN >_JJR #_# -RRB-_-RRB- ._.
The_DT load_NN on_IN i_FW at_IN this_DT point_NN is_VBZ |_CD S_NN |_CD L_NN +_CC -LRB-_-LRB- N_NN |_CD S_NN |_CD #_# -RRB-_-RRB- H_NN which_WDT is_VBZ least_JJS |_CD S_NN |_CD L_NN L_NN =_JJ T_NN by_IN a_DT similar_JJ argument_NN as_IN above_JJ ._.
By_IN the_DT greedy_JJ property_NN ,_, every_DT i_FW =_JJ i_FW also_RB has_VBZ at_IN least_JJS this_DT load_NN at_IN this_DT point_NN ,_, so_RB P_NN j_NN p2_NN i_FW jx2_FW i_FW j_FW T_NN ._.
Adding_VBG these_DT inequalities_NNS for_IN all_DT i_FW =_JJ i_FW ,_, and_CC the_DT earlier_JJR inequality_NN for_IN i_FW ,_, we_PRP get_VBP that_IN |_CD S_NN |_CD L_NN +_CC -LRB-_-LRB- N_NN |_CD S_NN |_NN -RRB-_-RRB- H_NN +_CC P_NN i_FW =_JJ i_FW P_NN j_NN p2_NN i_FW jx2_FW i_FW j_FW >_JJR m_NN T_NN ._.
But_CC the_DT left-hand-side_NN is_VBZ exactly_RB M_NN L_NN +_CC -LRB-_-LRB- n_NN M_NN -RRB-_-RRB- H_NN ._.
On_IN the_DT other_JJ hand_NN ,_, since_IN T1_NN =_JJ TL_NN ,_, we_PRP have_VBP m_NN T_NN m_NN TL_NN np1_NN ,_, T_NN L_NN L_NN +_CC -LRB-_-LRB- n_NN np1_NN ,_, T_NN L_NN -RRB-_-RRB- H_NN ._.
-LRB-_-LRB- #_# -RRB-_-RRB- Combining_VBG -LRB-_-LRB- #_# -RRB-_-RRB- and_CC -LRB-_-LRB- #_# -RRB-_-RRB- ,_, we_PRP get_VBP that_IN np1_NN ,_, T_NN L_NN >_JJR M_NN =_JJ np2_NN ,_, T_NN #_# n2_NN ,_, #_# H_NN +_CC n2_NN ,_, #_# L_NN np2_NN ,_, T_NN L_NN n2_NN ,_, #_# H_NN +_CC n2_NN ,_, #_# L_NN ._.
Lemma_NNP #_# ._.
##_NNP Algorithm_NNP #_# satisfies_VBZ cycle_NN monotonicity_NN ._.
Proof_NN ._.
Taking_VBG p1_NN =_JJ pk_NN and_CC p2_NN =_JJ pk_NN +_CC #_# in_IN -LRB-_-LRB- #_# -RRB-_-RRB- ,_, we_PRP get_VBP that_IN npk_NN ,_, T_NN L_NN npk_NN +_CC #_# ,_, T_NN L_NN nk_NN +_CC #_# ,_, k_NN H_NN +_CC nk_NN +_CC #_# ,_, k_NN L_NN ._.
Summing_VBG this_DT over_IN all_DT k_NN =_JJ #_# ,_, ..._: ,_, K_NN -LRB-_-LRB- where_WRB K_NN +_CC #_# #_# -RRB-_-RRB- yields_NNS -LRB-_-LRB- #_# -RRB-_-RRB- ._.
5_CD ._.
#_# Computation_NNP of_IN prices_NNS Lemmas_NNP #_# ._.
#_# and_CC #_# ._.
##_NN show_VBP that_IN our_PRP$ algorithm_NN is_VBZ a_DT 2approximation_JJ algorithm_NN that_WDT satisfies_VBZ cycle_NN monotonicity_NN ._.
Thus_RB ,_, by_IN the_DT discussion_NN in_IN Section_NN #_# ,_, there_EX exist_VBP prices_NNS that_WDT yield_VBP a_DT truthful_JJ mechanism_NN ._.
To_TO obtain_VB a_DT polynomial-time_JJ mechanism_NN ,_, we_PRP also_RB need_VBP to_TO show_VB how_WRB to_TO compute_VB these_DT prices_NNS -LRB-_-LRB- or_CC payments_NNS -RRB-_-RRB- in_IN polynomial-time_NN ._.
It_PRP is_VBZ not_RB clear_JJ ,_, if_IN the_DT procedure_NN outlined_VBN in_IN Section_NN #_# based_VBN on_IN computing_NN shortest_JJS paths_NNS in_IN the_DT allocation_NN graph_NN yields_VBZ a_DT polynomial_JJ time_NN algorithm_NN ,_, since_IN the_DT allocation_NN graph_NN has_VBZ an_DT exponential_JJ number_NN of_IN nodes_NNS -LRB-_-LRB- one_CD for_IN each_DT output_NN assignment_NN -RRB-_-RRB- ._.
Instead_RB of_IN analyzing_VBG the_DT allocation_NN graph_NN ,_, we_PRP will_MD leverage_NN our_PRP$ proof_NN of_IN cycle_NN monotonicity_NN ,_, in_IN particular_JJ ,_, inequality_NN -LRB-_-LRB- #_# -RRB-_-RRB- ,_, and_CC simply_RB spell_VB out_RP the_DT payments_NNS ._.
Recall_VB that_IN the_DT utility_NN of_IN a_DT player_NN is_VBZ ui_NN =_JJ Pi_NN li_NN ,_, where_WRB Pi_NN is_VBZ the_DT payment_NN made_VBN to_TO player_NN i_FW ._.
For_IN convenience_NN ,_, we_PRP will_MD first_RB specify_VB negative_JJ payments_NNS -LRB-_-LRB- i_FW ._.
e_LS ._.
,_, the_DT Pis_NNP will_MD actually_RB be_VB prices_NNS charged_VBN to_TO the_DT players_NNS -RRB-_-RRB- and_CC then_RB show_VBP that_IN these_DT can_MD be_VB modified_VBN so_RB that_IN players_NNS have_VBP non-negative_JJ utilities_NNS -LRB-_-LRB- if_IN they_PRP act_VBP truthfully_RB -RRB-_-RRB- ._.
Let_VB Hi_NNP denote_VB the_DT number_NN of_IN jobs_NNS assigned_VBN to_TO machine_NN i_FW in_IN step_NN #_# ._.
By_IN Corollary_JJ #_# ._.
#_# ,_, we_PRP know_VBP that_IN all_PDT these_DT jobs_NNS are_VBP assigned_VBN to_TO high_JJ machines_NNS -LRB-_-LRB- according_VBG to_TO the_DT declared_VBN pis_NN -RRB-_-RRB- ._.
Let_VB Hi_NN =_JJ P_NN i_FW =_JJ i_FW Hi_FW and_CC ni_FW p_NN ,_, T_NN =_JJ P_NN i_FW =_JJ i_FW ni_FW p_NN ,_, T_NN ._.
The_DT payment_NN Pi_NN to_TO player_NN i_FW is_VBZ defined_VBN as_IN :_: Pi_NN -LRB-_-LRB- p_NN -RRB-_-RRB- =_JJ L_NN ni_NNS p_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- H_NN Hi_NN -LRB-_-LRB- p_NN -RRB-_-RRB- -LRB-_-LRB- H_NN L_NN -RRB-_-RRB- `_`` np_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- np_NN ,_, T_NN L_NN i_FW -LRB-_-LRB- pi_NN -RRB-_-RRB- -LRB-_-LRB- ##_CD -RRB-_-RRB- We_PRP can_MD interpret_VB our_PRP$ payments_NNS as_IN equating_VBG the_DT player_NN ''_'' s_VBZ cost_NN to_TO a_DT careful_JJ modification_NN of_IN the_DT total_JJ load_NN -LRB-_-LRB- in_IN the_DT spirit_NN of_IN VCG_NNP prices_NNS -RRB-_-RRB- ._.
The_DT first_JJ and_CC second_JJ terms_NNS in_IN -LRB-_-LRB- ##_NN -RRB-_-RRB- ,_, when_WRB subtracted_VBN from_IN i_FW ''_'' s_VBZ load_NN li_NN equate_VBP i_FW ''_'' s_VBZ cost_NN to_TO the_DT total_JJ load_NN ._.
The_DT term_NN np_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- np_NN ,_, T_NN L_NN i_FW -LRB-_-LRB- pi_NN -RRB-_-RRB- is_VBZ in_IN fact_NN equal_JJ to_TO ni_VB p_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- ni_NNS p_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- |_CD T_NN L_NN i_FW -LRB-_-LRB- pi_NN -RRB-_-RRB- since_IN the_DT low-load_JJ on_IN i_FW is_VBZ at_IN most_JJS TL_NN i_FW -LRB-_-LRB- pi_NN -RRB-_-RRB- -LRB-_-LRB- by_IN Claim_NNP #_# ._.
#_# -RRB-_-RRB- ._.
Thus_RB the_DT last_JJ term_NN in_IN equation_NN -LRB-_-LRB- ##_NN -RRB-_-RRB- implies_VBZ that_IN we_PRP treat_VBP the_DT low_JJ jobs_NNS that_WDT were_VBD assigned_VBN beyond_IN the_DT TL_NN i_FW -LRB-_-LRB- pi_NN -RRB-_-RRB- threshold_NN -LRB-_-LRB- to_TO machines_NNS other_JJ than_IN i_LS -RRB-_-RRB- effectively_RB as_RB high_JJ jobs_NNS for_IN the_DT total_JJ utility_NN calculation_NN from_IN i_FW ''_'' s_VBZ point_NN of_IN view_NN ._.
It_PRP is_VBZ not_RB clear_JJ how_WRB one_CD could_MD have_VB conjured_VBN up_RP these_DT payments_NNS a_DT priori_FW in_IN order_NN to_TO prove_VB the_DT truthfulness_NN of_IN our_PRP$ algorithm_NN ._.
However_RB ,_, by_IN relying_VBG on_IN cycle_NN monotonicity_NN ,_, we_PRP were_VBD not_RB only_RB able_JJ to_TO argue_VB the_DT existence_NN of_IN payments_NNS ,_, but_CC also_RB our_PRP$ proof_NN paved_VBD the_DT way_NN for_IN actually_RB inferring_VBG these_DT payments_NNS ._.
The_DT following_VBG lemma_NN explicitly_RB verifies_VBZ that_IN the_DT payments_NNS defined_VBN above_IN do_VBP indeed_RB give_VB a_DT truthful_JJ mechanism_NN ._.
Lemma_NNP #_# ._.
##_NNS Fix_VBP a_DT player_NN i_FW and_CC the_DT other_JJ players_NNS ''_'' declarations_NNS pi_NN ._.
Let_VB i_FW ''_'' s_VBZ true_JJ type_NN be_VB p1_NN i_FW ._.
Then_RB ,_, under_IN the_DT payments_NNS defined_VBN in_IN -LRB-_-LRB- ##_NN -RRB-_-RRB- ,_, i_FW ''_'' s_VBZ utility_NN when_WRB she_PRP declares_VBZ her_PRP$ true_JJ type_NN p1_NN i_FW is_VBZ at_IN least_JJS her_PRP$ utility_NN when_WRB she_PRP declares_VBZ any_DT other_JJ type_NN p2_NN i_FW ._.
Proof_NN ._.
Let_VB c1_NN i_FW ,_, c2_NN i_FW denote_FW i_FW ''_'' s_VBZ total_JJ cost_NN ,_, defined_VBN as_IN the_DT negative_JJ of_IN her_PRP$ utility_NN ,_, when_WRB she_PRP declares_VBZ p1_NN ,_, and_CC p2_NN ,_, respectively_RB -LRB-_-LRB- and_CC the_DT others_NNS declare_VBP pi_NN -RRB-_-RRB- ._.
Since_IN pi_NN is_VBZ fixed_VBN ,_, we_PRP omit_VBP pi_NN from_IN the_DT expressions_NNS below_IN for_IN notational_JJ clarity_NN ._.
The_DT true_JJ load_NN of_IN i_FW when_WRB she_PRP declares_VBZ her_PRP$ true_JJ type_NN p1_NN i_FW is_VBZ L_NN ni_NNS p1_NN ,_, T_NN -LRB-_-LRB- p1_NN -RRB-_-RRB- +_CC H_NN Hi_NN -LRB-_-LRB- p1_NN -RRB-_-RRB- ,_, and_CC therefore_RB c1_NN i_FW =_JJ L_NN np1_NN ,_, T_NN -LRB-_-LRB- p1_NN -RRB-_-RRB- +_CC H_NN -LRB-_-LRB- n_NN np1_NN ,_, T_NN -LRB-_-LRB- p1_NN -RRB-_-RRB- -RRB-_-RRB- +_CC -LRB-_-LRB- H_NN L_NN -RRB-_-RRB- `_`` np1_NN ,_, T_NN -LRB-_-LRB- p1_NN -RRB-_-RRB- np1_NN ,_, T_NN L_NN i_FW =_JJ n_NN H_NN -LRB-_-LRB- H_NN L_NN -RRB-_-RRB- np1_NN ,_, T_NN L_NN i_FW -LRB-_-LRB- ##_CD -RRB-_-RRB- On_IN the_DT other_JJ hand_NN ,_, i_FW ''_'' s_VBZ true_JJ load_NN when_WRB she_PRP declares_VBZ p2_NN i_FW is_VBZ L_NN -LRB-_-LRB- ni_NNS p2_NN ,_, T_NN -LRB-_-LRB- p2_NN -RRB-_-RRB- n2_NN ,_, #_# H_NN +_CC n2_NN ,_, #_# L_NN -RRB-_-RRB- +_CC H_NN -LRB-_-LRB- Hi_NN +_CC n2_NN ,_, #_# H_NN n2_NN ,_, #_# L_NN -RRB-_-RRB- -LRB-_-LRB- since_IN i_FW ''_'' s_VBZ true_JJ processing_NN time_NN vector_NN is_VBZ p1_NN i_LS -RRB-_-RRB- ,_, and_CC thus_RB c2_NN i_FW =_JJ n_NN H_NN -LRB-_-LRB- H_NN L_NN -RRB-_-RRB- np2_NN ,_, T_NN L_NN i_FW +_CC -LRB-_-LRB- H_NN L_NN -RRB-_-RRB- n2_NN ,_, #_# H_NN -LRB-_-LRB- H_NN L_NN -RRB-_-RRB- n2_NN ,_, #_# L_NN ._.
Thus_RB ,_, -LRB-_-LRB- #_# -RRB-_-RRB- implies_VBZ that_IN c1_NN i_FW c2_FW i_FW ._.
Price_NN specifications_NNS are_VBP commonly_RB required_VBN to_TO satisfy_VB ,_, in_IN addition_NN to_TO truthfulness_NN ,_, individual_JJ rationality_NN ,_, i_FW ._.
e_LS ._.
,_, a_DT player_NN ''_'' s_NNS utility_NN should_MD be_VB non-negative_JJ if_IN she_PRP reveals_VBZ her_PRP$ true_JJ value_NN ._.
The_DT payments_NNS given_VBN by_IN -LRB-_-LRB- ##_NN -RRB-_-RRB- are_VBP not_RB individually_RB rational_JJ as_IN they_PRP actually_RB charge_VBP a_DT player_NN a_DT certain_JJ amount_NN ._.
However_RB ,_, it_PRP is_VBZ well-known_JJ that_IN this_DT problem_NN can_MD be_VB easily_RB solved_VBN by_IN adding_VBG a_DT large-enough_JJ constant_JJ to_TO the_DT price_NN definition_NN ._.
In_IN our_PRP$ case_NN ,_, for_IN example_NN ,_, letting_VBG H_NN denote_VBP the_DT vector_NN of_IN all_DT H_NN ''_'' s_NNS ,_, we_PRP can_MD add_VB the_DT term_NN nH_NN -LRB-_-LRB- H_NN L_NN -RRB-_-RRB- n_NN -LRB-_-LRB- H_NN ,_, pi_NN -RRB-_-RRB- ,_, T_NN L_NN i_FW -LRB-_-LRB- pi_NN -RRB-_-RRB- to_TO -LRB-_-LRB- ##_CD -RRB-_-RRB- ._.
Note_VB that_IN this_DT is_VBZ a_DT constant_JJ for_IN player_NN i_FW ._.
Thus_RB ,_, the_DT new_JJ payments_NNS are_VBP Pi_NN -LRB-_-LRB- p_NN -RRB-_-RRB- =_JJ n_NN H_NN L_NN ni_NNS p_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- H_NN Hi_NN -LRB-_-LRB- p_NN -RRB-_-RRB- -LRB-_-LRB- H_NN L_NN -RRB-_-RRB- `_`` np_NN ,_, T_NN -LRB-_-LRB- p_NN -RRB-_-RRB- np_NN ,_, T_NN L_NN i_FW -LRB-_-LRB- pi_NN -RRB-_-RRB- +_CC n_NN -LRB-_-LRB- H_NN ,_, pi_NN -RRB-_-RRB- ,_, T_NN L_NN i_FW -LRB-_-LRB- pi_NN -RRB-_-RRB- ._.
As_IN shown_VBN by_IN -LRB-_-LRB- ##_NN -RRB-_-RRB- ,_, this_DT will_MD indeed_RB result_VB in_IN a_DT non-negative_JJ utility_NN for_IN i_FW -LRB-_-LRB- since_IN n_NN -LRB-_-LRB- H_NN ,_, pi_NN -RRB-_-RRB- ,_, T_NN L_NN i_FW -LRB-_-LRB- pi_NN -RRB-_-RRB- n_NN -LRB-_-LRB- pi_NN ,_, pi_NN -RRB-_-RRB- ,_, T_NN L_NN i_FW -LRB-_-LRB- pi_NN -RRB-_-RRB- for_IN any_DT type_NN pi_NN of_IN player_NN i_LS -RRB-_-RRB- ._.
This_DT modification_NN also_RB ensures_VBZ the_DT additionally_RB desired_VBN normalization_NN property_NN that_IN if_IN a_DT player_NN receives_VBZ no_DT jobs_NNS then_RB she_PRP receives_VBZ zero_CD payment_NN :_: if_IN player_NN i_FW receives_VBZ the_DT empty_JJ set_NN for_IN some_DT type_NN pi_NN then_RB she_PRP will_MD also_RB receive_VB the_DT empty_JJ set_NN for_IN the_DT type_NN H_NN -LRB-_-LRB- this_DT is_VBZ easy_JJ to_TO verify_VB for_IN our_PRP$ specific_JJ algorithm_NN -RRB-_-RRB- ,_, and_CC for_IN the_DT type_NN H_NN ,_, her_PRP$ utility_NN equals_VBZ zero_CD ;_: thus_RB ,_, by_IN truthfulness_NN this_DT must_MD also_RB be_VB the_DT utility_NN of_IN every_DT other_JJ declaration_NN that_WDT results_VBZ in_IN i_FW receiving_VBG the_DT empty_JJ set_NN ._.
This_DT completes_VBZ the_DT proof_NN of_IN Theorem_NNP #_# ._.
#_# ._.
260_CD 5_CD ._.
#_# Impossibility_NN of_IN exact_JJ implementation_NN We_PRP now_RB show_VBP that_IN irrespective_JJ of_IN computational_JJ considerations_NNS ,_, there_EX does_VBZ not_RB exist_VB a_DT cycle-monotone_JJ algorithm_NN for_IN the_DT L-H_NN case_NN with_IN an_DT approximation_NN ratio_NN better_JJR than_IN #_# ._.
##_NN ._.
Let_VB H_NN =_JJ L_NN for_IN some_DT #_# <_JJR <_JJR #_# ._.
#_# that_IN we_PRP will_MD choose_VB later_RB ._.
There_EX are_VBP two_CD machines_NNS I_PRP ,_, II_CD and_CC seven_CD jobs_NNS ._.
Consider_VB the_DT following_VBG two_CD scenarios_NNS :_: Scenario_NN #_# ._.
Every_DT job_NN has_VBZ the_DT same_JJ processing_NN time_NN on_IN both_DT machines_NNS :_: jobs_NNS 1-5_CD ,_, are_VBP L_NN ,_, and_CC jobs_NNS #_# ,_, #_# are_VBP H_NN ._.
Any_DT optimal_JJ schedule_NN assigns_VBZ jobs_NNS 1-5_CD to_TO one_CD machine_NN and_CC jobs_NNS #_# ,_, 7_CD to_TO the_DT other_JJ ,_, and_CC has_VBZ makespan_JJ OPT1_NN =_JJ 5L_NN ._.
The_DT secondbest_NN schedule_NN has_VBZ makespan_NN at_IN least_JJS Second1_NN =_JJ 2H_NN +_CC L_NN ._.
Scenario_NN #_# ._.
If_IN the_DT algorithm_NN chooses_VBZ an_DT optimal_JJ schedule_NN for_IN scenario_NN #_# ,_, assume_VB without_IN loss_NN of_IN generality_NN that_WDT jobs_NNS #_# ,_, 7_CD are_VBP assigned_VBN to_TO machine_NN II_CD ._.
In_IN scenario_NN #_# ,_, machine_NN I_PRP has_VBZ the_DT same_JJ processing-time_NN vector_NN ._.
Machine_NN II_CD lowers_VBZ jobs_NNS #_# ,_, 7_CD to_TO L_NN and_CC increases_VBZ 1-5_CD to_TO H_NN ._.
An_DT optimal_JJ schedule_NN has_VBZ makespan_JJ 2L_NN +_CC H_NN ,_, where_WRB machine_NN II_CD gets_VBZ jobs_NNS #_# ,_, #_# and_CC one_CD of_IN the_DT jobs_NNS 1-5_CD ._.
The_DT second-best_JJ schedule_NN for_IN this_DT scenario_NN has_VBZ makespan_NN at_IN least_JJS Second2_NN =_JJ 5L_NN ._.
Theorem_NNP #_# ._.
##_RB No_DT deterministic_JJ truthful_JJ mechanism_NN for_IN the_DT two-value_JJ scheduling_NN problem_NN can_MD obtain_VB an_DT approximation_NN ratio_NN better_JJR than_IN #_# ._.
##_NN ._.
Proof_NN ._.
We_PRP first_RB argue_VBP that_IN a_DT cycle-monotone_JJ algorithm_NN can_MD not_RB choose_VB the_DT optimal_JJ schedule_NN in_IN both_CC scenarios_NNS ._.
This_DT follows_VBZ because_IN otherwise_RB cycle_NN monotonicity_NN is_VBZ violated_VBN for_IN machine_NN II_CD ._.
Taking_VBG p1_NN II_CD ,_, p2_NN II_CD to_TO be_VB machine_NN II_CD ''_'' s_VBZ processingtime_NN vectors_NNS for_IN scenarios_NNS #_# ,_, #_# respectively_RB ,_, we_PRP get_VBP P_NN j_NN -LRB-_-LRB- p1_NN II_CD ,_, j_NN p2_NN II_CD ,_, j_NN -RRB-_-RRB- -LRB-_-LRB- x2_NN II_CD ,_, j_NN x1_NN II_CD ,_, j_NN -RRB-_-RRB- =_JJ -LRB-_-LRB- LH_NN -RRB-_-RRB- -LRB-_-LRB- ##_CD -RRB-_-RRB- <_JJR #_# ._.
Thus_RB ,_, any_DT truthful_JJ mechanism_NN must_MD return_VB a_DT sub-optimal_JJ makespan_NN in_IN at_IN least_JJS one_CD scenario_NN ,_, and_CC therefore_RB its_PRP$ approximation_NN ratio_NN is_VBZ at_IN least_JJS min_NN Second1_NN OPT1_NN ,_, Second2_NN OPT2_NN #_# ._.
##_NN for_IN =_JJ #_# ._.
###_NN ._.
We_PRP remark_VBP that_IN for_IN the_DT -LCB-_-LRB- Lj_NNP ,_, Hj_NNP -RCB-_-RRB- -_: case_NN where_WRB there_EX is_VBZ a_DT common_JJ ratio_NN r_NN =_JJ Hj_NN Lj_NN for_IN all_DT jobs_NNS -LRB-_-LRB- this_DT generalizes_VBZ the_DT restricted-machines_JJ setting_NN -RRB-_-RRB- one_PRP can_MD obtain_VB a_DT fractional_JJ truthful_JJ mechanism_NN -LRB-_-LRB- with_IN efficiently_RB computable_JJ prices_NNS -RRB-_-RRB- that_WDT returns_VBZ a_DT schedule_NN of_IN makespan_NN at_IN most_JJS OPT_NNS -LRB-_-LRB- p_NN -RRB-_-RRB- for_IN every_DT p_NN ._.
One_PRP can_MD view_VB each_DT job_NN j_NN as_IN consisting_VBG of_IN Lj_NNP sub-jobs_NNS of_IN size_NN #_# on_IN a_DT machine_NN i_FW if_IN pij_NN =_JJ Lj_NN ,_, and_CC size_NN r_NN if_IN pij_NN =_JJ Hj_NN ._.
For_IN this_DT new_JJ instance_NN p_NN ,_, note_VBP that_IN pij_NN -LCB-_-LRB- #_# ,_, r_NN -RCB-_-RRB- for_IN every_DT i_FW ,_, j_NN ._.
Notice_NNP also_RB that_IN any_DT assignment_NN x_NN for_IN the_DT instance_NN p_NN translates_VBZ to_TO a_DT fractional_JJ assignment_NN x_NN for_IN p_NN ,_, where_WRB pijxij_NN =_JJ P_NN j_NN :_: sub-job_NN of_IN j_NN pij_NN xij_NN ._.
Thus_RB ,_, if_IN we_PRP use_VBP Algorithm_NNP #_# to_TO obtain_VB a_DT schedule_NN for_IN the_DT instance_NN p_NN ,_, equation_NN -LRB-_-LRB- #_# -RRB-_-RRB- translates_VBZ precisely_RB to_TO -LRB-_-LRB- #_# -RRB-_-RRB- for_IN the_DT assignment_NN x_NN ;_: moreover_RB ,_, the_DT prices_NNS for_IN p_NN translate_VB to_TO prices_NNS for_IN the_DT instance_NN p_NN ._.
The_DT number_NN of_IN sub-jobs_JJ assigned_VBN to_TO low-machines_NNS in_IN the_DT flow-phase_NN is_VBZ simply_RB the_DT total_JJ work_NN assigned_VBN to_TO low-machines_NNS ._.
Thus_RB ,_, we_PRP can_MD implement_VB the_DT above_JJ reduction_NN by_IN setting_VBG up_RP a_DT max-flow_NN problem_NN that_WDT seems_VBZ to_TO maximize_VB the_DT total_JJ work_NN assigned_VBN to_TO low_JJ machines_NNS ._.
Moreover_RB ,_, since_IN we_PRP have_VBP a_DT fractional_JJ domain_NN ,_, we_PRP can_MD use_VB a_DT more_RBR efficient_JJ greedy_JJ rule_NN for_IN packing_VBG the_DT unassigned_JJ portions_NNS of_IN jobs_NNS and_CC argue_VBP that_IN the_DT fractional_JJ assignment_NN has_VBZ makespan_NN at_IN most_JJS OPT_NNS -LRB-_-LRB- p_NN -RRB-_-RRB- ._.
The_DT assignment_NN x_NN need_MD not_RB however_RB satisfy_VB the_DT condition_NN that_WDT xij_VBP >_JJR #_# implies_VBZ pij_NN OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- for_IN arbitrary_JJ r_NN ,_, therefore_RB ,_, the_DT rounding_VBG procedure_NN of_IN Lemma_NNP #_# ._.
#_# does_VBZ not_RB yield_VB a_DT 2-approximation_JJ truthful-in-expectation_NN mechanism_NN ._.
But_CC if_IN r_NN >_JJR OPT_NN -LRB-_-LRB- p_NN -RRB-_-RRB- -LRB-_-LRB- as_IN in_IN the_DT restricted-machines_NNS setting_VBG -RRB-_-RRB- ,_, this_DT condition_NN does_VBZ hold_VB ,_, so_IN we_PRP get_VBP a_DT 2-approximation_NN truthful_JJ mechanism_NN ._.
Acknowledgments_NNS We_PRP thank_VBP Elias_NNP Koutsoupias_NNP for_IN his_PRP$ help_NN in_IN refining_VBG the_DT analysis_NN of_IN the_DT lower_JJR bound_VBN in_IN Section_NN #_# ._.
#_# ,_, and_CC the_DT reviewers_NNS for_IN their_PRP$ helpful_JJ comments_NNS ._.
6_CD ._.
REFERENCES_NNS -LSB-_-LRB- #_# -RSB-_-RRB- N_NN ._.
Andelman_NNP ,_, Y_NN ._.
Azar_NNP ,_, and_CC M_NN ._.
Sorani_NNP ._.
Truthful_JJ approximation_NN mechanisms_NNS for_IN scheduling_NN selfish_JJ related_JJ machines_NNS ._.
In_IN Proc_NNP ._.
22nd_JJ STACS_NN ,_, 69-82_CD ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- A_DT ._.
Archer_NNP ._.
Mechanisms_NNS for_IN discrete_JJ optimization_NN with_IN rational_JJ agents_NNS ._.
PhD_NN thesis_NN ,_, Cornell_NNP University_NNP ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- A_DT ._.
Archer_NNP and_CC E_NNP ._.
Tardos_NNP ._.
Truthful_JJ mechanisms_NNS for_IN one-parameter_JJ agents_NNS ._.
In_IN Proc_NNP ._.
42nd_NNP FOCS_NNP ,_, pages_NNS 482-491_CD ,_, 2001_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- V_NN ._.
Auletta_NNP ,_, R_NN ._.
De-Prisco_NNP ,_, P_NN ._.
Penna_NNP ,_, and_CC G_NN ._.
Persiano_NNP ._.
Deterministic_JJ truthful_JJ approximation_NN mechanisms_NNS for_IN scheduling_NN related_JJ machines_NNS ._.
In_IN Proc_NNP ._.
21st_JJ STACS_NN ,_, pages_NNS 608-619_CD ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- I_PRP ._.
Bezakova_NN and_CC V_NN ._.
Dani_NNP ._.
Allocating_VBG indivisible_JJ goods_NNS ._.
In_IN ACM_NNP SIGecom_NNP Exchanges_NNPS ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- S_NN ._.
Bikhchandani_NNP ,_, S_NN ._.
Chatterjee_NNP ,_, R_NN ._.
Lavi_NNP ,_, A_NNP ._.
Mu_NN ''_'' alem_NN ,_, N_NN ._.
Nisan_NNP ,_, and_CC A_NN ._.
Sen_NNP ._.
Weak_JJ monotonicity_NN characterizes_VBZ deterministic_JJ dominant-strategy_JJ implementation_NN ._.
Econometrica_NNP ,_, ##_CD :_: 1109-1132_CD ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- P_NN ._.
Briest_NNP ,_, P_NN ._.
Krysta_NNP ,_, and_CC B_NN ._.
Vocking_NN ._.
Approximation_NN techniques_NNS for_IN utilitarian_JJ mechanism_NN design_NN ._.
In_IN Proc_NNP ._.
37th_JJ STOC_NN ,_, pages_NNS 39-48_CD ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- G_NN ._.
Christodoulou_NNP ,_, E_NNP ._.
Koutsoupias_NNP ,_, and_CC A_NN ._.
Vidali_NNP ._.
A_DT lower_JJR bound_VBN for_IN scheduling_NN mechanisms_NNS ._.
In_IN Proc_NNP ._.
18th_JJ SODA_NNP ,_, pages_NNS 1163-1170_CD ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- E_NN ._.
Clarke_NNP ._.
Multipart_JJ pricing_NN of_IN public_JJ goods_NNS ._.
Public_NNP Choice_NNP ,_, 8_CD :_: 17-33_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- T_NN ._.
Groves_NNS ._.
Incentives_NNS in_IN teams_NNS ._.
Econometrica_NNP ,_, ##_CD :_: 617-631_CD ,_, 1973_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- H_NN ._.
Gui_NNP ,_, R_NN ._.
Muller_NNP ,_, and_CC R_NN ._.
V_NN ._.
Vohra_NNP ._.
Characterizing_VBG dominant_JJ strategy_NN mechanisms_NNS with_IN multi-dimensional_JJ types_NNS ,_, ####_CD ._.
Working_VBG paper_NN ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- L_NN ._.
A_DT ._.
Hall_NNP ._.
Approximation_NN algorithms_NNS for_IN scheduling_NN ._.
In_IN D_NN ._.
Hochbaum_NNP ,_, editor_NN ,_, Approximation_NN Algorithms_NNS for_IN NP-Hard_JJ Problems_NNS ._.
PWS_NNP Publishing_NNP ,_, MA_NNP ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- A_DT ._.
Kovacs_NNP ._.
Fast_JJ monotone_NN 3-approximation_NN algorithm_NN for_IN scheduling_NN related_JJ machines_NNS ._.
In_IN Proc_NNP ._.
13th_JJ ESA_NNP ,_, pages_NNS 616-627_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- V_NN ._.
S_NN ._.
A_DT ._.
Kumar_NNP ,_, M_NN ._.
V_NN ._.
Marathe_NNP ,_, S_NN ._.
Parthasarathy_NNP ,_, and_CC A_NN ._.
Srinivasan_NNP ._.
Approximation_NN algorithms_NNS for_IN scheduling_NN on_IN multiple_JJ machines_NNS ._.
In_IN Proc_NNP ._.
46th_JJ FOCS_NN ,_, pages_NNS 254-263_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- R_NN ._.
Lavi_NNP ,_, A_NNP ._.
Mu_NN ''_'' alem_NN ,_, and_CC N_NN ._.
Nisan_NNP ._.
Towards_IN a_DT characterization_NN of_IN truthful_JJ combinatorial_JJ auctions_NNS ._.
In_IN Proc_NNP ._.
44th_JJ FOCS_NN ,_, pages_NNS 574-583_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- R_NN ._.
Lavi_NNP and_CC C_NNP ._.
Swamy_NNP ._.
Truthful_JJ and_CC near-optimal_JJ mechanism_NN design_NN via_IN linear_JJ programming_NN ._.
In_IN Proc_NNP ._.
46th_JJ FOCS_NN ,_, pages_NNS 595-604_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- D_NN ._.
Lehmann_NNP ,_, L_NNP ._.
O_NN ''_'' Callaghan_NNP ,_, and_CC Y_NN ._.
Shoham_NNP ._.
Truth_NN revelation_NN in_IN approximately_RB efficient_JJ combinatorial_JJ auctions_NNS ._.
Journal_NNP of_IN the_DT ACM_NNP ,_, ##_CD :_: 577-602_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- J_NN ._.
K_NN ._.
Lenstra_NNP ,_, D_NNP ._.
B_NN ._.
Shmoys_NNP ,_, and_CC E_NN ._.
Tardos_NNP ._.
Approximation_NN algorithms_NNS for_IN scheduling_NN unrelated_JJ parallel_NN machines_NNS ._.
Math_NNP ._.
Prog_NN ._.
,_, ##_CD :_: 259-271_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- R_NN ._.
J_NN ._.
Lipton_NNP ,_, E_NNP ._.
Markakis_NNP ,_, E_NNP ._.
Mossel_NNP ,_, and_CC A_NN ._.
Saberi_NNP ._.
On_IN approximately_RB fair_JJ allocations_NNS of_IN indivisible_JJ goods_NNS ._.
In_IN Proc_NNP ._.
5th_JJ EC_NN ,_, pages_NNS 125-131_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- A_DT ._.
Mu_NN ''_'' alem_NN and_CC M_NN ._.
Schapira_NNP ._.
Setting_VBG lower_JJR bounds_NNS on_IN truthfulness_NN ._.
In_IN Proc_NNP ._.
18th_JJ SODA_NNP ,_, 1143-1152_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- R_NN ._.
Myerson_NNP ._.
Optimal_JJ auction_NN design_NN ._.
Mathematics_NN of_IN Operations_NNP Research_NNP ,_, #_# :_: 58-73_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- N_NN ._.
Nisan_NNP and_CC A_NNP ._.
Ronen_NNP ._.
Algorithmic_JJ mechanism_NN design_NN ._.
Games_NNPS and_CC Econ_NNP ._.
Behavior_NN ,_, ##_CD :_: 166-196_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- J_NN ._.
C_NN ._.
Rochet_NNP ._.
A_DT necessary_JJ and_CC sufficient_JJ condition_NN for_IN rationalizability_NN in_IN a_DT quasilinear_JJ context_NN ._.
Journal_NNP of_IN Mathematical_NNP Economics_NNP ,_, ##_CD :_: 191-200_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- M_NN ._.
Saks_NNP and_CC L_NNP ._.
Yu_NNP ._.
Weak_JJ monotonicity_NN suffices_VBZ for_IN truthfulness_NN on_IN convex_NN domains_NNS ._.
In_IN Proc_NNP ._.
6th_JJ EC_NN ,_, pages_NNS 286-293_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- D_NN ._.
B_NN ._.
Shmoys_NNPS and_CC E_NN ._.
Tardos_NNP ._.
An_DT approximation_NN algorithm_NN for_IN the_DT generalized_VBN assignment_NN problem_NN ._.
Mathematical_JJ Programming_NN ,_, ##_CD :_: 461-474_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- W_NN ._.
Vickrey_NNP ._.
Counterspeculations_NNS ,_, auctions_NNS ,_, and_CC competitive_JJ sealed_JJ tenders_NNS ._.
J_NN ._.
Finance_NNP ,_, ##_CD :_: 8-37_CD ,_, ####_CD ._.
261_CD
