Approximately-Strategyproof_JJ and_CC Tractable_JJ Multi-Unit_JJ Auctions_NNS Anshul_NNP Kothari_NNP David_NNP C_NNP ._.
Parkes_NNP Subhash_NNP Suri_NNP ABSTRACT_NN We_PRP present_VBP an_DT approximately-efficient_JJ and_CC approximatelystrategyproof_JJ auction_NN mechanism_NN for_IN a_DT single-good_JJ multi-unit_JJ allocation_NN problem_NN ._.
The_DT bidding_NN language_NN in_IN our_PRP$ auctions_NNS allows_VBZ marginal-decreasing_JJ piecewise_NN constant_JJ curves_NNS ._.
First_RB ,_, we_PRP develop_VBP a_DT fully_RB polynomial-time_JJ approximation_NN scheme_NN for_IN the_DT multi-unit_JJ allocation_NN problem_NN ,_, which_WDT computes_VBZ a_DT -LRB-_-LRB- #_# +_CC -RRB-_-RRB- approximation_NN in_IN worst-case_JJ time_NN T_NN =_JJ O_NN -LRB-_-LRB- n3_NN /_: -RRB-_-RRB- ,_, given_VBN n_NN bids_NNS each_DT with_IN a_DT constant_JJ number_NN of_IN pieces_NNS ._.
Second_RB ,_, we_PRP embed_VBD this_DT approximation_NN scheme_NN within_IN a_DT Vickrey-Clarke-Groves_NNP -LRB-_-LRB- VCG_NNP -RRB-_-RRB- mechanism_NN and_CC compute_VB payments_NNS to_TO n_NN agents_NNS for_IN an_DT asymptotic_JJ cost_NN of_IN O_NN -LRB-_-LRB- T_NN log_NN n_NN -RRB-_-RRB- ._.
The_DT maximal_JJ possible_JJ gain_NN from_IN manipulation_NN to_TO a_DT bidder_NN in_IN the_DT combined_JJ scheme_NN is_VBZ bounded_VBN by_IN /_: -LRB-_-LRB- #_# +_CC -RRB-_-RRB- V_NN ,_, where_WRB V_NN is_VBZ the_DT total_JJ surplus_NN in_IN the_DT efficient_JJ outcome_NN ._.
Categories_NNS and_CC Subject_NNP Descriptors_NNPS F_NN ._.
#_# -LSB-_-LRB- Theory_NNP of_IN Computation_NNP -RSB-_-RRB- :_: Analysis_NN of_IN Algorithms_NNS and_CC Problem_NNP Complexity_NNP ;_: J_NN ._.
#_# -LSB-_-LRB- Computer_NNP Applications_NNS -RSB-_-RRB- :_: Social_NNP and_CC Behavioral_NNP Sciences-Economics_NNP ._.
General_NNP Terms_NNS Algorithms_NNS ,_, Economics_NNP ._.
1_LS ._.
INTRODUCTION_NN In_IN this_DT paper_NN we_PRP present_VBP a_DT fully_RB polynomial-time_JJ approximation_NN scheme_NN for_IN the_DT single-good_JJ multi-unit_JJ auction_NN problem_NN ._.
Our_PRP$ scheme_NN is_VBZ both_CC approximately_RB efficient_JJ and_CC approximately_RB strategyproof_NN ._.
The_DT auction_NN settings_NNS considered_VBN in_IN our_PRP$ paper_NN are_VBP motivated_VBN by_IN recent_JJ trends_NNS in_IN electronic_JJ commerce_NN ;_: for_IN instance_NN ,_, corporations_NNS are_VBP increasingly_RB using_VBG auctions_NNS for_IN their_PRP$ strategic_JJ sourcing_VBG ._.
We_PRP consider_VBP both_CC a_DT reverse_JJ auction_NN variation_NN and_CC a_DT forward_RB auction_NN variation_NN ,_, and_CC propose_VBP a_DT compact_JJ and_CC expressive_JJ bidding_NN language_NN that_WDT allows_VBZ marginal-decreasing_JJ piecewise_NN constant_JJ curves_NNS ._.
In_IN the_DT reverse_JJ auction_NN ,_, we_PRP consider_VBP a_DT single_JJ buyer_NN with_IN a_DT demand_NN for_IN M_NN units_NNS of_IN a_DT good_JJ and_CC n_NN suppliers_NNS ,_, each_DT with_IN a_DT marginal-decreasing_JJ piecewise-constant_JJ cost_NN function_NN ._.
In_IN addition_NN ,_, each_DT supplier_NN can_MD also_RB express_VB an_DT upper_JJ bound_VBN ,_, or_CC capacity_NN constraint_NN on_IN the_DT number_NN of_IN units_NNS she_PRP can_MD supply_VB ._.
The_DT reverse_JJ variation_NN models_NNS ,_, for_IN example_NN ,_, a_DT procurement_NN auction_NN to_TO obtain_VB raw_JJ materials_NNS or_CC other_JJ services_NNS -LRB-_-LRB- e_LS ._.
g_NN ._.
circuit_NN boards_NNS ,_, power_NN suppliers_NNS ,_, toner_NN cartridges_NNS -RRB-_-RRB- ,_, with_IN flexible-sized_JJ lots_NNS ._.
In_IN the_DT forward_JJ auction_NN ,_, we_PRP consider_VBP a_DT single_JJ seller_NN with_IN M_NN units_NNS of_IN a_DT good_JJ and_CC n_NN buyers_NNS ,_, each_DT with_IN a_DT marginal-decreasing_JJ piecewise-constant_JJ valuation_NN function_NN ._.
A_DT buyer_NN can_MD also_RB express_VB a_DT lower_JJR bound_VBN ,_, or_CC minimum_JJ lot_NN size_NN ,_, on_IN the_DT number_NN of_IN units_NNS she_PRP demands_VBZ ._.
The_DT forward_JJ variation_NN models_NNS ,_, for_IN example_NN ,_, an_DT auction_NN to_TO sell_VB excess_JJ inventory_NN in_IN flexible-sized_JJ lots_NNS ._.
We_PRP consider_VBP the_DT computational_JJ complexity_NN of_IN implementing_VBG the_DT Vickrey-Clarke-Groves_NNPS -LSB-_-LRB- ##_CD ,_, #_# ,_, ##_NN -RSB-_-RRB- mechanism_NN for_IN the_DT multiunit_JJ auction_NN problem_NN ._.
The_DT Vickrey-Clarke-Groves_NNP -LRB-_-LRB- VCG_NNP -RRB-_-RRB- mechanism_NN has_VBZ a_DT number_NN of_IN interesting_JJ economic_JJ properties_NNS in_IN this_DT setting_NN ,_, including_VBG strategyproofness_NN ,_, such_JJ that_IN truthful_JJ bidding_NN is_VBZ a_DT dominant_JJ strategy_NN for_IN buyers_NNS in_IN the_DT forward_JJ auction_NN and_CC sellers_NNS in_IN the_DT reverse_JJ auction_NN ,_, and_CC allocative_JJ efficiency_NN ,_, such_JJ that_IN the_DT outcome_NN maximizes_VBZ the_DT total_JJ surplus_NN in_IN the_DT system_NN ._.
However_RB ,_, as_IN we_PRP discuss_VBP in_IN Section_NN #_# ,_, the_DT application_NN of_IN the_DT VCG-based_JJ approach_NN is_VBZ limited_VBN in_IN the_DT reverse_JJ direction_NN to_TO instances_NNS in_IN which_WDT the_DT total_JJ payments_NNS to_TO the_DT sellers_NNS are_VBP less_JJR than_IN the_DT value_NN of_IN the_DT outcome_NN to_TO the_DT buyer_NN ._.
Otherwise_RB ,_, either_CC the_DT auction_NN must_MD run_VB at_IN a_DT loss_NN in_IN these_DT instances_NNS ,_, or_CC the_DT buyer_NN can_MD not_RB be_VB expected_VBN to_TO voluntarily_RB choose_VB to_TO participate_VB ._.
This_DT is_VBZ an_DT example_NN of_IN the_DT budget-deficit_JJ problem_NN that_WDT often_RB occurs_VBZ in_IN efficient_JJ mechanism_NN design_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
The_DT computational_JJ problem_NN is_VBZ interesting_JJ ,_, because_IN even_RB with_IN marginal-decreasing_JJ bid_NN curves_NNS ,_, the_DT underlying_VBG allocation_NN problem_NN turns_VBZ out_RP to_TO -LRB-_-LRB- weakly_RB -RRB-_-RRB- intractable_JJ ._.
For_IN instance_NN ,_, the_DT classic_JJ 0_CD /_: #_# knapsack_NN is_VBZ a_DT special_JJ case_NN of_IN this_DT problem_NN ._.
#_# We_PRP model_VBP the_DT 1_CD However_RB ,_, the_DT problem_NN can_MD be_VB solved_VBN easily_RB by_IN a_DT greedy_JJ scheme_NN if_IN we_PRP remove_VB all_DT capacity_NN constraints_NNS from_IN the_DT seller_NN and_CC all_DT 166_CD allocation_NN problem_NN as_IN a_DT novel_JJ and_CC interesting_JJ generalization_NN of_IN the_DT classic_JJ knapsack_NN problem_NN ,_, and_CC develop_VB a_DT fully_RB polynomialtime_JJ approximation_NN scheme_NN ,_, computing_VBG a_DT -LRB-_-LRB- #_# +_CC -RRB-_-RRB- -_: approximation_NN in_IN worst-case_JJ time_NN T_NN =_JJ O_NN -LRB-_-LRB- n3_NN /_: -RRB-_-RRB- ,_, where_WRB each_DT bid_NN has_VBZ a_DT fixed_JJ number_NN of_IN piecewise_JJ constant_JJ pieces_NNS ._.
Given_VBN this_DT scheme_NN ,_, a_DT straightforward_JJ computation_NN of_IN the_DT VCG_NNP payments_NNS to_TO all_DT n_NN agents_NNS requires_VBZ time_NN O_NN -LRB-_-LRB- nT_NN -RRB-_-RRB- ._.
We_PRP compute_VBP approximate_JJ VCG_NNP payments_NNS in_IN worst-case_JJ time_NN O_NN -LRB-_-LRB- T_NN log_NN -LRB-_-LRB- n_NN /_: -RRB-_-RRB- -RRB-_-RRB- ,_, where_WRB is_VBZ a_DT constant_JJ that_IN quantifies_VBZ a_DT reasonable_JJ no-monopoly_JJ assumption_NN ._.
Specifically_RB ,_, in_IN the_DT reverse_JJ auction_NN ,_, suppose_VBP that_IN C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- is_VBZ the_DT minimal_JJ cost_NN for_IN procuring_VBG M_NN units_NNS with_IN all_DT sellers_NNS I_PRP ,_, and_CC C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- is_VBZ the_DT minimal_JJ cost_NN without_IN seller_NN i_FW ._.
Then_RB ,_, the_DT constant_JJ is_VBZ defined_VBN as_IN an_DT upper_JJ bound_VBN for_IN the_DT ratio_NN C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- /_: C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- ,_, over_IN all_DT sellers_NNS i_LS ._.
This_DT upper-bound_JJ tends_VBZ to_TO #_# as_IN the_DT number_NN of_IN sellers_NNS increases_NNS ._.
The_DT approximate_JJ VCG_NNP mechanism_NN is_VBZ -LRB-_-LRB- 1_CD +_CC -RRB-_-RRB- -_: strategyproof_NN for_IN an_DT approximation_NN to_TO within_IN -LRB-_-LRB- #_# +_CC -RRB-_-RRB- of_IN the_DT optimal_JJ allocation_NN ._.
This_DT means_VBZ that_IN a_DT bidder_NN can_MD gain_VB at_IN most_JJS -LRB-_-LRB- 1_CD +_CC -RRB-_-RRB- V_NN from_IN a_DT nontruthful_JJ bid_NN ,_, where_WRB V_NN is_VBZ the_DT total_JJ surplus_NN from_IN the_DT efficient_JJ allocation_NN ._.
As_IN such_JJ ,_, this_DT is_VBZ an_DT example_NN of_IN a_DT computationally-tractable_JJ -_: dominance_NN result_NN ._.
#_# In_IN practice_NN ,_, we_PRP can_MD have_VB good_JJ confidence_NN that_WDT bidders_NNS without_IN good_JJ information_NN about_IN the_DT bidding_NN strategies_NNS of_IN other_JJ participants_NNS will_MD have_VB little_JJ to_TO gain_VB from_IN attempts_NNS at_IN manipulation_NN ._.
Section_NN #_# formally_RB defines_VBZ the_DT forward_RB and_CC reverse_VB auctions_NNS ,_, and_CC defines_VBZ the_DT VCG_NNP mechanisms_NNS ._.
We_PRP also_RB prove_VBP our_PRP$ claims_NNS about_IN -_: strategyproofness_NN ._.
Section_NN #_# provides_VBZ the_DT generalized_VBN knapsack_NN formulation_NN for_IN the_DT multi-unit_JJ allocation_NN problems_NNS and_CC introduces_VBZ the_DT fully_RB polynomial_JJ time_NN approximation_NN scheme_NN ._.
Section_NN #_# defines_VBZ the_DT approximation_NN scheme_NN for_IN the_DT payments_NNS in_IN the_DT VCG_NNP mechanism_NN ._.
Section_NN #_# concludes_VBZ ._.
1_LS ._.
#_# Related_JJ Work_NN There_EX has_VBZ been_VBN considerable_JJ interest_NN in_IN recent_JJ years_NNS in_IN characterizing_VBG polynomial-time_JJ or_CC approximable_JJ special_JJ cases_NNS of_IN the_DT general_JJ combinatorial_JJ allocation_NN problem_NN ,_, in_IN which_WDT there_EX are_VBP multiple_JJ different_JJ items_NNS ._.
The_DT combinatorial_JJ allocation_NN problem_NN -LRB-_-LRB- CAP_NN -RRB-_-RRB- is_VBZ both_DT NP-complete_JJ and_CC inapproximable_JJ -LRB-_-LRB- e_LS ._.
g_NN ._.
-LSB-_-LRB- #_# -RSB-_-RRB- -RRB-_-RRB- ._.
Although_IN some_DT polynomial-time_JJ cases_NNS have_VBP been_VBN identified_VBN for_IN the_DT CAP_NN -LSB-_-LRB- #_# ,_, ##_NN -RSB-_-RRB- ,_, introducing_VBG an_DT expressive_JJ exclusive-or_JJ bidding_NN language_NN quickly_RB breaks_VBZ these_DT special_JJ cases_NNS ._.
We_PRP identify_VBP a_DT non-trivial_JJ but_CC approximable_JJ allocation_NN problem_NN with_IN an_DT expressive_JJ exclusiveor_NN bidding_NN language-the_JJ bid_NN taker_NN in_IN our_PRP$ setting_NN is_VBZ allowed_VBN to_TO accept_VB at_IN most_JJS one_CD point_NN on_IN the_DT bid_NN curve_NN ._.
The_DT idea_NN of_IN using_VBG approximations_NNS within_IN mechanisms_NNS ,_, while_IN retaining_VBG either_CC full-strategyproofness_NN or_CC -_: dominance_NN has_VBZ received_VBN some_DT previous_JJ attention_NN ._.
For_IN instance_NN ,_, Lehmann_NNP et_FW al_FW ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- propose_VBP a_DT greedy_JJ and_CC strategyproof_JJ approximation_NN to_TO a_DT single-minded_JJ combinatorial_JJ auction_NN problem_NN ._.
Nisan_NNP &_CC Ronen_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- discussed_VBN approximate_JJ VCG-based_JJ mechanisms_NNS ,_, but_CC either_CC appealed_VBD to_TO particular_JJ maximal-in-range_JJ approximations_NNS to_TO retain_VB full_JJ strategyproofness_NN ,_, or_CC to_TO resource-bounded_JJ agents_NNS with_IN information_NN or_CC computational_JJ limitations_NNS on_IN the_DT ability_NN to_TO compute_VB strategies_NNS ._.
Feigenminimum-lot_JJ size_NN constraints_NNS from_IN the_DT buyers_NNS ._.
2_CD However_RB ,_, this_DT may_MD not_RB be_VB an_DT example_NN of_IN what_WP Feigenbaum_NNP &_CC Shenker_NNP refer_VBP to_TO as_IN a_DT tolerably-manipulable_JJ mechanism_NN -LSB-_-LRB- #_# -RSB-_-RRB- because_IN we_PRP have_VBP not_RB tried_VBN to_TO bound_VBN the_DT effect_NN of_IN such_PDT a_DT manipulation_NN on_IN the_DT efficiency_NN of_IN the_DT outcome_NN ._.
VCG_NNP mechanism_NN do_VBP have_VB a_DT natural_JJ self-correcting_JJ property_NN ,_, though_RB ,_, because_IN a_DT useful_JJ manipulation_NN to_TO an_DT agent_NN is_VBZ a_DT reported_VBN value_NN that_WDT improves_VBZ the_DT total_JJ value_NN of_IN the_DT allocation_NN based_VBN on_IN the_DT reports_NNS of_IN other_JJ agents_NNS and_CC the_DT agent_NN ''_'' s_NNS own_JJ value_NN ._.
baum_NN &_CC Shenker_NNP -LSB-_-LRB- #_# -RSB-_-RRB- have_VBP defined_VBN the_DT concept_NN of_IN strategically_RB faithful_JJ approximations_NNS ,_, and_CC proposed_VBD the_DT study_NN of_IN approximations_NNS as_IN an_DT important_JJ direction_NN for_IN algorithmic_JJ mechanism_NN design_NN ._.
Schummer_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- and_CC Parkes_NNP et_FW al_FW -LSB-_-LRB- ##_CD -RSB-_-RRB- have_VBP previously_RB considered_VBN -_: dominance_NN ,_, in_IN the_DT context_NN of_IN economic_JJ impossibility_NN results_NNS ,_, for_IN example_NN in_IN combinatorial_JJ exchanges_NNS ._.
Eso_NNP et_FW al_FW ._.
-LSB-_-LRB- #_# -RSB-_-RRB- have_VBP studied_VBN a_DT similar_JJ procurement_NN problem_NN ,_, but_CC for_IN a_DT different_JJ volume_NN discount_NN model_NN ._.
This_DT earlier_JJR work_NN formulates_VBZ the_DT problem_NN as_IN a_DT general_JJ mixed_JJ integer_NN linear_JJ program_NN ,_, and_CC gives_VBZ some_DT empirical_JJ results_NNS on_IN simulated_JJ data_NNS ._.
Kalagnanam_NNP et_FW al_FW ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- address_NN double_JJ auctions_NNS ,_, where_WRB multiple_JJ buyers_NNS and_CC sellers_NNS trade_VBP a_DT divisible_JJ good_JJ ._.
The_DT focus_NN of_IN this_DT paper_NN is_VBZ also_RB different_JJ :_: it_PRP investigates_VBZ the_DT equilibrium_NN prices_NNS using_VBG the_DT demand_NN and_CC supply_NN curves_NNS ,_, whereas_IN our_PRP$ focus_NN is_VBZ on_IN efficient_JJ mechanism_NN design_NN ._.
Ausubel_NNP -LSB-_-LRB- #_# -RSB-_-RRB- has_VBZ proposed_VBN an_DT ascending-price_JJ multi-unit_JJ auction_NN for_IN buyers_NNS with_IN marginal-decreasing_JJ values_NNS -LSB-_-LRB- #_# -RSB-_-RRB- ,_, with_IN an_DT interpretation_NN as_IN a_DT primal-dual_JJ algorithm_NN -LSB-_-LRB- #_# -RSB-_-RRB- ._.
2_LS ._.
APPROXIMATELY-STRATEGYPROOF_NN VCG_NNP AUCTIONS_NNPS In_IN this_DT section_NN ,_, we_PRP first_RB describe_VBP the_DT marginal-decreasing_JJ piecewise_NN bidding_NN language_NN that_WDT is_VBZ used_VBN in_IN our_PRP$ forward_RB and_CC reverse_VB auctions_NNS ._.
Continuing_VBG ,_, we_PRP introduce_VBP the_DT VCG_NNP mechanism_NN for_IN the_DT problem_NN and_CC the_DT -_: dominance_NN results_VBZ for_IN approximations_NNS to_TO VCG_NNP outcomes_NNS ._.
We_PRP also_RB discuss_VBP the_DT economic_JJ properties_NNS of_IN VCG_NNP mechanisms_NNS in_IN these_DT forward_RB and_CC reverse_VB auction_NN multi-unit_JJ settings_NNS ._.
2_LS ._.
#_# Marginal-Decreasing_NNP Piecewise_NNP Bids_NNS We_PRP provide_VBP a_DT piecewise-constant_JJ and_CC marginal-decreasing_JJ bidding_NN language_NN ._.
This_DT bidding_NN language_NN is_VBZ expressive_JJ for_IN a_DT natural_JJ class_NN of_IN valuation_NN and_CC cost_NN functions_NNS :_: fixed_VBN unit_NN prices_NNS over_IN intervals_NNS of_IN quantities_NNS ._.
See_VB Figure_NNP #_# for_IN an_DT example_NN ._.
In_IN addition_NN ,_, we_PRP slightly_RB relax_VBP the_DT marginal-decreasing_NN requirement_NN to_TO allow_VB :_: a_DT bidder_NN in_IN the_DT forward_JJ auction_NN to_TO state_VB a_DT minimal_JJ purchase_NN amount_NN ,_, such_JJ that_IN she_PRP has_VBZ zero_CD value_NN for_IN quantities_NNS smaller_JJR than_IN that_DT amount_NN ;_: a_DT seller_NN in_IN the_DT reverse_JJ auction_NN to_TO state_VB a_DT capacity_NN constraint_NN ,_, such_JJ that_IN she_PRP has_VBZ an_DT effectively_RB infinite_JJ cost_NN to_TO supply_VB quantities_NNS in_IN excess_NN of_IN a_DT particular_JJ amount_NN ._.
Reverse_JJ Auction_NNP Bid_NN 7_CD 5_CD ##_NN ##_CD ##_CD 10_CD 8_CD Quantity_NNP Price_NNP 7_CD 5_CD ##_NN ##_CD ##_CD 10_CD 8_CD Quantity_NNP Price_NNP Forward_NNP Auction_NNP Bid_NNP Figure_NNP #_# :_: Marginal-decreasing_NN ,_, piecewise_JJ constant_JJ bids_NNS ._.
In_IN the_DT forward_JJ auction_NN bid_NN ,_, the_DT bidder_NN offers_VBZ $_$ ##_CD per_IN unit_NN for_IN quantity_NN in_IN the_DT range_NN -LSB-_-LRB- #_# ,_, ##_NN -RRB-_-RRB- ,_, $_$ #_# per_IN unit_NN in_IN the_DT range_NN -LSB-_-LRB- ##_CD ,_, ##_CD -RRB-_-RRB- ,_, and_CC $_$ #_# in_IN the_DT range_NN -LSB-_-LRB- ##_CD ,_, ##_CD -RSB-_-RRB- ._.
Her_PRP$ valuation_NN is_VBZ zero_CD for_IN quantities_NNS outside_IN the_DT range_NN -LSB-_-LRB- ##_CD ,_, ##_CD -RSB-_-RRB- ._.
In_IN the_DT reverse_JJ auction_NN bid_NN ,_, the_DT cost_NN of_IN the_DT seller_NN is_VBZ outside_IN the_DT range_NN -LSB-_-LRB- ##_CD ,_, ##_CD -RSB-_-RRB- ._.
In_IN detail_NN ,_, in_IN a_DT forward_RB auction_NN ,_, a_DT bid_NN from_IN buyer_NN i_FW can_MD be_VB written_VBN as_IN a_DT list_NN of_IN -LRB-_-LRB- quantity-range_JJ ,_, unit-price_NN -RRB-_-RRB- tuples_NNS ,_, -LRB-_-LRB- -LRB-_-LRB- u1_NN i_FW ,_, p1_NN i_LS -RRB-_-RRB- ,_, -LRB-_-LRB- u2_NN i_FW ,_, p2_NN i_LS -RRB-_-RRB- ,_, ..._: ,_, -LRB-_-LRB- umi1_NN i_FW ,_, pmi1_NN i_LS -RRB-_-RRB- -RRB-_-RRB- ,_, with_IN an_DT upper_JJ bound_VBN umi_NN i_FW on_IN the_DT quantity_NN ._.
The_DT interpretation_NN is_VBZ that_IN the_DT bidder_NN ''_'' s_NNS valuation_NN in_IN the_DT 167_CD -LRB-_-LRB- semi-open_JJ -RRB-_-RRB- quantity_NN range_NN -LSB-_-LRB- uj_NN i_FW ,_, uj_NN +_CC #_# i_LS -RRB-_-RRB- is_VBZ pj_NN i_FW for_IN each_DT unit_NN ._.
Additionally_RB ,_, it_PRP is_VBZ assumed_VBN that_IN the_DT valuation_NN is_VBZ #_# for_IN quantities_NNS less_JJR than_IN u1_NN i_FW as_RB well_RB as_IN for_IN quantities_NNS more_JJR than_IN um_NN i_FW ._.
This_DT is_VBZ implemented_VBN by_IN adding_VBG two_CD dummy_JJ bid_NN tuples_NNS ,_, with_IN zero_CD prices_NNS in_IN the_DT range_NN -LSB-_-LRB- #_# ,_, u1_NN i_LS -RRB-_-RRB- and_CC -LRB-_-LRB- umi_FW i_FW ,_, -RRB-_-RRB- ._.
We_PRP interpret_VBP the_DT bid_NN list_NN as_IN defining_VBG a_DT price_NN function_NN ,_, pbid_NN ,_, i_FW -LRB-_-LRB- q_NN -RRB-_-RRB- =_JJ qpj_NN i_FW ,_, if_IN uj_NN i_FW q_FW <_JJR uj_NN +_CC #_# i_FW ,_, where_WRB j_NN =_JJ #_# ,_, #_# ,_, ..._: ,_, mi_FW #_# ._.
In_IN order_NN to_TO resolve_VB the_DT boundary_NN condition_NN ,_, we_PRP assume_VBP that_IN the_DT bid_NN price_NN for_IN the_DT upper_JJ bound_VBN quantity_NN umi_NN i_FW is_VBZ pbid_NN ,_, i_FW -LRB-_-LRB- umi_FW i_FW -RRB-_-RRB- =_JJ umi_NN i_FW pmi1_FW i_FW ._.
A_DT seller_NN ''_'' s_NNS bid_NN is_VBZ similarly_RB defined_VBN in_IN the_DT reverse_JJ auction_NN ._.
The_DT interpretation_NN is_VBZ that_IN the_DT bidder_NN ''_'' s_NNS cost_NN in_IN the_DT -LRB-_-LRB- semi-open_JJ -RRB-_-RRB- quantity_NN range_NN -LSB-_-LRB- uj_NN i_FW ,_, uj_NN +_CC #_# i_LS -RRB-_-RRB- is_VBZ pj_NN i_FW for_IN each_DT unit_NN ._.
Additionally_RB ,_, it_PRP is_VBZ assumed_VBN that_IN the_DT cost_NN is_VBZ for_IN quantities_NNS less_JJR than_IN u1_NN i_FW as_RB well_RB as_IN for_IN quantities_NNS more_JJR than_IN um_NN i_FW ._.
Equivalently_RB ,_, the_DT unit_NN prices_NNS in_IN the_DT ranges_NNS -LSB-_-LRB- #_# ,_, u1_NN i_LS -RRB-_-RRB- and_CC -LRB-_-LRB- um_NN i_FW ,_, -RRB-_-RRB- are_VBP infinity_NN ._.
We_PRP interpret_VBP the_DT bid_NN list_NN as_IN defining_VBG a_DT price_NN function_NN ,_, pask_NN ,_, i_FW -LRB-_-LRB- q_NN -RRB-_-RRB- =_JJ qpj_NN i_FW ,_, if_IN uj_NN i_FW q_FW <_JJR uj_NN +_CC #_# i_LS ._.
2_LS ._.
#_# VCG-Based_JJ Multi-Unit_NNP Auctions_NNS We_PRP construct_VBP the_DT tractable_JJ and_CC approximately-strategyproof_JJ multiunit_NN auctions_NNS around_IN a_DT VCG_NNP mechanism_NN ._.
We_PRP assume_VBP that_IN all_DT agents_NNS have_VBP quasilinear_JJ utility_NN functions_NNS ;_: that_DT is_VBZ ,_, ui_NN -LRB-_-LRB- q_NN ,_, p_NN -RRB-_-RRB- =_JJ vi_LS -LRB-_-LRB- q_NN -RRB-_-RRB- p_NN ,_, for_IN a_DT buyer_NN i_FW with_IN valuation_NN vi_LS -LRB-_-LRB- q_NN -RRB-_-RRB- for_IN q_JJ units_NNS at_IN price_NN p_NN ,_, and_CC ui_NN -LRB-_-LRB- q_NN ,_, p_NN -RRB-_-RRB- =_JJ p_NN ci_NN -LRB-_-LRB- q_NN -RRB-_-RRB- for_IN a_DT seller_NN i_FW with_IN cost_NN ci_NN -LRB-_-LRB- q_NN -RRB-_-RRB- at_IN price_NN p_NN ._.
This_DT is_VBZ a_DT standard_JJ assumption_NN in_IN the_DT auction_NN literature_NN ,_, equivalent_JJ to_TO assuming_VBG risk-neutral_JJ agents_NNS -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
We_PRP will_MD use_VB the_DT term_NN payoff_NN interchangeably_RB for_IN utility_NN ._.
In_IN the_DT forward_JJ auction_NN ,_, there_EX is_VBZ a_DT seller_NN with_IN M_NN units_NNS to_TO sell_VB ._.
We_PRP assume_VBP that_IN this_DT seller_NN has_VBZ no_DT intrinsic_JJ value_NN for_IN the_DT items_NNS ._.
Given_VBN a_DT set_NN of_IN bids_NNS from_IN I_PRP agents_NNS ,_, let_VB V_NN -LRB-_-LRB- I_NN -RRB-_-RRB- denote_VBP the_DT maximal_JJ revenue_NN to_TO the_DT seller_NN ,_, given_VBN that_IN at_IN most_JJS one_CD point_NN on_IN the_DT bid_NN curve_NN can_MD be_VB selected_VBN from_IN each_DT agent_NN and_CC no_DT more_JJR than_IN M_NN units_NNS of_IN the_DT item_NN can_MD be_VB sold_VBN ._.
Let_VB x_NN =_JJ -LRB-_-LRB- x_NN 1_CD ,_, ..._: ,_, x_CC N_NN -RRB-_-RRB- denote_VBP the_DT solution_NN to_TO this_DT winner_NN -_: determination_NN problem_NN ,_, where_WRB x_CC i_FW is_VBZ the_DT number_NN of_IN units_NNS sold_VBN to_TO agent_NN i_FW ._.
Similarly_RB ,_, let_VB V_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- denote_VB the_DT maximal_JJ revenue_NN to_TO the_DT seller_NN without_IN bids_NNS from_IN agent_NN i_FW ._.
The_DT VCG_NNP mechanism_NN is_VBZ defined_VBN as_IN follows_VBZ :_: 1_CD ._.
Receive_VB piecewise-constant_JJ bid_NN curves_NNS and_CC capacity_NN constraints_NNS from_IN all_PDT the_DT buyers_NNS ._.
2_LS ._.
Implement_VB the_DT outcome_NN x_NN that_WDT solves_VBZ the_DT winner-determination_NN problem_NN with_IN all_DT buyers_NNS ._.
3_LS ._.
Collect_VB payment_NN pvcg_NN ,_, i_FW =_JJ pbid_NN ,_, i_FW -LRB-_-LRB- x_CC i_LS -RRB-_-RRB- -LSB-_-LRB- V_NN -LRB-_-LRB- I_NN -RRB-_-RRB- V_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- -RSB-_-RRB- from_IN each_DT buyer_NN ,_, and_CC pass_VB the_DT payments_NNS to_TO the_DT seller_NN ._.
In_IN this_DT forward_JJ auction_NN ,_, the_DT VCG_NNP mechanism_NN is_VBZ strategyproof_JJ for_IN buyers_NNS ,_, which_WDT means_VBZ that_IN truthful_JJ bidding_NN is_VBZ a_DT dominant_JJ strategy_NN ,_, i_FW ._.
e_LS ._.
utility_NN maximizing_VBG whatever_WDT the_DT bids_NNS of_IN other_JJ buyers_NNS ._.
In_IN addition_NN ,_, the_DT VCG_NNP mechanism_NN is_VBZ allocatively-efficient_JJ ,_, and_CC the_DT payments_NNS from_IN each_DT buyer_NN are_VBP always_RB positive_JJ ._.
#_# Moreover_RB ,_, each_DT buyer_NN pays_VBZ less_JJR than_IN its_PRP$ value_NN ,_, and_CC receives_VBZ payoff_NN V_NN -LRB-_-LRB- I_NN -RRB-_-RRB- V_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- in_IN equilibrium_NN ;_: this_DT is_VBZ precisely_RB the_DT marginal-value_NN that_WDT buyer_NN i_FW contributes_VBZ to_TO the_DT economic_JJ efficiency_NN of_IN the_DT system_NN ._.
In_IN the_DT reverse_JJ auction_NN ,_, there_EX is_VBZ a_DT buyer_NN with_IN M_NN units_NNS to_TO buy_VB ,_, and_CC n_NN suppliers_NNS ._.
We_PRP assume_VBP that_IN the_DT buyer_NN has_VBZ value_NN V_NN >_JJR #_# to_TO purchase_VB all_DT M_NN units_NNS ,_, but_CC zero_CD value_NN otherwise_RB ._.
To_TO simplify_VB the_DT mechanism_NN design_NN problem_NN we_PRP assume_VBP that_IN the_DT buyer_NN will_MD truthfully_RB announce_VB this_DT value_NN to_TO the_DT mechanism_NN ._.
#_# The_DT winner3_NN In_IN fact_NN ,_, the_DT VCG_NNP mechanism_NN maximizes_VBZ the_DT expected_VBN payoff_NN to_TO the_DT seller_NN across_IN all_DT efficient_JJ mechanisms_NNS ,_, even_RB allowing_VBG for_IN Bayesian-Nash_JJ implementations_NNS -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
4_CD Without_IN this_DT assumption_NN ,_, the_DT Myerson-Satterthwaite_JJ -LSB-_-LRB- ##_CD -RSB-_-RRB- impossibility_NN result_NN would_MD already_RB imply_VB that_IN we_PRP should_MD not_RB expect_VB an_DT efficient_JJ trading_NN mechanism_NN in_IN this_DT setting_NN ._.
determination_NN problem_NN in_IN the_DT reverse_JJ auction_NN is_VBZ to_TO determine_VB the_DT allocation_NN ,_, x_NN ,_, that_WDT minimizes_VBZ the_DT cost_NN to_TO the_DT buyer_NN ,_, or_CC forfeits_VBZ trade_NN if_IN the_DT minimal_JJ cost_NN is_VBZ greater_JJR than_IN value_NN ,_, V_NN ._.
Let_VB C_NNP -LRB-_-LRB- I_PRP -RRB-_-RRB- denote_VBP the_DT minimal_JJ cost_NN given_VBN bids_NNS from_IN all_DT sellers_NNS ,_, and_CC let_VB C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- denote_VB the_DT minimal_JJ cost_NN without_IN bids_NNS from_IN seller_NN i_FW ._.
We_PRP can_MD assume_VB ,_, without_IN loss_NN of_IN generality_NN ,_, that_IN there_EX is_VBZ an_DT efficient_JJ trade_NN and_CC V_NN C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- ._.
Otherwise_RB ,_, then_RB the_DT efficient_JJ outcome_NN is_VBZ no_DT trade_NN ,_, and_CC the_DT outcome_NN of_IN the_DT VCG_NNP mechanism_NN is_VBZ no_DT trade_NN and_CC no_DT payments_NNS ._.
The_DT VCG_NNP mechanism_NN implements_VBZ the_DT outcome_NN x_NN that_WDT minimizes_VBZ cost_NN based_VBN on_IN bids_NNS from_IN all_DT sellers_NNS ,_, and_CC then_RB provides_VBZ payment_NN pvcg_NN ,_, i_FW =_JJ pask_NN ,_, i_FW -LRB-_-LRB- x_CC i_LS -RRB-_-RRB- +_CC -LSB-_-LRB- V_NN C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- max_NN -LRB-_-LRB- #_# ,_, V_NN C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- -RRB-_-RRB- -RSB-_-RRB- to_TO each_DT seller_NN ._.
The_DT total_JJ payment_NN is_VBZ collected_VBN from_IN the_DT buyer_NN ._.
Again_RB ,_, in_IN equilibrium_NN each_DT seller_NN ''_'' s_NNS payoff_NN is_VBZ exactly_RB the_DT marginal-value_NN that_IN the_DT seller_NN contributes_VBZ to_TO the_DT economic_JJ efficiency_NN of_IN the_DT system_NN ;_: in_IN the_DT simple_JJ case_NN that_IN V_NN C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- for_IN all_DT sellers_NNS i_LS ,_, this_DT is_VBZ precisely_RB C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- ._.
Although_IN the_DT VCG_NNP mechanism_NN remains_VBZ strategyproof_JJ for_IN sellers_NNS in_IN the_DT reverse_JJ direction_NN ,_, its_PRP$ applicability_NN is_VBZ limited_VBN to_TO cases_NNS in_IN which_WDT the_DT total_JJ payments_NNS to_TO the_DT sellers_NNS are_VBP less_JJR than_IN the_DT buyer_NN ''_'' s_NNS value_NN ._.
Otherwise_RB ,_, there_EX will_MD be_VB instances_NNS in_IN which_WDT the_DT buyer_NN will_MD not_RB choose_VB to_TO voluntarily_RB participate_VB in_IN the_DT mechanism_NN ,_, based_VBN on_IN its_PRP$ own_JJ value_NN and_CC its_PRP$ beliefs_NNS about_IN the_DT costs_NNS of_IN sellers_NNS ._.
This_DT leads_VBZ to_TO a_DT loss_NN in_IN efficiency_NN when_WRB the_DT buyer_NN chooses_VBZ not_RB to_TO participate_VB ,_, because_IN efficient_JJ trades_NNS are_VBP missed_VBN ._.
This_DT problem_NN with_IN the_DT size_NN of_IN the_DT payments_NNS ,_, does_VBZ not_RB occur_VB in_IN simple_JJ single-item_JJ reverse_JJ auctions_NNS ,_, or_CC even_RB in_IN multi-unit_JJ reverse_JJ auctions_NNS with_IN a_DT buyer_NN that_WDT has_VBZ a_DT constant_JJ marginal-valuation_NN for_IN each_DT additional_JJ item_NN that_IN she_PRP procures_VBZ ._.
#_# Intuitively_RB ,_, the_DT problem_NN occurs_VBZ in_IN the_DT reverse_JJ multi-unit_JJ setting_NN because_IN the_DT buyer_NN demands_VBZ a_DT fixed_JJ number_NN of_IN items_NNS ,_, and_CC has_VBZ zero_CD value_NN without_IN them_PRP ._.
This_DT leads_VBZ to_TO the_DT possibility_NN of_IN the_DT trade_NN being_VBG contingent_JJ on_IN the_DT presence_NN of_IN particular_JJ ,_, so-called_JJ pivotal_JJ sellers_NNS ._.
Define_VB a_DT seller_NN i_FW as_IN pivotal_JJ ,_, if_IN C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- V_NN but_CC C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- >_JJR V_NN ._.
In_IN words_NNS ,_, there_EX would_MD be_VB no_DT efficient_JJ trade_NN without_IN the_DT seller_NN ._.
Any_DT time_NN there_EX is_VBZ a_DT pivotal_JJ seller_NN ,_, the_DT VCG_NNP payments_NNS to_TO that_DT seller_NN allow_VB her_PRP to_TO extract_VB all_DT of_IN the_DT surplus_NN ,_, and_CC the_DT payments_NNS are_VBP too_RB large_JJ to_TO sustain_VB with_IN the_DT buyer_NN ''_'' s_NNS value_NN unless_IN this_DT is_VBZ the_DT only_JJ winning_VBG seller_NN ._.
Concretely_RB ,_, we_PRP have_VBP this_DT participation_NN problem_NN in_IN the_DT reverse_JJ auction_NN when_WRB the_DT total_JJ payoff_NN to_TO the_DT sellers_NNS ,_, in_IN equilibrium_NN ,_, exceeds_VBZ the_DT total_JJ payoff_NN from_IN the_DT efficient_JJ allocation_NN :_: V_NN C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- i_FW -LSB-_-LRB- V_NN C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- max_NN -LRB-_-LRB- #_# ,_, V_NN C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- -RRB-_-RRB- -RSB-_-RRB- As_IN stated_VBN above_IN ,_, first_RB notice_VB that_IN we_PRP require_VBP V_NN >_JJR C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- for_IN all_DT sellers_NNS i_LS ._.
In_IN other_JJ words_NNS ,_, there_EX must_MD be_VB no_DT pivotal_JJ sellers_NNS ._.
Given_VBN this_DT ,_, it_PRP is_VBZ then_RB necessary_JJ and_CC sufficient_JJ that_DT :_: V_NN C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- i_FW -LRB-_-LRB- C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- -RRB-_-RRB- -LRB-_-LRB- #_# -RRB-_-RRB- 5_CD To_TO make_VB the_DT reverse_JJ auction_NN symmetric_JJ with_IN the_DT forward_JJ direction_NN ,_, we_PRP would_MD need_VB a_DT buyer_NN with_IN a_DT constant_JJ marginal-value_NN to_TO buy_VB the_DT first_JJ M_NN units_NNS ,_, and_CC zero_CD value_NN for_IN additional_JJ units_NNS ._.
The_DT payments_NNS to_TO the_DT sellers_NNS would_MD never_RB exceed_VB the_DT buyer_NN ''_'' s_NNS value_NN in_IN this_DT case_NN ._.
Conversely_RB ,_, to_TO make_VB the_DT forward_JJ auction_NN symmetric_JJ with_IN the_DT reverse_JJ auction_NN ,_, we_PRP would_MD need_VB a_DT seller_NN with_IN a_DT constant_JJ -LRB-_-LRB- and_CC high_JJ -RRB-_-RRB- marginal-cost_NN to_TO sell_VB anything_NN less_JJR than_IN the_DT first_JJ M_NN units_NNS ,_, and_CC then_RB a_DT low_JJ -LRB-_-LRB- or_CC zero_CD -RRB-_-RRB- marginal_JJ cost_NN ._.
The_DT total_JJ payments_NNS received_VBN by_IN the_DT seller_NN can_MD be_VB less_JJR than_IN the_DT seller_NN ''_'' s_NNS cost_NN for_IN the_DT outcome_NN in_IN this_DT case_NN ._.
168_CD In_IN words_NNS ,_, the_DT surplus_NN of_IN the_DT efficient_JJ allocation_NN must_MD be_VB greater_JJR than_IN the_DT total_JJ marginal-surplus_JJ provided_VBN by_IN each_DT seller_NN ._.
#_# Consider_VB an_DT example_NN with_IN #_# agents_NNS -LCB-_-LRB- #_# ,_, #_# ,_, #_# -RCB-_-RRB- ,_, and_CC V_NN =_JJ ###_CD and_CC C_NN -LRB-_-LRB- ###_CD -RRB-_-RRB- =_JJ ##_NN ._.
Condition_NN -LRB-_-LRB- #_# -RRB-_-RRB- holds_VBZ when_WRB C_NN -LRB-_-LRB- ##_NN -RRB-_-RRB- =_JJ C_NN -LRB-_-LRB- ##_NN -RRB-_-RRB- =_JJ 70_CD and_CC C_NN -LRB-_-LRB- ##_NN -RRB-_-RRB- =_JJ ###_CD ,_, but_CC not_RB when_WRB C_NN -LRB-_-LRB- ##_NN -RRB-_-RRB- =_JJ C_NN -LRB-_-LRB- ##_NN -RRB-_-RRB- =_JJ ##_NN and_CC C_NN -LRB-_-LRB- ##_NN -RRB-_-RRB- =_JJ ###_CD ._.
In_IN the_DT first_JJ case_NN ,_, the_DT agent_NN payoffs_NN =_JJ -LRB-_-LRB- #_# ,_, #_# ,_, #_# ,_, #_# -RRB-_-RRB- ,_, where_WRB #_# is_VBZ the_DT seller_NN ,_, is_VBZ -LRB-_-LRB- ##_CD ,_, ##_CD ,_, ##_CD ,_, ##_CD -RRB-_-RRB- ._.
In_IN the_DT second_JJ case_NN ,_, the_DT payoffs_NNS are_VBP =_JJ -LRB-_-LRB- ##_CD ,_, ##_CD ,_, ##_CD ,_, ##_CD -RRB-_-RRB- ._.
One_CD thing_NN we_PRP do_VBP know_VB ,_, because_IN the_DT VCG_NNP mechanism_NN will_MD maximize_VB the_DT payoff_NN to_TO the_DT buyer_NN across_IN all_DT efficient_JJ mechanisms_NNS -LSB-_-LRB- ##_CD -RSB-_-RRB- ,_, is_VBZ that_IN whenever_WRB Eq_NN ._.
#_# is_VBZ not_RB satisfied_JJ there_EX can_MD be_VB no_DT efficient_JJ auction_NN mechanism_NN ._.
#_# 2_CD ._.
#_# -_: Strategyproofness_NNP We_PRP now_RB consider_VBP the_DT same_JJ VCG_NNP mechanism_NN ,_, but_CC with_IN an_DT approximation_NN scheme_NN for_IN the_DT underlying_VBG allocation_NN problem_NN ._.
We_PRP derive_VBP an_DT -_: strategyproofness_NN result_NN ,_, that_WDT bounds_VBZ the_DT maximal_JJ gain_NN in_IN payoff_NN that_IN an_DT agent_NN can_MD expect_VB to_TO achieve_VB through_IN a_DT unilateral_JJ deviation_NN from_IN following_VBG a_DT simple_JJ truth-revealing_JJ strategy_NN ._.
We_PRP describe_VBP the_DT result_NN for_IN the_DT forward_JJ auction_NN direction_NN ,_, but_CC it_PRP is_VBZ quite_RB a_DT general_JJ observation_NN ._.
As_IN before_RB ,_, let_VB V_NN -LRB-_-LRB- I_NN -RRB-_-RRB- denote_VBP the_DT value_NN of_IN the_DT optimal_JJ solution_NN to_TO the_DT allocation_NN problem_NN with_IN truthful_JJ bids_NNS from_IN all_DT agents_NNS ,_, and_CC V_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- denote_VB the_DT value_NN of_IN the_DT optimal_JJ solution_NN computed_VBD without_IN bids_NNS from_IN agent_NN i_FW ._.
Let_VB V_NNP -LRB-_-LRB- I_PRP -RRB-_-RRB- and_CC V_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- denote_VB the_DT value_NN of_IN the_DT allocation_NN computed_VBN with_IN an_DT approximation_NN scheme_NN ,_, and_CC assume_VB that_IN the_DT approximation_NN satisfies_VBZ :_: -LRB-_-LRB- #_# +_CC -RRB-_-RRB- V_NN -LRB-_-LRB- I_NN -RRB-_-RRB- V_NN -LRB-_-LRB- I_NN -RRB-_-RRB- for_IN some_DT >_JJR #_# ._.
We_PRP provide_VBP such_JJ an_DT approximation_NN scheme_NN for_IN our_PRP$ setting_NN later_RB in_IN the_DT paper_NN ._.
Let_VB x_CC denote_VB the_DT allocation_NN implemented_VBN by_IN the_DT approximation_NN scheme_NN ._.
The_DT payoff_NN to_TO agent_NN i_FW ,_, for_IN announcing_VBG valuation_NN vi_LS ,_, is_VBZ :_: vi_LS -LRB-_-LRB- xi_NN -RRB-_-RRB- +_CC j_NN =_JJ i_FW vj_FW -LRB-_-LRB- xj_NN -RRB-_-RRB- V_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- The_DT final_JJ term_NN is_VBZ independent_JJ of_IN the_DT agent_NN ''_'' s_NNS announced_VBD value_NN ,_, and_CC can_MD be_VB ignored_VBN in_IN an_DT incentive-analysis_NN ._.
However_RB ,_, agent_NN i_FW can_MD try_VB to_TO improve_VB its_PRP$ payoff_NN through_IN the_DT effect_NN of_IN its_PRP$ announced_VBN value_NN on_IN the_DT allocation_NN x_NN implemented_VBN by_IN the_DT mechanism_NN ._.
In_IN particular_JJ ,_, agent_NN i_FW wants_VBZ the_DT mechanism_NN to_TO select_JJ x_NN to_TO maximize_VB the_DT sum_NN of_IN its_PRP$ true_JJ value_NN ,_, vi_LS -LRB-_-LRB- xi_NN -RRB-_-RRB- ,_, and_CC the_DT reported_VBN value_NN of_IN the_DT other_JJ agents_NNS ,_, j_NN =_JJ i_FW vj_FW -LRB-_-LRB- xj_NN -RRB-_-RRB- ._.
If_IN the_DT mechanism_NN ''_'' s_NNS allocation_NN algorithm_NN is_VBZ optimal_JJ ,_, then_RB all_PDT the_DT agent_NN needs_VBZ to_TO do_VB is_VBZ truthfully_RB state_NN its_PRP$ value_NN and_CC the_DT mechanism_NN will_MD do_VB the_DT rest_NN ._.
However_RB ,_, faced_VBN with_IN an_DT approximate_JJ allocation_NN algorithm_NN ,_, the_DT agent_NN can_MD try_VB to_TO improve_VB its_PRP$ payoff_NN by_IN announcing_VBG a_DT value_NN that_WDT corrects_VBZ for_IN the_DT approximation_NN ,_, and_CC causes_VBZ the_DT approximation_NN algorithm_NN to_TO implement_VB the_DT allocation_NN that_WDT exactly_RB maximizes_VBZ the_DT total_NN reported_VBD value_NN of_IN the_DT other_JJ agents_NNS together_RB with_IN its_PRP$ own_JJ actual_JJ value_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
6_CD This_DT condition_NN is_VBZ implied_VBN by_IN the_DT agents_NNS are_VBP substitutes_NNS requirement_NN -LSB-_-LRB- #_# -RSB-_-RRB- ,_, that_WDT has_VBZ received_VBN some_DT attention_NN in_IN the_DT combinatorial_JJ auction_NN literature_NN because_IN it_PRP characterizes_VBZ the_DT case_NN in_IN which_WDT VCG_NNP payments_NNS can_MD be_VB supported_VBN in_IN a_DT competitive_JJ equilibrium_NN ._.
Useful_JJ characterizations_NNS of_IN conditions_NNS that_WDT satisfy_VBP agents_NNS are_VBP substitutes_NNS ,_, in_IN terms_NNS of_IN the_DT underlying_VBG valuations_NNS of_IN agents_NNS have_VBP proved_VBN quite_RB elusive_JJ ._.
7_CD Moreover_RB ,_, although_IN there_EX is_VBZ a_DT small_JJ literature_NN on_IN maximallyefficient_JJ mechanisms_NNS subject_JJ to_TO requirements_NNS of_IN voluntaryparticipation_NN and_CC budget-balance_NN -LRB-_-LRB- i_FW ._.
e_LS ._.
with_IN the_DT mechanism_NN neither_CC introducing_VBG or_CC removing_VBG money_NN -RRB-_-RRB- ,_, analytic_JJ results_NNS are_VBP only_RB known_VBN for_IN simple_JJ problems_NNS -LRB-_-LRB- e_LS ._.
g_NN ._.
-LSB-_-LRB- ##_RB ,_, #_# -RSB-_-RRB- -RRB-_-RRB- ._.
We_PRP can_MD now_RB analyze_VB the_DT best_JJS possible_JJ gain_NN from_IN manipulation_NN to_TO an_DT agent_NN in_IN our_PRP$ setting_NN ._.
We_PRP first_RB assume_VB that_IN the_DT other_JJ agents_NNS are_VBP truthful_JJ ,_, and_CC then_RB relax_VB this_DT ._.
In_IN both_DT cases_NNS ,_, the_DT maximal_JJ benefit_NN to_TO agent_NN i_FW occurs_VBZ when_WRB the_DT initial_JJ approximation_NN is_VBZ worst-case_JJ ._.
With_IN truthful_JJ reports_NNS from_IN other_JJ agents_NNS ,_, this_DT occurs_VBZ when_WRB the_DT value_NN of_IN choice_NN x_NN is_VBZ V_NN -LRB-_-LRB- I_NN -RRB-_-RRB- /_: -LRB-_-LRB- #_# +_CC -RRB-_-RRB- ._.
Then_RB ,_, an_DT agent_NN could_MD hope_VB to_TO receive_VB an_DT improved_JJ payoff_NN of_IN :_: V_NN -LRB-_-LRB- I_NN -RRB-_-RRB- V_NN -LRB-_-LRB- I_NN -RRB-_-RRB- 1_CD +_CC =_JJ 1_CD +_CC V_NN -LRB-_-LRB- I_NN -RRB-_-RRB- This_DT is_VBZ possible_JJ if_IN the_DT agent_NN is_VBZ able_JJ to_TO select_VB a_DT reported_VBN type_NN to_TO correct_VB the_DT approximation_NN algorithm_NN ,_, and_CC make_VB the_DT algorithm_NN implement_VB the_DT allocation_NN with_IN value_NN V_NN -LRB-_-LRB- I_NN -RRB-_-RRB- ._.
Thus_RB ,_, if_IN other_JJ agents_NNS are_VBP truthful_JJ ,_, and_CC with_IN a_DT -LRB-_-LRB- #_# +_CC -RRB-_-RRB- -_: approximation_NN scheme_NN to_TO the_DT allocation_NN problem_NN ,_, then_RB no_DT agent_NN can_MD improve_VB its_PRP$ payoff_NN by_IN more_JJR than_IN a_DT factor_NN /_: -LRB-_-LRB- #_# +_CC -RRB-_-RRB- of_IN the_DT value_NN of_IN the_DT optimal_JJ solution_NN ._.
The_DT analysis_NN is_VBZ very_RB similar_JJ when_WRB the_DT other_JJ agents_NNS are_VBP not_RB truthful_JJ ._.
In_IN this_DT case_NN ,_, an_DT individual_JJ agent_NN can_MD improve_VB its_PRP$ payoff_NN by_IN no_DT more_JJR than_IN a_DT factor_NN /_: -LRB-_-LRB- #_# +_CC -RRB-_-RRB- of_IN the_DT value_NN of_IN the_DT optimal_JJ solution_NN given_VBN the_DT values_NNS reported_VBN by_IN the_DT other_JJ agents_NNS ._.
Let_VB V_NNP in_IN the_DT following_VBG theorem_NN define_VB the_DT total_JJ value_NN of_IN the_DT efficient_JJ allocation_NN ,_, given_VBN the_DT reported_VBN values_NNS of_IN agents_NNS j_NN =_JJ i_FW ,_, and_CC the_DT true_JJ value_NN of_IN agent_NN i_FW ._.
THEOREM_NNP #_# ._.
A_DT VCG-based_JJ mechanism_NN with_IN a_DT -LRB-_-LRB- #_# +_CC -RRB-_-RRB- allocation_NN algorithm_NN is_VBZ -LRB-_-LRB- #_# +_CC V_NN -RRB-_-RRB- strategyproof_NN for_IN agent_NN i_FW ,_, and_CC agent_NN i_FW can_MD gain_VB at_IN most_JJS this_DT payoff_NN through_IN some_DT non-truthful_JJ strategy_NN ._.
Notice_NNP that_IN we_PRP did_VBD not_RB need_VB to_TO bound_VBN the_DT error_NN on_IN the_DT allocation_NN problems_NNS without_IN each_DT agent_NN ,_, because_IN the_DT -_: strategyproofness_NN result_NN follows_VBZ from_IN the_DT accuracy_NN of_IN the_DT first-term_JJ in_IN the_DT VCG_NNP payment_NN and_CC is_VBZ independent_JJ of_IN the_DT accuracy_NN of_IN the_DT second-term_NN ._.
However_RB ,_, the_DT accuracy_NN of_IN the_DT solution_NN to_TO the_DT problem_NN without_IN each_DT agent_NN is_VBZ important_JJ to_TO implement_VB a_DT good_JJ approximation_NN to_TO the_DT revenue_NN properties_NNS of_IN the_DT VCG_NNP mechanism_NN ._.
3_LS ._.
THEGENERALIZED_NNP KNAPSACK_NNP PROBLEM_NN In_IN this_DT section_NN ,_, we_PRP design_VBP a_DT fully_RB polynomial_JJ approximation_NN scheme_NN for_IN the_DT generalized_VBN knapsack_NN ,_, which_WDT models_NNS the_DT winnerdetermination_NN problem_NN for_IN the_DT VCG-based_JJ multi-unit_JJ auctions_NNS ._.
We_PRP describe_VBP our_PRP$ results_NNS for_IN the_DT reverse_JJ auction_NN variation_NN ,_, but_CC the_DT formulation_NN is_VBZ completely_RB symmetric_JJ for_IN the_DT forward-auction_NN ._.
In_IN describing_VBG our_PRP$ approximation_NN scheme_NN ,_, we_PRP begin_VBP with_IN a_DT simple_JJ property_NN -LRB-_-LRB- the_DT Anchor_NNP property_NN -RRB-_-RRB- of_IN an_DT optimal_JJ knapsack_NN solution_NN ._.
We_PRP use_VBP this_DT property_NN to_TO develop_VB an_DT O_NN -LRB-_-LRB- n2_NN -RRB-_-RRB- time_NN 2-approximation_NN for_IN the_DT generalized_VBN knapsack_NN ._.
In_IN turn_NN ,_, we_PRP use_VBP this_DT basic_JJ approximation_NN to_TO develop_VB our_PRP$ fully_RB polynomial-time_JJ approximation_NN scheme_NN -LRB-_-LRB- FPTAS_NN -RRB-_-RRB- ._.
One_CD of_IN the_DT major_JJ appeals_NNS of_IN our_PRP$ piecewise_JJ bidding_NN language_NN is_VBZ its_PRP$ compact_JJ representation_NN of_IN the_DT bidder_NN ''_'' s_NNS valuation_NN functions_NNS ._.
We_PRP strive_VBP to_TO preserve_VB this_DT ,_, and_CC present_VB an_DT approximation_NN scheme_NN that_WDT will_MD depend_VB only_RB on_IN the_DT number_NN of_IN bidders_NNS ,_, and_CC not_RB the_DT maximum_NN quantity_NN ,_, M_NN ,_, which_WDT can_MD be_VB very_RB large_JJ in_IN realistic_JJ procurement_NN settings_NNS ._.
The_DT FPTAS_NNP implements_VBZ an_DT -LRB-_-LRB- #_# +_CC -RRB-_-RRB- approximation_NN to_TO the_DT optimal_JJ solution_NN x_NN ,_, in_IN worst-case_JJ time_NN T_NN =_JJ O_NN -LRB-_-LRB- n3_NN /_: -RRB-_-RRB- ,_, where_WRB n_NN is_VBZ the_DT number_NN of_IN bidders_NNS ,_, and_CC where_WRB we_PRP assume_VBP that_IN the_DT piecewise_JJ bid_NN for_IN each_DT bidder_NN has_VBZ O_NN -LRB-_-LRB- #_# -RRB-_-RRB- pieces_NNS ._.
The_DT dependence_NN on_IN the_DT number_NN of_IN pieces_NNS is_VBZ also_RB polynomial_JJ :_: if_IN each_DT bid_NN has_VBZ a_DT maximum_NN 169_CD of_IN c_NN pieces_NNS ,_, then_RB the_DT running_VBG time_NN can_MD be_VB derived_VBN by_IN substituting_VBG nc_NN for_IN each_DT occurrence_NN of_IN n_NN ._.
3_LS ._.
#_# Preliminaries_NNPS Before_IN we_PRP begin_VBP ,_, let_VBP us_PRP recall_VB the_DT classic_JJ #_# /_: #_# knapsack_NN problem_NN :_: we_PRP are_VBP given_VBN a_DT set_NN of_IN n_NN items_NNS ,_, where_WRB the_DT item_NN i_FW has_VBZ value_NN vi_LS and_CC size_NN si_NNS ,_, and_CC a_DT knapsack_NN of_IN capacity_NN M_NN ;_: all_DT sizes_NNS are_VBP integers_NNS ._.
The_DT goal_NN is_VBZ to_TO determine_VB a_DT subset_NN of_IN items_NNS of_IN maximum_NN value_NN with_IN total_JJ size_NN at_IN most_JJS M_NN ._.
Since_IN we_PRP want_VBP to_TO focus_VB on_IN a_DT reverse_JJ auction_NN ,_, the_DT equivalent_JJ knapsack_NN problem_NN will_MD be_VB to_TO choose_VB a_DT set_NN of_IN items_NNS with_IN minimum_JJ value_NN -LRB-_-LRB- i_FW ._.
e_LS ._.
cost_NN -RRB-_-RRB- whose_WP$ size_NN exceeds_VBZ M_NN ._.
The_DT generalized_VBN knapsack_NN problem_NN of_IN interest_NN to_TO us_PRP can_MD be_VB defined_VBN as_IN follows_VBZ :_: Generalized_NNP Knapsack_NNP :_: Instance_NNP :_: A_NNP target_NN M_NN ,_, and_CC a_DT set_NN of_IN n_NN lists_NNS ,_, where_WRB the_DT ith_NN list_NN has_VBZ the_DT form_NN Bi_NN =_JJ -LRB-_-LRB- u1_NN i_FW ,_, p1_NN i_LS -RRB-_-RRB- ,_, ..._: ,_, -LRB-_-LRB- umi1_NN i_FW ,_, pmi1_NN i_LS -RRB-_-RRB- ,_, -LRB-_-LRB- umi_FW i_FW -LRB-_-LRB- i_LS -RRB-_-RRB- ,_, -RRB-_-RRB- ,_, where_WRB uj_NN i_FW are_VBP increasing_VBG with_IN j_NN and_CC pj_NN i_FW are_VBP decreasing_VBG with_IN j_NN ,_, and_CC uj_NN i_FW ,_, pj_NN i_FW ,_, M_NN are_VBP positive_JJ integers_NNS ._.
Problem_NNP :_: Determine_VB a_DT set_NN of_IN integers_NNS xj_VBP i_FW such_JJ that_IN 1_CD ._.
-LRB-_-LRB- One_CD per_IN list_NN -RRB-_-RRB- At_IN most_JJS one_CD xj_NN i_FW is_VBZ non-zero_JJ for_IN any_DT i_FW ,_, 2_CD ._.
-LRB-_-LRB- Membership_NN -RRB-_-RRB- xj_NN i_FW =_JJ #_# implies_VBZ xj_NN i_FW -LSB-_-LRB- uj_NN i_FW ,_, uj_NN +_CC #_# i_LS -RRB-_-RRB- ,_, 3_CD ._.
-LRB-_-LRB- Target_NN -RRB-_-RRB- i_FW j_FW xj_FW i_FW M_NN ,_, and_CC 4_CD ._.
-LRB-_-LRB- Objective_NN -RRB-_-RRB- i_FW j_FW pj_FW i_FW xj_FW i_FW is_VBZ minimized_VBN ._.
This_DT generalized_VBN knapsack_NN formulation_NN is_VBZ a_DT clear_JJ generalization_NN of_IN the_DT classic_JJ #_# /_: #_# knapsack_NN ._.
In_IN the_DT latter_JJ ,_, each_DT list_NN consists_VBZ of_IN a_DT single_JJ point_NN -LRB-_-LRB- si_NN ,_, vi_LS -RRB-_-RRB- ._.
#_# The_DT connection_NN between_IN the_DT generalized_VBN knapsack_NN and_CC our_PRP$ auction_NN problem_NN is_VBZ transparent_JJ ._.
Each_DT list_NN encodes_VBZ a_DT bid_NN ,_, representing_VBG multiple_JJ mutually_RB exclusive_JJ quantity_NN intervals_NNS ,_, and_CC one_PRP can_MD choose_VB any_DT quantity_NN in_IN an_DT interval_NN ,_, but_CC at_IN most_JJS one_CD interval_NN can_MD be_VB selected_VBN ._.
Choosing_VBG interval_JJ -LSB-_-LRB- uj_NN i_FW ,_, uj_NN +_CC #_# i_LS -RRB-_-RRB- has_VBZ cost_VBN pj_NN i_FW per_FW unit_NN ._.
The_DT goal_NN is_VBZ to_TO procure_VB at_IN least_JJS M_NN units_NNS of_IN the_DT good_JJ at_IN minimum_JJ possible_JJ cost_NN ._.
The_DT problem_NN has_VBZ some_DT flavor_NN of_IN the_DT continuous_JJ knapsack_NN problem_NN ._.
However_RB ,_, there_EX are_VBP two_CD major_JJ differences_NNS that_WDT make_VBP our_PRP$ problem_NN significantly_RB more_RBR difficult_JJ :_: -LRB-_-LRB- #_# -RRB-_-RRB- intervals_NNS have_VBP boundaries_NNS ,_, and_CC so_RB to_TO choose_VB interval_NN -LSB-_-LRB- uj_NN i_FW ,_, uj_NN +_CC #_# i_LS -RRB-_-RRB- requires_VBZ that_IN at_IN least_JJS uj_NN i_FW and_CC at_IN most_JJS uj_NN +_CC #_# i_FW units_NNS must_MD be_VB taken_VBN ;_: -LRB-_-LRB- #_# -RRB-_-RRB- unlike_IN the_DT classic_JJ knapsack_NN ,_, we_PRP can_MD not_RB sort_VB the_DT items_NNS -LRB-_-LRB- bids_NNS -RRB-_-RRB- by_IN value_NN /_: size_NN ,_, since_IN different_JJ intervals_NNS in_IN one_CD list_NN have_VBP different_JJ unit_NN costs_NNS ._.
3_LS ._.
#_# A_DT 2-Approximation_NN Scheme_NN We_PRP begin_VBP with_IN a_DT definition_NN ._.
Given_VBN an_DT instance_NN of_IN the_DT generalized_VBN knapsack_NN ,_, we_PRP call_VBP each_DT tuple_NN tj_NN i_FW =_JJ -LRB-_-LRB- uj_NN i_FW ,_, pj_NN i_LS -RRB-_-RRB- an_DT anchor_NN ._.
Recall_VB that_IN these_DT tuples_NNS represent_VBP the_DT breakpoints_NNS in_IN the_DT piecewise_JJ constant_JJ curve_NN bids_NNS ._.
We_PRP say_VBP that_IN the_DT size_NN of_IN an_DT anchor_NN tj_NN i_FW is_VBZ uj_NN i_FW ,_, 8_CD In_IN fact_NN ,_, because_IN of_IN the_DT one_CD per_IN list_NN constraint_NN ,_, the_DT generalized_VBN problem_NN is_VBZ closer_RBR in_IN spirit_NN to_TO the_DT multiple_JJ choice_NN knapsack_NN problem_NN -LSB-_-LRB- #_# -RSB-_-RRB- ,_, where_WRB the_DT underling_NN set_NN of_IN items_NNS is_VBZ partitioned_VBN into_IN disjoint_NN subsets_NNS U1_NN ,_, U2_NN ,_, ..._: ,_, Uk_NNP ,_, and_CC one_PRP can_MD choose_VB at_IN most_JJS one_CD item_NN from_IN each_DT subset_NN ._.
PTAS_NNS do_VBP exist_VB for_IN this_DT problem_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- ,_, and_CC indeed_RB ,_, one_PRP can_MD convert_VB our_PRP$ problem_NN into_IN a_DT huge_JJ instance_NN of_IN the_DT multiple_JJ choice_NN knapsack_NN problem_NN ,_, by_IN creating_VBG one_CD group_NN for_IN each_DT list_NN ;_: put_VB a_DT -LRB-_-LRB- quantity_NN ,_, price_NN -RRB-_-RRB- point_NN tuple_NN -LRB-_-LRB- x_NN ,_, p_NN -RRB-_-RRB- for_IN each_DT possible_JJ quantity_NN for_IN a_DT bidder_NN into_IN his_PRP$ group_NN -LRB-_-LRB- subset_NN -RRB-_-RRB- ._.
However_RB ,_, this_DT conversion_NN explodes_VBZ the_DT problem_NN size_NN ,_, making_VBG it_PRP infeasible_JJ for_IN all_DT but_CC the_DT most_RBS trivial_JJ instances_NNS ._.
the_DT minimum_JJ number_NN of_IN units_NNS available_JJ at_IN this_DT anchor_NN ''_'' s_NNS price_NN pj_NN i_FW ._.
The_DT cost_NN of_IN the_DT anchor_NN tj_NN i_FW is_VBZ defined_VBN to_TO be_VB the_DT minimum_JJ total_JJ price_NN associated_VBN with_IN this_DT tuple_NN ,_, namely_RB ,_, cost_NN -LRB-_-LRB- tj_NN i_LS -RRB-_-RRB- =_JJ pj_NN i_FW uj_FW i_FW if_IN j_NN <_JJR mi_CD ,_, and_CC cost_NN -LRB-_-LRB- tmi_NN i_LS -RRB-_-RRB- =_JJ pmi1_NN i_FW umi_FW i_FW ._.
In_IN a_DT feasible_JJ solution_NN -LCB-_-LRB- x1_NN ,_, x2_NN ,_, ..._: ,_, xn_NN -RCB-_-RRB- of_IN the_DT generalized_VBN knapsack_NN ,_, we_PRP say_VBP that_IN an_DT element_NN xi_NN =_JJ #_# is_VBZ an_DT anchor_NN if_IN xi_NN =_JJ uj_NN i_FW ,_, for_IN some_DT anchor_NN uj_NN i_FW ._.
Otherwise_RB ,_, we_PRP say_VBP that_IN xi_NN is_VBZ midrange_JJ ._.
We_PRP observe_VBP that_IN an_DT optimal_JJ knapsack_NN solution_NN can_MD always_RB be_VB constructed_VBN so_RB that_IN at_IN most_JJS one_CD solution_NN element_NN is_VBZ midrange_JJ ._.
If_IN there_EX are_VBP two_CD midrange_JJ elements_NNS x_CC and_CC x_NN ,_, for_IN bids_NNS from_IN two_CD different_JJ agents_NNS ,_, with_IN x_CC x_NN ,_, then_RB we_PRP can_MD increment_NN x_NN and_CC decrement_NN x_NN ,_, until_IN one_CD of_IN them_PRP becomes_VBZ an_DT anchor_NN ._.
See_VB Figure_NNP #_# for_IN an_DT example_NN ._.
LEMMA_NNP #_# ._.
-LSB-_-LRB- Anchor_NNP Property_NNP -RSB-_-RRB- There_EX exists_VBZ an_DT optimal_JJ solution_NN of_IN the_DT generalized_VBN knapsack_NN problem_NN with_IN at_IN most_JJS one_CD midrange_JJ element_NN ._.
All_DT other_JJ elements_NNS are_VBP anchors_NNS ._.
1_CD midrange_JJ bid_NN 5_CD 20_CD 15_CD 10_CD 25_CD 5_CD ##_NN ########_CD ##_CD 3_CD 2_CD 1_CD Price_NN Quantity_NN 5_CD 20_CD 15_CD 10_CD 25_CD 5_CD ##_NN ########_CD ##_CD 3_CD 2_CD 1_CD Price_NN Quantity_NN -LRB-_-LRB- i_LS -RRB-_-RRB- Optimal_JJ solution_NN with_IN 2_CD midrange_JJ bids_NNS -LRB-_-LRB- ii_LS -RRB-_-RRB- Optimal_JJ soltution_NN with_IN Figure_NNP #_# :_: -LRB-_-LRB- i_LS -RRB-_-RRB- An_DT optimal_JJ solution_NN with_IN more_JJR than_IN one_CD bid_NN not_RB anchored_VBN -LRB-_-LRB- #_# ,_, #_# -RRB-_-RRB- ;_: -LRB-_-LRB- ii_LS -RRB-_-RRB- an_DT optimal_JJ solution_NN with_IN only_RB one_CD bid_NN -LRB-_-LRB- #_# -RRB-_-RRB- not_RB anchored_VBN ._.
We_PRP use_VBP the_DT anchor_NN property_NN to_TO first_JJ obtain_VB a_DT polynomial-time_JJ 2-approximation_NN scheme_NN ._.
We_PRP do_VBP this_DT by_IN solving_VBG several_JJ instances_NNS of_IN a_DT restricted_JJ generalized-knapsack_NN problem_NN ,_, which_WDT we_PRP call_VBP iKnapsack_NN ,_, where_WRB one_CD element_NN is_VBZ forced_VBN to_TO be_VB midrange_JJ for_IN a_DT particular_JJ interval_NN ._.
Specifically_RB ,_, suppose_VBP element_NN x_NN for_IN agent_NN l_NN is_VBZ forced_VBN to_TO lie_VB in_IN its_PRP$ jth_NN range_NN ,_, -LSB-_-LRB- uj_NN ,_, uj_NN +_CC #_# -RRB-_-RRB- ,_, while_IN all_DT other_JJ elements_NNS ,_, x1_NN ,_, ..._: ,_, xl1_NN ,_, xl_NN +_CC #_# ,_, xn_NN ,_, are_VBP required_VBN to_TO be_VB anchors_NNS ,_, or_CC zero_CD ._.
This_DT corresponds_VBZ to_TO the_DT restricted_JJ problem_NN iKnapsack_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ,_, in_IN which_WDT the_DT goal_NN is_VBZ to_TO obtain_VB at_IN least_JJS M_NN uj_NN units_NNS with_IN minimum_JJ cost_NN ._.
Element_NN x_NN is_VBZ assumed_VBN to_TO have_VB already_RB contributed_VBN uj_NN units_NNS ._.
The_DT value_NN of_IN a_DT solution_NN to_TO iKnapsack_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- represents_VBZ the_DT minimal_JJ additional_JJ cost_NN to_TO purchase_VB the_DT rest_NN of_IN the_DT units_NNS ._.
We_PRP create_VBP n_NN #_# groups_NNS of_IN potential_JJ anchors_NNS ,_, where_WRB ith_NN group_NN contains_VBZ all_PDT the_DT anchors_NNS of_IN the_DT list_NN i_FW in_IN the_DT generalized_VBN knapsack_NN ._.
The_DT group_NN for_IN agent_NN l_NN contains_VBZ a_DT single_JJ element_NN that_WDT represents_VBZ the_DT interval_NN -LSB-_-LRB- #_# ,_, uj_NN +_CC #_# uj_NN -RRB-_-RRB- ,_, and_CC the_DT associated_VBN unit-price_NN pj_NN ._.
This_DT interval_NN represents_VBZ the_DT excess_JJ number_NN of_IN units_NNS that_WDT can_MD be_VB taken_VBN from_IN agent_NN l_NN in_IN iKnapsack_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ,_, in_IN addition_NN to_TO uj_NN ,_, which_WDT has_VBZ already_RB been_VBN committed_VBN ._.
In_IN any_DT other_JJ group_NN ,_, we_PRP can_MD choose_VB at_IN most_JJS one_CD anchor_NN ._.
The_DT following_VBG pseudo-code_NN describes_VBZ our_PRP$ algorithm_NN for_IN this_DT restriction_NN of_IN the_DT generalized_VBN knapsack_NN problem_NN ._.
U_NNP is_VBZ the_DT union_NN of_IN all_PDT the_DT tuples_NNS in_IN n_NN groups_NNS ,_, including_VBG a_DT tuple_NN t_NN for_IN agent_NN l_NN ._.
The_DT size_NN of_IN this_DT special_JJ tuple_NN is_VBZ defined_VBN as_IN uj_NN +_CC #_# uj_NN ,_, and_CC the_DT cost_NN is_VBZ defined_VBN as_IN pj_NN l_NN -LRB-_-LRB- uj_NN +_CC #_# uj_NN -RRB-_-RRB- ._.
R_NN is_VBZ the_DT number_NN of_IN units_NNS that_WDT remain_VBP to_TO be_VB acquired_VBN ._.
S_NN is_VBZ the_DT set_NN of_IN tuples_NNS accepted_VBN in_IN the_DT current_JJ tentative_JJ 170_CD solution_NN ._.
Best_NN is_VBZ the_DT best_JJS solution_NN found_VBN so_RB far_RB ._.
Variable_JJ Skip_VB is_VBZ only_RB used_VBN in_IN the_DT proof_NN of_IN correctness_NN ._.
Algorithm_NNP Greedy_NNP -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- 1_CD ._.
Sort_VB all_DT tuples_NNS of_IN U_NNP in_IN the_DT ascending_VBG order_NN of_IN unit_NN price_NN ;_: in_IN case_NN of_IN ties_NNS ,_, sort_NN in_IN ascending_VBG order_NN of_IN unit_NN quantities_NNS ._.
2_LS ._.
Set_VB mark_NN -LRB-_-LRB- i_LS -RRB-_-RRB- =_JJ #_# ,_, for_IN all_DT lists_NNS i_FW =_JJ #_# ,_, #_# ,_, ..._: ,_, n_NN ._.
Initialize_VB R_NN =_JJ M_NN uj_NN ,_, S_NN =_JJ Best_NN =_JJ Skip_VB =_JJ ._.
3_LS ._.
Scan_VB the_DT tuples_NNS in_IN U_NNP in_IN the_DT sorted_VBN order_NN ._.
Suppose_VB the_DT next_JJ tuple_NN is_VBZ tk_NN i_FW ,_, i_FW ._.
e_LS ._.
the_DT kth_NN anchor_NN from_IN agent_NN i_FW ._.
If_IN mark_NN -LRB-_-LRB- i_LS -RRB-_-RRB- =_JJ #_# ,_, ignore_VB this_DT tuple_NN ;_: otherwise_RB do_VBP the_DT following_VBG steps_NNS :_: if_IN size_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- >_JJR R_NN and_CC i_FW =_JJ return_NN min_NN -LCB-_-LRB- cost_NN -LRB-_-LRB- S_NN -RRB-_-RRB- +_CC Rpj_NN ,_, cost_NN -LRB-_-LRB- Best_NN -RRB-_-RRB- -RCB-_-RRB- ;_: if_IN size_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- >_JJR R_NN and_CC cost_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- cost_NN -LRB-_-LRB- S_NN -RRB-_-RRB- return_NN min_NN -LCB-_-LRB- cost_NN -LRB-_-LRB- S_NN -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- ,_, cost_NN -LRB-_-LRB- Best_NN -RRB-_-RRB- -RCB-_-RRB- ;_: if_IN size_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- >_JJR R_NN and_CC cost_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- >_JJR cost_NN -LRB-_-LRB- S_NN -RRB-_-RRB- Add_VBP tk_NN i_FW to_TO Skip_VB ;_: Set_VB Best_JJS to_TO S_NN -LCB-_-LRB- tk_NN i_FW -RCB-_-RRB- if_IN cost_NN improves_VBZ ;_: if_IN size_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- R_NN then_RB add_VB tk_NN i_FW to_TO S_NN ;_: mark_NN -LRB-_-LRB- i_LS -RRB-_-RRB- =_JJ #_# ;_: subtract_VB size_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- from_IN R_NN ._.
The_DT approximation_NN algorithm_NN is_VBZ very_RB similar_JJ to_TO the_DT approximation_NN algorithm_NN for_IN knapsack_NN ._.
Since_IN we_PRP wish_VBP to_TO minimize_VB the_DT total_JJ cost_NN ,_, we_PRP consider_VBP the_DT tuples_NNS in_IN order_NN of_IN increasing_VBG per_IN unit_NN cost_NN ._.
If_IN the_DT size_NN of_IN tuple_NN tk_NN i_FW is_VBZ smaller_JJR than_IN R_NN ,_, then_RB we_PRP add_VBP it_PRP to_TO S_NN ,_, update_VBP R_NN ,_, and_CC delete_VB from_IN U_NNP all_PDT the_DT tuples_NNS that_WDT belong_VBP to_TO the_DT same_JJ group_NN as_IN tk_NN i_FW ._.
If_IN size_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- is_VBZ greater_JJR than_IN R_NN ,_, then_RB S_NN along_IN with_IN tk_NN i_FW forms_VBZ a_DT feasible_JJ solution_NN ._.
However_RB ,_, this_DT solution_NN can_MD be_VB far_RB from_IN optimal_JJ if_IN the_DT size_NN of_IN tk_NN i_FW is_VBZ much_RB larger_JJR than_IN R_NN ._.
If_IN total_JJ cost_NN of_IN S_NN and_CC tk_NN i_FW is_VBZ smaller_JJR than_IN the_DT current_JJ best_JJS solution_NN ,_, we_PRP update_VBP Best_JJS ._.
One_CD exception_NN to_TO this_DT rule_NN is_VBZ the_DT tuple_NN t_NN ._.
Since_IN this_DT tuple_NN can_MD be_VB taken_VBN fractionally_RB ,_, we_PRP update_VBP Best_JJS if_IN the_DT sum_NN of_IN S_NN ''_'' s_NNS cost_NN and_CC fractional_JJ cost_NN of_IN t_NN is_VBZ an_DT improvement_NN ._.
The_DT algorithm_NN terminates_VBZ in_IN either_DT of_IN the_DT first_JJ two_CD cases_NNS ,_, or_CC when_WRB all_DT tuples_NNS are_VBP scanned_VBN ._.
In_IN particular_JJ ,_, it_PRP terminates_VBZ whenever_WRB we_PRP find_VBP a_DT tk_NN i_FW such_JJ that_IN size_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- is_VBZ greater_JJR than_IN R_NN but_CC cost_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- is_VBZ less_JJR than_IN cost_NN -LRB-_-LRB- S_NN -RRB-_-RRB- ,_, or_CC when_WRB we_PRP reach_VBP the_DT tuple_NN representing_VBG agent_NN l_NN and_CC it_PRP gives_VBZ a_DT feasible_JJ solution_NN ._.
LEMMA_NNP #_# ._.
Suppose_VB A_DT is_VBZ an_DT optimal_JJ solution_NN of_IN the_DT generalized_VBN knapsack_NN ,_, and_CC suppose_VB that_DT element_NN -LRB-_-LRB- l_NN ,_, j_NN -RRB-_-RRB- is_VBZ midrange_JJ in_IN the_DT optimal_JJ solution_NN ._.
Then_RB ,_, the_DT cost_NN V_NN -LRB-_-LRB- l_NN ,_, j_NN -RRB-_-RRB- ,_, returned_VBN by_IN Greedy_NNP -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ,_, satisfies_VBZ :_: V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- tj_NN -RRB-_-RRB- 2cost_CD -LRB-_-LRB- A_NN -RRB-_-RRB- PROOF_NN ._.
Let_VB V_NNP -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- be_VB the_DT value_NN returned_VBN by_IN Greedy_NNP -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- and_CC let_VB V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- be_VB an_DT optimal_JJ solution_NN for_IN iKnapsack_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ._.
Consider_VB the_DT set_NN Skip_VB at_IN the_DT termination_NN of_IN Greedy_NNP -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ._.
There_EX are_VBP two_CD cases_NNS to_TO consider_VB :_: either_CC some_DT tuple_NN t_NN Skip_VB is_VBZ also_RB in_IN V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ,_, or_CC no_DT tuple_NN in_IN Skip_VB is_VBZ in_IN V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ._.
In_IN the_DT first_JJ case_NN ,_, let_VB St_NNP be_VB the_DT tentative_JJ solution_NN S_NN at_IN the_DT time_NN t_NN was_VBD added_VBN to_TO Skip_VB ._.
Because_IN t_NN Skip_VB then_RB size_NN -LRB-_-LRB- t_NN -RRB-_-RRB- >_JJR R_NN ,_, and_CC St_NNP together_RB with_IN t_NN forms_VBZ a_DT feasible_JJ solution_NN ,_, and_CC we_PRP have_VBP :_: V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- cost_NN -LRB-_-LRB- Best_NN -RRB-_-RRB- cost_NN -LRB-_-LRB- St_NNP -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- t_NN -RRB-_-RRB- ._.
Again_RB ,_, because_IN t_NN Skip_VB then_RB cost_NN -LRB-_-LRB- t_NN -RRB-_-RRB- >_JJR cost_NN -LRB-_-LRB- St_NNP -RRB-_-RRB- ,_, and_CC we_PRP have_VBP V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- <_JJR 2cost_CD -LRB-_-LRB- t_NN -RRB-_-RRB- ._.
On_IN the_DT other_JJ hand_NN ,_, since_IN t_NN is_VBZ included_VBN in_IN V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ,_, we_PRP have_VBP V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- cost_NN -LRB-_-LRB- t_NN -RRB-_-RRB- ._.
These_DT two_CD inequalities_NNS imply_VBP the_DT desired_VBN bound_VBN :_: V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- <_JJR 2V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ._.
In_IN the_DT second_JJ case_NN ,_, imagine_VBP a_DT modified_VBN instance_NN of_IN iKnapsack_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ,_, which_WDT excludes_VBZ all_PDT the_DT tuples_NNS of_IN the_DT set_NN Skip_VB ._.
Since_IN none_NN of_IN these_DT tuples_NNS were_VBD included_VBN in_IN V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ,_, the_DT optimal_JJ solution_NN for_IN the_DT modified_VBN problem_NN should_MD be_VB the_DT same_JJ as_IN the_DT one_CD for_IN the_DT original_JJ ._.
Suppose_VB our_PRP$ approximation_NN algorithm_NN returns_VBZ the_DT value_NN V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- for_IN this_DT modified_VBN instance_NN ._.
Let_VB t_NN be_VB the_DT last_JJ tuple_NN considered_VBN by_IN the_DT approximation_NN algorithm_NN before_IN termination_NN on_IN the_DT modified_VBN instance_NN ,_, and_CC let_VB St_NNP be_VB the_DT corresponding_JJ tentative_JJ solution_NN set_VBN in_IN that_DT step_NN ._.
Since_IN we_PRP consider_VBP tuples_NNS in_IN order_NN of_IN increasing_VBG per_IN unit_NN price_NN ,_, and_CC none_NN of_IN the_DT tuples_NNS are_VBP going_VBG to_TO be_VB placed_VBN in_IN the_DT set_NN Skip_VB ,_, we_PRP must_MD have_VB cost_NN -LRB-_-LRB- St_NNP -RRB-_-RRB- <_JJR V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- because_IN St_NNP is_VBZ the_DT optimal_JJ way_NN to_TO obtain_VB size_NN -LRB-_-LRB- St_NNP -RRB-_-RRB- ._.
We_PRP also_RB have_VBP cost_NN -LRB-_-LRB- t_NN -RRB-_-RRB- cost_NN -LRB-_-LRB- St_NNP -RRB-_-RRB- ,_, and_CC the_DT following_VBG inequalities_NNS :_: V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- cost_NN -LRB-_-LRB- St_NNP -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- t_NN -RRB-_-RRB- <_JJR 2V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- The_DT inequality_NN V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- follows_VBZ from_IN the_DT fact_NN that_IN a_DT tuple_NN in_IN the_DT Skip_VB list_NN can_MD only_RB affect_VB the_DT Best_JJS but_CC not_RB the_DT tentative_JJ solutions_NNS ._.
Therefore_RB ,_, dropping_VBG the_DT tuples_NNS in_IN the_DT set_NN Skip_VB can_MD only_RB make_VB the_DT solution_NN worse_JJR ._.
The_DT above_JJ argument_NN has_VBZ shown_VBN that_IN the_DT value_NN returned_VBN by_IN Greedy_NNP -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- is_VBZ within_IN a_DT factor_NN #_# of_IN the_DT optimal_JJ solution_NN for_IN iKnapsack_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ._.
We_PRP now_RB show_VBP that_IN the_DT value_NN V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- plus_CC cost_NN -LRB-_-LRB- tj_NN -RRB-_-RRB- is_VBZ a_DT 2-approximation_NN of_IN the_DT original_JJ generalized_VBN knapsack_NN problem_NN ._.
Let_VB A_DT be_VB an_DT optimal_JJ solution_NN of_IN the_DT generalized_VBN knapsack_NN ,_, and_CC suppose_VB that_DT element_NN xj_NN is_VBZ midrange_JJ ._.
Let_VB x_NN to_TO be_VB set_VBN of_IN the_DT remaining_VBG elements_NNS ,_, either_CC zero_CD or_CC anchors_NNS ,_, in_IN this_DT solution_NN ._.
Furthermore_RB ,_, define_VB x_NN =_JJ xj_NN uj_NN ._.
Thus_RB ,_, cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- =_JJ cost_NN -LRB-_-LRB- xl_NN -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- tj_NN l_NN -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- xl_NN -RRB-_-RRB- It_PRP is_VBZ easy_JJ to_TO see_VB that_DT -LRB-_-LRB- x_NN ,_, x_NN -RRB-_-RRB- is_VBZ an_DT optimal_JJ solution_NN for_IN iKnapsack_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ._.
Since_IN V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- is_VBZ a_DT 2-approximation_NN for_IN this_DT optimal_JJ solution_NN ,_, we_PRP have_VBP the_DT following_VBG inequalities_NNS :_: V_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- tj_NN -RRB-_-RRB- cost_NN -LRB-_-LRB- tj_NN -RRB-_-RRB- +_CC #_# -LRB-_-LRB- cost_NN -LRB-_-LRB- x_NN -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- x_NN -RRB-_-RRB- -RRB-_-RRB- #_# -LRB-_-LRB- cost_NN -LRB-_-LRB- x_NN -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- tj_NN -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- x_NN -RRB-_-RRB- -RRB-_-RRB- 2cost_CD -LRB-_-LRB- A_NN -RRB-_-RRB- This_DT completes_VBZ the_DT proof_NN of_IN Lemma_NNP #_# ._.
It_PRP is_VBZ easy_JJ to_TO see_VB that_IN ,_, after_IN an_DT initial_JJ sorting_NN of_IN the_DT tuples_NNS in_IN U_NNP ,_, the_DT algorithm_NN Greedy_NNP -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- takes_VBZ O_NN -LRB-_-LRB- n_NN -RRB-_-RRB- time_NN ._.
We_PRP have_VBP our_PRP$ first_JJ polynomial_JJ approximation_NN algorithm_NN ._.
THEOREM_NNP #_# ._.
A_DT 2-approximation_NN of_IN the_DT generalized_VBN knapsack_NN problem_NN can_MD be_VB found_VBN in_IN time_NN O_NN -LRB-_-LRB- n2_NN -RRB-_-RRB- ,_, where_WRB n_NN is_VBZ number_NN of_IN item_NN lists_NNS -LRB-_-LRB- each_DT of_IN constant_JJ length_NN -RRB-_-RRB- ._.
PROOF_NN ._.
We_PRP run_VBP the_DT algorithm_NN Greedy_NNP -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- once_RB for_IN each_DT tuple_NN -LRB-_-LRB- l_NN ,_, j_NN -RRB-_-RRB- as_IN a_DT candidate_NN for_IN midrange_NN ._.
There_EX are_VBP O_NN -LRB-_-LRB- n_NN -RRB-_-RRB- tuples_NNS ,_, and_CC it_PRP suffices_VBZ to_TO sort_VB them_PRP once_RB ,_, the_DT total_JJ cost_NN of_IN the_DT algorithm_NN is_VBZ O_NN -LRB-_-LRB- n2_NN -RRB-_-RRB- ._.
By_IN Lemma_NN #_# ,_, there_EX is_VBZ an_DT optimal_JJ solution_NN with_IN at_IN most_JJS one_CD midrange_JJ element_NN ,_, so_RB our_PRP$ algorithm_NN will_MD find_VB a_DT 2-approximation_NN ,_, as_IN claimed_VBN ._.
The_DT dependence_NN on_IN the_DT number_NN of_IN pieces_NNS is_VBZ also_RB polynomial_JJ :_: if_IN each_DT bid_NN has_VBZ a_DT maximum_NN of_IN c_NN pieces_NNS ,_, then_RB the_DT running_VBG time_NN is_VBZ O_NN -LRB-_-LRB- -LRB-_-LRB- nc_NN -RRB-_-RRB- #_# -RRB-_-RRB- ._.
171_CD 3_CD ._.
#_# An_DT Approximation_NN Scheme_NN We_PRP now_RB use_VBP the_DT 2-approximation_JJ algorithm_NN presented_VBN in_IN the_DT preceding_VBG section_NN to_TO develop_VB a_DT fully_RB polynomial_JJ approximation_NN -LRB-_-LRB- FPTAS_NN -RRB-_-RRB- for_IN the_DT generalized_VBN knapsack_NN problem_NN ._.
The_DT high_JJ level_NN idea_NN is_VBZ fairly_RB standard_JJ ,_, but_CC the_DT details_NNS require_VBP technical_JJ care_NN ._.
We_PRP use_VBP a_DT dynamic_JJ programming_NN algorithm_NN to_TO solve_VB iKnapsack_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- for_IN each_DT possible_JJ midrange_JJ element_NN ,_, with_IN the_DT 2-approximation_JJ algorithm_NN providing_VBG an_DT upper_JJ bound_VBN on_IN the_DT value_NN of_IN the_DT solution_NN and_CC enabling_VBG the_DT use_NN of_IN scaling_VBG on_IN the_DT cost_NN dimension_NN of_IN the_DT dynamic_JJ programming_NN -LRB-_-LRB- DP_NN -RRB-_-RRB- table_NN ._.
Consider_VB ,_, for_IN example_NN ,_, the_DT case_NN that_IN the_DT midrange_JJ element_NN is_VBZ x_CC ,_, which_WDT falls_VBZ in_IN the_DT range_NN -LSB-_-LRB- uj_NN ,_, uj_NN +_CC #_# -RRB-_-RRB- ._.
In_IN our_PRP$ FPTAS_NNP ,_, rather_RB than_IN using_VBG a_DT greedy_JJ approximation_NN algorithm_NN to_TO solve_VB iKnapsack_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ,_, we_PRP construct_VBP a_DT dynamic_JJ programming_NN table_NN to_TO compute_VB the_DT minimum_JJ cost_NN at_IN which_WDT at_IN least_JJS M_NN uj_NN +_CC #_# units_NNS can_MD be_VB obtained_VBN using_VBG the_DT remaining_VBG n_NN #_# lists_NNS in_IN the_DT generalized_VBN knapsack_NN ._.
Suppose_VB G_NN -LSB-_-LRB- i_FW ,_, r_NN -RSB-_-RRB- denotes_VBZ the_DT maximum_JJ number_NN of_IN units_NNS that_WDT can_MD be_VB obtained_VBN at_IN cost_NN at_IN most_JJS r_NN using_VBG only_RB the_DT first_JJ i_FW lists_NNS in_IN the_DT generalized_VBN knapsack_NN ._.
Then_RB ,_, the_DT following_VBG recurrence_NN relation_NN describes_VBZ how_WRB to_TO construct_VB the_DT dynamic_JJ programming_NN table_NN :_: G_NN -LSB-_-LRB- #_# ,_, r_NN -RSB-_-RRB- =_JJ #_# G_NN -LSB-_-LRB- i_FW ,_, r_NN -RSB-_-RRB- =_JJ max_NN G_NN -LSB-_-LRB- i_FW #_# ,_, r_NN -RSB-_-RRB- max_NN j_NN -LRB-_-LRB- i_FW ,_, r_NN -RRB-_-RRB- -LCB-_-LRB- G_NN -LSB-_-LRB- i_FW #_# ,_, r_NN cost_NN -LRB-_-LRB- tj_NN i_LS -RRB-_-RRB- -RSB-_-RRB- +_CC uj_NN i_FW -RCB-_-RRB- where_WRB -LRB-_-LRB- i_FW ,_, r_NN -RRB-_-RRB- =_JJ -LCB-_-LRB- j_NN :_: #_# j_FW mi_FW ,_, cost_NN -LRB-_-LRB- tj_NN i_LS -RRB-_-RRB- r_NN -RCB-_-RRB- ,_, is_VBZ the_DT set_NN of_IN anchors_NNS for_IN agent_NN i_FW ._.
As_IN convention_NN ,_, agent_NN i_FW will_MD index_NN the_DT row_NN ,_, and_CC cost_NN r_NN will_MD index_NN the_DT column_NN ._.
This_DT dynamic_JJ programming_NN algorithm_NN is_VBZ only_RB pseudo-polynomial_JJ ,_, since_IN the_DT number_NN of_IN column_NN in_IN the_DT dynamic_JJ programming_NN table_NN depends_VBZ upon_IN the_DT total_JJ cost_NN ._.
However_RB ,_, we_PRP can_MD convert_VB it_PRP into_IN a_DT FPTAS_NN by_IN scaling_VBG the_DT cost_NN dimension_NN ._.
Let_VB A_DT denote_VBP the_DT 2-approximation_NN to_TO the_DT generalized_VBN knapsack_NN problem_NN ,_, with_IN total_JJ cost_NN ,_, cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- ._.
Let_VB denote_VB the_DT desired_VBN approximation_NN factor_NN ._.
We_PRP compute_VBP the_DT scaled_VBN cost_NN of_IN a_DT tuple_NN tj_NN i_FW ,_, denoted_VBN scost_NN -LRB-_-LRB- tj_NN i_LS -RRB-_-RRB- ,_, as_IN scost_NN -LRB-_-LRB- tj_NN i_LS -RRB-_-RRB- =_JJ n_NN cost_NN -LRB-_-LRB- tj_NN i_LS -RRB-_-RRB- cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- -LRB-_-LRB- #_# -RRB-_-RRB- This_DT scaling_NN improves_VBZ the_DT running_VBG time_NN of_IN the_DT algorithm_NN because_IN the_DT number_NN of_IN columns_NNS in_IN the_DT modified_VBN table_NN is_VBZ at_IN most_JJS n_NN ,_, and_CC independent_JJ of_IN the_DT total_JJ cost_NN ._.
However_RB ,_, the_DT computed_JJ solution_NN might_MD not_RB be_VB an_DT optimal_JJ solution_NN for_IN the_DT original_JJ problem_NN ._.
We_PRP show_VBP that_IN the_DT error_NN introduced_VBN is_VBZ within_IN a_DT factor_NN of_IN of_IN the_DT optimal_JJ solution_NN ._.
As_IN a_DT prelude_NN to_TO our_PRP$ approximation_NN guarantee_NN ,_, we_PRP first_RB show_VBP that_IN if_IN two_CD different_JJ solutions_NNS to_TO the_DT iKnapsack_NN problem_NN have_VBP equal_JJ scaled_VBN cost_NN ,_, then_RB their_PRP$ original_JJ -LRB-_-LRB- unscaled_JJ -RRB-_-RRB- costs_NNS can_MD not_RB differ_VB by_IN more_JJR than_IN cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- ._.
LEMMA_NNP #_# ._.
Let_VB x_NN and_CC y_NN be_VB two_CD distinct_JJ feasible_JJ solutions_NNS of_IN iKnapsack_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ,_, excluding_VBG their_PRP$ midrange_JJ elements_NNS ._.
If_IN x_NN and_CC y_NN have_VBP equal_JJ scaled_VBN costs_NNS ,_, then_RB their_PRP$ unscaled_JJ costs_NNS can_MD not_RB differ_VB by_IN more_JJR than_IN cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- ._.
PROOF_NN ._.
Let_VB Ix_NNP and_CC Iy_NNP ,_, respectively_RB ,_, denote_VBP the_DT indicator_NN functions_NNS associated_VBN with_IN the_DT anchor_NN vectors_NNS x_CC and_CC y-there_NN is_VBZ #_# in_IN position_NN Ix_NN -LSB-_-LRB- i_FW ,_, k_NN -RSB-_-RRB- if_IN the_DT xk_NN i_FW >_JJR #_# ._.
Since_IN x_NN and_CC y_NN has_VBZ equal_JJ scaled_VBN cost_NN ,_, i_FW =_JJ k_NN scost_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- Ix_NN -LSB-_-LRB- i_FW ,_, k_NN -RSB-_-RRB- =_JJ i_FW =_JJ k_NN scost_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- Iy_NN -LSB-_-LRB- i_FW ,_, k_NN -RSB-_-RRB- -LRB-_-LRB- #_# -RRB-_-RRB- However_RB ,_, by_IN -LRB-_-LRB- #_# -RRB-_-RRB- ,_, the_DT scaled_VBN costs_NNS satisfy_VBP the_DT following_VBG inequalities_NNS :_: -LRB-_-LRB- scost_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- #_# -RRB-_-RRB- cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- n_NN cost_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- scost_NN -LRB-_-LRB- tk_NN i_LS -RRB-_-RRB- cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- n_NN -LRB-_-LRB- #_# -RRB-_-RRB- Substituting_VBG the_DT upper-bound_JJ on_IN scaled_VBN cost_NN from_IN -LRB-_-LRB- #_# -RRB-_-RRB- for_IN cost_NN -LRB-_-LRB- x_NN -RRB-_-RRB- ,_, the_DT lower-bound_JJ on_IN scaled_VBN cost_NN from_IN -LRB-_-LRB- #_# -RRB-_-RRB- for_IN cost_NN -LRB-_-LRB- y_NN -RRB-_-RRB- ,_, and_CC using_VBG equality_NN -LRB-_-LRB- #_# -RRB-_-RRB- to_TO simplify_VB ,_, we_PRP have_VBP :_: cost_NN -LRB-_-LRB- x_NN -RRB-_-RRB- cost_NN -LRB-_-LRB- y_NN -RRB-_-RRB- cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- n_NN i_FW =_JJ k_NN Iy_NN -LSB-_-LRB- i_FW ,_, k_NN -RSB-_-RRB- cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- ,_, The_DT last_JJ inequality_NN uses_VBZ the_DT fact_NN that_IN at_IN most_JJS n_NN components_NNS of_IN an_DT indicator_NN vector_NN are_VBP non-zero_JJ ;_: that_DT is_VBZ ,_, any_DT feasible_JJ solution_NN contains_VBZ at_IN most_JJS n_NN tuples_NNS ._.
Finally_RB ,_, given_VBN the_DT dynamic_JJ programming_NN table_NN for_IN iKnapsack_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ,_, we_PRP consider_VBP all_DT the_DT entries_NNS in_IN the_DT last_JJ row_NN of_IN this_DT table_NN ,_, G_NN -LSB-_-LRB- n1_NN ,_, r_NN -RSB-_-RRB- ._.
These_DT entries_NNS correspond_VBP to_TO optimal_JJ solutions_NNS with_IN all_DT agents_NNS except_IN l_NN ,_, for_IN different_JJ levels_NNS of_IN cost_NN ._.
In_IN particular_JJ ,_, we_PRP consider_VBP the_DT entries_NNS that_WDT provide_VBP at_IN least_JJS M_NN uj_NN +_CC #_# units_NNS ._.
Together_RB with_IN a_DT contribution_NN from_IN agent_NN l_NN ,_, we_PRP choose_VBP the_DT entry_NN in_IN this_DT set_NN that_WDT minimizes_VBZ the_DT total_JJ cost_NN ,_, defined_VBN as_IN follows_VBZ :_: cost_NN -LRB-_-LRB- G_NN -LSB-_-LRB- n_NN #_# ,_, r_NN -RSB-_-RRB- -RRB-_-RRB- +_CC max_NN -LCB-_-LRB- uj_NN ,_, M_NN G_NN -LSB-_-LRB- n_NN #_# ,_, r_NN -RSB-_-RRB- -RCB-_-RRB- pj_NN ,_, where_WRB cost_NN -LRB-_-LRB- -RRB-_-RRB- is_VBZ the_DT original_JJ ,_, unscaled_JJ cost_NN associated_VBN with_IN entry_NN G_NN -LSB-_-LRB- n1_NN ,_, r_NN -RSB-_-RRB- ._.
It_PRP is_VBZ worth_JJ noting_VBG ,_, that_IN unlike_IN the_DT 2-approximation_NN scheme_NN for_IN iKnapsack_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ,_, the_DT value_NN computed_VBN with_IN this_DT FPTAS_NN includes_VBZ the_DT cost_NN to_TO acquire_VB uj_NN l_NN units_NNS from_IN l_NN ._.
The_DT following_VBG lemma_NN shows_VBZ that_IN we_PRP achieve_VBP a_DT -LRB-_-LRB- #_# +_CC -RRB-_-RRB- -_: approximation_NN ._.
LEMMA_NNP #_# ._.
Suppose_VB A_DT is_VBZ an_DT optimal_JJ solution_NN of_IN the_DT generalized_VBN knapsack_NN problem_NN ,_, and_CC suppose_VB that_DT element_NN -LRB-_-LRB- l_NN ,_, j_NN -RRB-_-RRB- is_VBZ midrange_JJ in_IN the_DT optimal_JJ solution_NN ._.
Then_RB ,_, the_DT solution_NN A_NN -LRB-_-LRB- l_NN ,_, j_NN -RRB-_-RRB- from_IN running_VBG the_DT scaled_VBN dynamic-programming_JJ algorithm_NN on_IN iKnapsack_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- satisfies_VBZ cost_NN -LRB-_-LRB- A_NN -LRB-_-LRB- l_NN ,_, j_NN -RRB-_-RRB- -RRB-_-RRB- -LRB-_-LRB- #_# +_CC #_# -RRB-_-RRB- cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- PROOF_NN ._.
Let_VB x_CC denote_VB the_DT vector_NN of_IN the_DT elements_NNS in_IN solution_NN A_NN without_IN element_NN l_NN ._.
Then_RB ,_, by_IN definition_NN ,_, cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- =_JJ cost_NN -LRB-_-LRB- x_NN -RRB-_-RRB- +_CC pj_NN xj_NN ._.
Let_VB r_NN =_JJ scost_NN -LRB-_-LRB- x_NN -RRB-_-RRB- be_VB the_DT scaled_VBN cost_NN associated_VBN with_IN the_DT vector_NN x_NN ._.
Now_RB consider_VB the_DT dynamic_JJ programming_NN table_NN constructed_VBN for_IN iKnapsack_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ,_, and_CC consider_VB its_PRP$ entry_NN G_NN -LSB-_-LRB- n_NN #_# ,_, r_NN -RSB-_-RRB- ._.
Let_VB A_DT denote_VBP the_DT 2-approximation_NN to_TO the_DT generalized_VBN knapsack_NN problem_NN ,_, and_CC A_NN -LRB-_-LRB- l_NN ,_, j_NN -RRB-_-RRB- denote_VBP the_DT solution_NN from_IN the_DT dynamic-programming_JJ algorithm_NN ._.
Suppose_VB y_NN is_VBZ the_DT solution_NN associated_VBN with_IN this_DT entry_NN in_IN our_PRP$ dynamic_JJ program_NN ;_: the_DT components_NNS of_IN the_DT vector_NN y_NN are_VBP the_DT quantities_NNS from_IN different_JJ lists_NNS ._.
Since_IN both_DT x_NN and_CC y_NN have_VBP equal_JJ scaled_VBN costs_NNS ,_, by_IN Lemma_NNP #_# ,_, their_PRP$ unscaled_JJ costs_NNS are_VBP within_IN cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- of_IN each_DT other_JJ ;_: that_DT is_VBZ ,_, cost_NN -LRB-_-LRB- y_NN -RRB-_-RRB- cost_NN -LRB-_-LRB- x_NN -RRB-_-RRB- cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- ._.
Now_RB ,_, define_VB yj_NN =_JJ max_NN -LCB-_-LRB- uj_NN ,_, M_NN i_FW =_JJ j_NN yj_NN i_FW -RCB-_-RRB- ;_: this_DT is_VBZ the_DT contribution_NN needed_VBN from_IN to_TO make_VB -LRB-_-LRB- y_NN ,_, yj_NN -RRB-_-RRB- a_DT feasible_JJ solution_NN ._.
Among_IN all_PDT the_DT equal_JJ cost_NN solutions_NNS ,_, our_PRP$ dynamic_JJ programming_NN tables_NNS chooses_VBZ the_DT one_CD with_IN maximum_NN units_NNS ._.
Therefore_RB ,_, i_FW =_JJ j_NN yj_NN i_FW i_FW =_JJ j_NN xj_NN i_FW 172_CD Therefore_RB ,_, it_PRP must_MD be_VB the_DT case_NN that_IN yj_NN xj_NN ._.
Because_IN -LRB-_-LRB- yj_NN ,_, y_NN -RRB-_-RRB- is_VBZ also_RB a_DT feasible_JJ solution_NN ,_, if_IN our_PRP$ algorithm_NN returns_VBZ a_DT solution_NN with_IN cost_NN cost_NN -LRB-_-LRB- A_NN -LRB-_-LRB- l_NN ,_, j_NN -RRB-_-RRB- -RRB-_-RRB- ,_, then_RB we_PRP must_MD have_VB cost_NN -LRB-_-LRB- A_NN -LRB-_-LRB- l_NN ,_, j_NN -RRB-_-RRB- -RRB-_-RRB- cost_NN -LRB-_-LRB- y_NN -RRB-_-RRB- +_CC pj_NN yj_NN cost_NN -LRB-_-LRB- x_NN -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- +_CC pj_NN xj_NN -LRB-_-LRB- #_# +_CC #_# -RRB-_-RRB- cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- ,_, where_WRB we_PRP use_VBP the_DT fact_NN that_IN cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- 2cost_CD -LRB-_-LRB- A_NN -RRB-_-RRB- ._.
Putting_VBG this_DT together_RB ,_, our_PRP$ approximation_NN scheme_NN for_IN the_DT generalized_VBN knapsack_NN problem_NN will_MD iterate_VB the_DT scheme_NN described_VBN above_IN for_IN each_DT choice_NN of_IN the_DT midrange_JJ element_NN -LRB-_-LRB- l_NN ,_, j_NN -RRB-_-RRB- ,_, and_CC choose_VB the_DT best_JJS solution_NN from_IN among_IN these_DT O_NN -LRB-_-LRB- n_NN -RRB-_-RRB- solutions_NNS ._.
For_IN a_DT given_VBN midrange_NN ,_, the_DT most_RBS expensive_JJ step_NN in_IN the_DT algorithm_NN is_VBZ the_DT construction_NN of_IN dynamic_JJ programming_NN table_NN ,_, which_WDT can_MD be_VB done_VBN in_IN O_NN -LRB-_-LRB- n2_NN /_: -RRB-_-RRB- time_NN assuming_VBG constant_JJ intervals_NNS per_IN list_NN ._.
Thus_RB ,_, we_PRP have_VBP the_DT following_VBG result_NN ._.
THEOREM_NNP #_# ._.
We_PRP can_MD compute_VB an_DT -LRB-_-LRB- #_# +_CC -RRB-_-RRB- approximation_NN to_TO the_DT solution_NN of_IN a_DT generalized_VBN knapsack_NN problem_NN in_IN worst-case_JJ time_NN O_NN -LRB-_-LRB- n3_NN /_: -RRB-_-RRB- ._.
The_DT dependence_NN on_IN the_DT number_NN of_IN pieces_NNS is_VBZ also_RB polynomial_JJ :_: if_IN each_DT bid_NN has_VBZ a_DT maximum_NN of_IN c_NN pieces_NNS ,_, then_RB the_DT running_VBG time_NN can_MD be_VB derived_VBN by_IN substituting_VBG cn_NN for_IN each_DT occurrence_NN of_IN n_NN ._.
4_LS ._.
COMPUTING_VBG VCG_NNP PAYMENTS_NNS We_PRP now_RB consider_VBP the_DT related_JJ problem_NN of_IN computing_VBG the_DT VCG_NNP payments_NNS for_IN all_PDT the_DT agents_NNS ._.
A_DT naive_JJ approach_NN requires_VBZ solving_VBG the_DT allocation_NN problem_NN n_NN times_NNS ,_, removing_VBG each_DT agent_NN in_IN turn_NN ._.
In_IN this_DT section_NN ,_, we_PRP show_VBP that_IN our_PRP$ approximation_NN scheme_NN for_IN the_DT generalized_VBN knapsack_NN can_MD be_VB extended_VBN to_TO determine_VB all_DT n_NN payments_NNS in_IN total_JJ time_NN O_NN -LRB-_-LRB- T_NN log_NN -LRB-_-LRB- n_NN /_: -RRB-_-RRB- -RRB-_-RRB- ,_, where_WRB #_# C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- /_: C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- ,_, for_IN a_DT constant_JJ upper_JJ bound_VBN ,_, ,_, and_CC T_NN is_VBZ the_DT complexity_NN of_IN solving_VBG the_DT allocation_NN problem_NN once_RB ._.
This_DT -_: bound_VBN can_MD be_VB justified_JJ as_IN a_DT no_DT monopoly_NN condition_NN ,_, because_IN it_PRP bounds_VBZ the_DT marginal_JJ value_NN that_IN a_DT single_JJ buyer_NN brings_VBZ to_TO the_DT auction_NN ._.
Similarly_RB ,_, in_IN the_DT reverse_JJ variation_NN we_PRP can_MD compute_VB the_DT VCG_NNP payments_NNS to_TO each_DT seller_NN in_IN time_NN O_NN -LRB-_-LRB- T_NN log_NN -LRB-_-LRB- n_NN /_: -RRB-_-RRB- -RRB-_-RRB- ,_, where_WRB bounds_VBZ the_DT ratio_NN C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- /_: C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- for_IN all_DT i_FW ._.
Our_PRP$ overall_JJ strategy_NN will_MD be_VB to_TO build_VB two_CD dynamic_JJ programming_NN tables_NNS ,_, forward_RB and_CC backward_RB ,_, for_IN each_DT midrange_JJ element_NN -LRB-_-LRB- l_NN ,_, j_NN -RRB-_-RRB- once_RB ._.
The_DT forward_JJ table_NN is_VBZ built_VBN by_IN considering_VBG the_DT agents_NNS in_IN the_DT order_NN of_IN their_PRP$ indices_NNS ,_, where_WRB as_IN the_DT backward_RB table_NN is_VBZ built_VBN by_IN considering_VBG them_PRP in_IN the_DT reverse_JJ order_NN ._.
The_DT optimal_JJ solution_NN corresponding_VBG to_TO C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- can_MD be_VB broken_VBN into_IN two_CD parts_NNS :_: one_CD corresponding_VBG to_TO first_JJ -LRB-_-LRB- i_FW #_# -RRB-_-RRB- agents_NNS and_CC the_DT other_JJ corresponding_VBG to_TO last_JJ -LRB-_-LRB- n_NN i_LS -RRB-_-RRB- agents_NNS ._.
As_IN the_DT -LRB-_-LRB- i_FW #_# -RRB-_-RRB- th_DT row_NN of_IN the_DT forward_JJ table_NN corresponds_VBZ to_TO the_DT sellers_NNS with_IN first_JJ -LRB-_-LRB- i1_NN -RRB-_-RRB- indices_NNS ,_, an_DT approximation_NN to_TO the_DT first_JJ part_NN will_MD be_VB contained_VBN in_IN -LRB-_-LRB- i_FW #_# -RRB-_-RRB- th_DT row_NN of_IN the_DT forward_JJ table_NN ._.
Similarly_RB ,_, -LRB-_-LRB- n_NN i_LS -RRB-_-RRB- th_DT row_NN of_IN the_DT backward_RB table_NN will_MD contain_VB an_DT approximation_NN for_IN the_DT second_JJ part_NN ._.
We_PRP first_RB present_VB a_DT simple_JJ but_CC an_DT inefficient_JJ way_NN of_IN computing_VBG the_DT approximate_JJ value_NN of_IN C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- ,_, which_WDT illustrates_VBZ the_DT main_JJ idea_NN of_IN our_PRP$ algorithm_NN ._.
Then_RB we_PRP present_VBP an_DT improved_VBN scheme_NN ,_, which_WDT uses_VBZ the_DT fact_NN that_IN the_DT elements_NNS in_IN the_DT rows_NNS are_VBP sorted_VBN ,_, to_TO compute_VB the_DT approximate_JJ value_NN more_RBR efficiently_RB ._.
In_IN the_DT following_VBG ,_, we_PRP concentrate_VBP on_IN computing_VBG an_DT allocation_NN with_IN xj_NN being_VBG midrange_JJ ,_, and_CC some_DT agent_NN i_FW =_JJ l_NN removed_VBD ._.
This_DT will_MD be_VB a_DT component_NN in_IN computing_VBG an_DT approximation_NN to_TO C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- ,_, the_DT value_NN of_IN the_DT solution_NN to_TO the_DT generalized_VBN knapsack_NN without_IN bids_NNS from_IN agent_NN i_FW ._.
We_PRP begin_VBP with_IN the_DT simple_JJ scheme_NN ._.
4_LS ._.
#_# A_DT Simple_JJ Approximation_NN Scheme_NN We_PRP implement_VBP the_DT scaled_VBN dynamic_JJ programming_NN algorithm_NN for_IN iKnapsack_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- with_IN two_CD alternate_JJ orderings_NNS over_IN the_DT other_JJ sellers_NNS ,_, k_NN =_JJ l_NN ,_, one_CD with_IN sellers_NNS ordered_VBN #_# ,_, #_# ,_, ..._: ,_, n_NN ,_, and_CC one_CD with_IN sellers_NNS ordered_VBN n_NN ,_, n_NN #_# ,_, ..._: ,_, #_# ._.
We_PRP call_VBP the_DT first_JJ table_NN the_DT forward_JJ table_NN ,_, and_CC denote_VB it_PRP F_NN ,_, and_CC the_DT second_JJ table_NN the_DT backward_RB table_NN ,_, and_CC denote_VB it_PRP Bl_NN ._.
The_DT subscript_NN reminds_VBZ us_PRP that_IN the_DT agent_NN is_VBZ midrange_JJ ._.
#_# In_IN building_VBG these_DT tables_NNS ,_, we_PRP use_VBP the_DT same_JJ scaling_NN factor_NN as_IN before_IN ;_: namely_RB ,_, the_DT cost_NN of_IN a_DT tuple_NN tj_NN i_FW is_VBZ scaled_VBN as_IN follows_VBZ :_: scost_NN -LRB-_-LRB- tj_NN i_LS -RRB-_-RRB- =_JJ ncost_NN -LRB-_-LRB- tj_NN i_LS -RRB-_-RRB- cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- where_WRB cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- is_VBZ the_DT upper_JJ bound_VBN on_IN C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- ,_, given_VBN by_IN our_PRP$ 2approximation_NN scheme_NN ._.
In_IN this_DT case_NN ,_, because_IN C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- can_MD be_VB times_NNS C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- ,_, the_DT scaled_VBN value_NN of_IN C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- can_MD be_VB at_IN most_JJS n_NN /_: ._.
Therefore_RB ,_, the_DT cost_NN dimension_NN of_IN our_PRP$ dynamic_JJ program_NN ''_'' s_NNS table_NN will_MD be_VB n_NN /_: ._.
FlTable_JJ F_NN -LRB-_-LRB- i1_NN -RRB-_-RRB- l_NN 2_CD #_# 1_CD 2_CD i1_NN 1_CD m1_NN m_NN n1_NN g_NN 2_CD ##_CD m1_NN m_NN B_NN -LRB-_-LRB- ni_NNS -RRB-_-RRB- n1_NN n2_NN ni_NNS 1_CD lh_NN Table_NNP Bl_NNP Figure_NNP #_# :_: Computing_NNP VCG_NNP payments_NNS ._.
m_NN =_JJ n_NN Now_RB ,_, suppose_VB we_PRP want_VBP to_TO compute_VB a_DT -LRB-_-LRB- #_# +_CC -RRB-_-RRB- -_: approximation_NN to_TO the_DT generalized_VBN knapsack_NN problem_NN restricted_JJ to_TO element_NN -LRB-_-LRB- l_NN ,_, j_NN -RRB-_-RRB- midrange_NN ,_, and_CC further_JJ restricted_JJ to_TO remove_VB bids_NNS from_IN some_DT seller_NN i_FW =_JJ l_NN ._.
Call_VB this_DT problem_NN iKnapsacki_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ._.
Recall_VB that_IN the_DT ith_NN row_NN of_IN our_PRP$ DP_NN table_NN stores_NNS the_DT best_JJS solution_NN possible_JJ using_VBG only_RB the_DT first_JJ i_FW agents_NNS excluding_VBG agent_NN l_NN ,_, all_DT of_IN them_PRP either_DT cleared_VBN at_IN zero_CD ,_, or_CC on_IN anchors_NNS ._.
These_DT first_JJ i_FW agents_NNS are_VBP a_DT different_JJ subset_NN of_IN agents_NNS in_IN the_DT forward_JJ and_CC the_DT backward_RB tables_NNS ._.
By_IN carefully_RB combining_VBG one_CD row_NN of_IN Fl_NN with_IN one_CD row_NN of_IN Bl_NN we_PRP can_MD compute_VB an_DT approximation_NN to_TO iKnapsacki_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ._.
We_PRP consider_VBP the_DT row_NN of_IN Fl_NN that_WDT corresponds_VBZ to_TO solutions_NNS constructed_VBN from_IN agents_NNS -LCB-_-LRB- #_# ,_, #_# ,_, ..._: ,_, i_FW #_# -RCB-_-RRB- ,_, skipping_VBG agent_NN l_NN ._.
We_PRP consider_VBP the_DT row_NN of_IN Bl_NN that_WDT corresponds_VBZ to_TO solutions_NNS constructed_VBN from_IN agents_NNS -LCB-_-LRB- i_FW +_CC #_# ,_, i_FW +_CC #_# ,_, ..._: ,_, n_NN -RCB-_-RRB- ,_, again_RB skipping_VBG agent_NN l_NN ._.
The_DT rows_NNS are_VBP labeled_VBN Fl_NN -LRB-_-LRB- i_FW #_# -RRB-_-RRB- and_CC Bl_NN -LRB-_-LRB- n_NN i_LS -RRB-_-RRB- respectively_RB ._.
##_IN The_DT scaled_VBN costs_NNS for_IN acquiring_VBG these_DT units_NNS are_VBP the_DT column_NN indices_NNS for_IN these_DT entries_NNS ._.
To_TO solve_VB iKnapsacki_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- we_PRP choose_VBP one_CD entry_NN from_IN row_NN F_NN -LRB-_-LRB- i1_NN -RRB-_-RRB- and_CC one_CD from_IN row_NN B_NN -LRB-_-LRB- ni_NNS -RRB-_-RRB- such_JJ that_IN their_PRP$ total_JJ quantity_NN exceeds_VBZ M_NN uj_NN +_CC #_# and_CC their_PRP$ combined_JJ cost_NN is_VBZ minimum_JJ over_IN all_DT such_JJ combinations_NNS ._.
Formally_RB ,_, let_VB g_NN Fl_NN -LRB-_-LRB- i_FW #_# -RRB-_-RRB- ,_, and_CC h_NN Bl_NN -LRB-_-LRB- n_NN #_# -RRB-_-RRB- denote_VBP entries_NNS in_IN each_DT row_NN ,_, with_IN size_NN -LRB-_-LRB- g_NN -RRB-_-RRB- ,_, size_NN -LRB-_-LRB- h_NN -RRB-_-RRB- ,_, denoting_VBG the_DT number_NN of_IN units_NNS and_CC cost_NN -LRB-_-LRB- g_NN -RRB-_-RRB- and_CC cost_NN -LRB-_-LRB- h_NN -RRB-_-RRB- denoting_VBG the_DT unscaled_JJ cost_NN associated_VBN with_IN the_DT entry_NN ._.
We_PRP compute_VBP the_DT following_VBG ,_, subject_JJ 9_CD We_PRP could_MD label_VB the_DT tables_NNS with_IN both_DT and_CC j_NN ,_, to_TO indicate_VB the_DT jth_NN tuple_NN is_VBZ forced_VBN to_TO be_VB midrange_JJ ,_, but_CC omit_VB j_NN to_TO avoid_VB clutter_NN ._.
10_CD To_TO be_VB precise_JJ ,_, the_DT index_NN of_IN the_DT rows_NNS are_VBP -LRB-_-LRB- i_FW #_# -RRB-_-RRB- and_CC -LRB-_-LRB- n_NN i_LS -RRB-_-RRB- for_IN Fl_NN and_CC Bl_NN when_WRB l_NN <_JJR i_FW ,_, and_CC -LRB-_-LRB- i_LS #_# -RRB-_-RRB- and_CC -LRB-_-LRB- n_NN i_FW #_# -RRB-_-RRB- ,_, respectively_RB ,_, when_WRB l_NN >_JJR i_LS ._.
173_CD to_TO the_DT condition_NN that_WDT g_NN and_CC h_NN satisfy_VBP size_NN -LRB-_-LRB- g_NN -RRB-_-RRB- +_CC size_NN -LRB-_-LRB- h_NN -RRB-_-RRB- >_JJR M_NN uj_NN +_CC #_# :_: min_NN gF_NN -LRB-_-LRB- i1_NN -RRB-_-RRB- ,_, hB_NN -LRB-_-LRB- ni_NNS -RRB-_-RRB- cost_NN -LRB-_-LRB- g_NN -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- h_NN -RRB-_-RRB- +_CC pj_NN max_NN -LCB-_-LRB- uj_NN ,_, M_NN size_NN -LRB-_-LRB- g_NN -RRB-_-RRB- size_NN -LRB-_-LRB- h_NN -RRB-_-RRB- -RCB-_-RRB- -LRB-_-LRB- #_# -RRB-_-RRB- LEMMA_NNP #_# ._.
Suppose_VB Ai_NNP is_VBZ an_DT optimal_JJ solution_NN of_IN the_DT generalized_VBN knapsack_NN problem_NN without_IN bids_NNS from_IN agent_NN i_FW ,_, and_CC suppose_VB that_DT element_NN -LRB-_-LRB- l_NN ,_, j_NN -RRB-_-RRB- is_VBZ the_DT midrange_JJ element_NN in_IN the_DT optimal_JJ solution_NN ._.
Then_RB ,_, the_DT expression_NN in_IN Eq_NN ._.
#_# ,_, for_IN the_DT restricted_JJ problem_NN iKnapsacki_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ,_, computes_VBZ a_DT -LRB-_-LRB- #_# +_CC -RRB-_-RRB- -_: approximation_NN to_TO Ai_NNP ._.
PROOF_NN ._.
From_IN earlier_JJR ,_, we_PRP define_VBP cost_NN -LRB-_-LRB- Ai_NN -RRB-_-RRB- =_JJ C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- ._.
We_PRP can_MD split_VB the_DT optimal_JJ solution_NN ,_, Ai_NNP ,_, into_IN three_CD disjoint_NN parts_NNS :_: xl_NN corresponds_VBZ to_TO the_DT midrange_JJ seller_NN ,_, xi_NN corresponds_VBZ to_TO first_JJ i_FW #_# sellers_NNS -LRB-_-LRB- skipping_VBG agent_NN l_NN if_IN l_NN <_JJR i_LS -RRB-_-RRB- ,_, and_CC xi_NN corresponds_VBZ to_TO last_JJ n_NN i_FW sellers_NNS -LRB-_-LRB- skipping_VBG agent_NN l_NN if_IN l_NN >_JJR i_LS -RRB-_-RRB- ._.
We_PRP have_VBP :_: cost_NN -LRB-_-LRB- Ai_NN -RRB-_-RRB- =_JJ cost_NN -LRB-_-LRB- xi_NN -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- xi_NN -RRB-_-RRB- +_CC pj_NN xj_NN Let_VB ri_NN =_JJ scost_NN -LRB-_-LRB- xi_NN -RRB-_-RRB- and_CC ri_NN =_JJ scost_NN -LRB-_-LRB- xi_NN -RRB-_-RRB- ._.
Let_VB yi_NN and_CC yi_NN be_VB the_DT solution_NN vectors_NNS corresponding_VBG to_TO scaled_VBN cost_NN ri_NN and_CC ri_NN in_IN F_NN -LRB-_-LRB- i_FW #_# -RRB-_-RRB- and_CC B_NN -LRB-_-LRB- n_NN i_LS -RRB-_-RRB- ,_, respectively_RB ._.
From_IN Lemma_NNP #_# we_PRP conclude_VBP that_IN ,_, cost_NN -LRB-_-LRB- yi_NN -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- yi_NN -RRB-_-RRB- cost_NN -LRB-_-LRB- xi_NN -RRB-_-RRB- cost_NN -LRB-_-LRB- xi_NN -RRB-_-RRB- cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- where_WRB cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- is_VBZ the_DT upper-bound_JJ on_IN C_NN -LRB-_-LRB- I_PRP -RRB-_-RRB- computed_VBN with_IN the_DT 2-approximation_NN ._.
Among_IN all_DT equal_JJ scaled_VBN cost_NN solutions_NNS ,_, our_PRP$ dynamic_JJ program_NN chooses_VBZ the_DT one_CD with_IN maximum_NN units_NNS ._.
Therefore_RB we_PRP also_RB have_VBP ,_, -LRB-_-LRB- size_NN -LRB-_-LRB- yi_NN -RRB-_-RRB- size_NN -LRB-_-LRB- xi_NN -RRB-_-RRB- -RRB-_-RRB- and_CC -LRB-_-LRB- size_NN -LRB-_-LRB- yi_NN -RRB-_-RRB- size_NN -LRB-_-LRB- xi_NN -RRB-_-RRB- -RRB-_-RRB- where_WRB we_PRP use_VBP shorthand_NN size_NN -LRB-_-LRB- x_NN -RRB-_-RRB- to_TO denote_VB total_JJ number_NN of_IN units_NNS in_IN all_DT tuples_NNS in_IN x_NN ._.
Now_RB ,_, define_VB yj_NN l_NN =_JJ max_NN -LRB-_-LRB- uj_NN l_NN ,_, M_NN size_NN -LRB-_-LRB- yi_NN -RRB-_-RRB- size_NN -LRB-_-LRB- yi_NN -RRB-_-RRB- -RRB-_-RRB- ._.
From_IN the_DT preceding_VBG inequalities_NNS ,_, we_PRP have_VBP yj_NN l_NN xj_NN l_NN ._.
Since_IN -LRB-_-LRB- yj_NN l_NN ,_, yi_NN ,_, yi_NN -RRB-_-RRB- is_VBZ also_RB a_DT feasible_JJ solution_NN to_TO the_DT generalized_VBN knapsack_NN problem_NN without_IN agent_NN i_FW ,_, the_DT value_NN returned_VBN by_IN Eq_NN ._.
#_# is_VBZ at_IN most_JJS cost_NN -LRB-_-LRB- yi_NN -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- yi_NN -RRB-_-RRB- +_CC pj_NN l_NN yj_NN l_NN C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- A_NN -RRB-_-RRB- C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- +_CC 2cost_CD -LRB-_-LRB- A_NN -RRB-_-RRB- C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- +_CC 2C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- This_DT completes_VBZ the_DT proof_NN ._.
A_DT naive_JJ implementation_NN of_IN this_DT scheme_NN will_MD be_VB inefficient_JJ because_IN it_PRP might_MD check_VB -LRB-_-LRB- n_NN /_: -RRB-_-RRB- #_# pairs_NNS of_IN elements_NNS ,_, for_IN any_DT particular_JJ choice_NN of_IN -LRB-_-LRB- l_NN ,_, j_NN -RRB-_-RRB- and_CC choice_NN of_IN dropped_VBD agent_NN i_FW ._.
In_IN the_DT next_JJ section_NN ,_, we_PRP present_VBP an_DT efficient_JJ way_NN to_TO compute_VB Eq_NNP ._.
#_# ,_, and_CC eventually_RB to_TO compute_VB the_DT VCG_NNP payments_NNS ._.
4_LS ._.
#_# Improved_VBN Approximation_NN Scheme_NNP Our_PRP$ improved_VBN approximation_NN scheme_NN for_IN the_DT winner-determination_NN problem_NN without_IN agent_NN i_FW uses_VBZ the_DT fact_NN that_IN elements_NNS in_IN F_NN -LRB-_-LRB- i_FW #_# -RRB-_-RRB- and_CC B_NN -LRB-_-LRB- n_NN i_LS -RRB-_-RRB- are_VBP sorted_VBN ;_: specifically_RB ,_, both_DT ,_, unscaled_JJ cost_NN and_CC quantity_NN -LRB-_-LRB- i_FW ._.
e_LS ._.
size_NN -RRB-_-RRB- ,_, increases_VBZ from_IN left_VBN to_TO right_NN ._.
As_IN before_RB ,_, let_VB g_NN and_CC h_NN denote_VBP generic_JJ entries_NNS in_IN F_NN -LRB-_-LRB- i_FW #_# -RRB-_-RRB- and_CC B_NN -LRB-_-LRB- n_NN i_LS -RRB-_-RRB- respectively_RB ._.
To_TO compute_VB Eq_NNP ._.
#_# ,_, we_PRP consider_VBP all_DT the_DT tuple_NN pairs_NNS ,_, and_CC first_JJ divide_NN the_DT tuples_NNS that_WDT satisfy_VBP condition_NN size_NN -LRB-_-LRB- g_NN -RRB-_-RRB- +_CC size_NN -LRB-_-LRB- h_NN -RRB-_-RRB- >_JJR M_NN uj_NN +_CC #_# l_NN into_IN two_CD disjoint_NN sets_NNS ._.
For_IN each_DT set_NN we_PRP compute_VBP the_DT best_JJS solution_NN ,_, and_CC then_RB take_VB the_DT best_JJS between_IN the_DT two_CD sets_NNS ._.
-LSB-_-LRB- case_NN I_CD :_: size_NN -LRB-_-LRB- g_NN -RRB-_-RRB- +_CC size_NN -LRB-_-LRB- h_NN -RRB-_-RRB- M_NN uj_NN l_NN -RSB-_-RRB- The_DT problem_NN reduces_VBZ to_TO min_NN gF_NN -LRB-_-LRB- i1_NN -RRB-_-RRB- ,_, hB_NN -LRB-_-LRB- ni_NNS -RRB-_-RRB- cost_NN -LRB-_-LRB- g_NN -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- h_NN -RRB-_-RRB- +_CC pj_NN l_NN uj_NN -LRB-_-LRB- #_# -RRB-_-RRB- We_PRP define_VBP a_DT pair_NN -LRB-_-LRB- g_NN ,_, h_NN -RRB-_-RRB- to_TO be_VB feasible_JJ if_IN size_NN -LRB-_-LRB- g_NN -RRB-_-RRB- +_CC size_NN -LRB-_-LRB- h_NN -RRB-_-RRB- M_NN uj_NN l_NN ._.
Now_RB to_TO compute_VB Eq_NNP ._.
#_# ,_, we_PRP do_VBP a_DT forward_RB and_CC backward_RB walk_VB on_IN F_NN -LRB-_-LRB- i_FW #_# -RRB-_-RRB- and_CC B_NN -LRB-_-LRB- n_NN i_LS -RRB-_-RRB- respectively_RB ._.
We_PRP start_VBP from_IN the_DT smallest_JJS index_NN of_IN F_NN -LRB-_-LRB- i_FW #_# -RRB-_-RRB- and_CC move_VB right_RB ,_, and_CC from_IN the_DT highest_JJS index_NN of_IN B_NN -LRB-_-LRB- n_NN i_LS -RRB-_-RRB- and_CC move_VB left_RB ._.
Let_VB -LRB-_-LRB- g_NN ,_, h_NN -RRB-_-RRB- be_VB the_DT current_JJ pair_NN ._.
If_IN -LRB-_-LRB- g_NN ,_, h_NN -RRB-_-RRB- is_VBZ feasible_JJ ,_, we_PRP decrement_VBP B_NN ''_'' s_NNS pointer_NN -LRB-_-LRB- that_WDT is_VBZ ,_, move_VB backward_RB -RRB-_-RRB- otherwise_RB we_PRP increment_NN F_NN ''_'' s_NNS pointer_NN ._.
The_DT feasible_JJ pairs_NNS found_VBN during_IN the_DT walk_NN are_VBP used_VBN to_TO compute_VB Eq_NNP ._.
#_# ._.
The_DT complexity_NN of_IN this_DT step_NN is_VBZ linear_JJ in_IN size_NN of_IN F_NN -LRB-_-LRB- i_FW #_# -RRB-_-RRB- ,_, which_WDT is_VBZ O_NN -LRB-_-LRB- n_NN /_: -RRB-_-RRB- ._.
-LSB-_-LRB- case_NN II_CD :_: M_NN uj_NN +_CC #_# l_NN size_NN -LRB-_-LRB- g_NN -RRB-_-RRB- +_CC size_NN -LRB-_-LRB- h_NN -RRB-_-RRB- M_NN uj_NN l_NN -RSB-_-RRB- The_DT problem_NN reduces_VBZ to_TO min_NN gF_NN -LRB-_-LRB- i1_NN -RRB-_-RRB- ,_, hB_NN -LRB-_-LRB- ni_NNS -RRB-_-RRB- cost_NN -LRB-_-LRB- g_NN -RRB-_-RRB- +_CC cost_NN -LRB-_-LRB- h_NN -RRB-_-RRB- +_CC pj_NN l_NN -LRB-_-LRB- M_NN size_NN -LRB-_-LRB- g_NN -RRB-_-RRB- size_NN -LRB-_-LRB- h_NN -RRB-_-RRB- -RRB-_-RRB- To_TO compute_VB the_DT above_JJ equation_NN ,_, we_PRP transform_VBP the_DT above_JJ problem_NN to_TO another_DT problem_NN using_VBG modified_VBN cost_NN ,_, which_WDT is_VBZ defined_VBN as_IN :_: mcost_NN -LRB-_-LRB- g_NN -RRB-_-RRB- =_JJ cost_NN -LRB-_-LRB- g_NN -RRB-_-RRB- pj_NN l_NN size_NN -LRB-_-LRB- g_NN -RRB-_-RRB- mcost_NN -LRB-_-LRB- h_NN -RRB-_-RRB- =_JJ cost_NN -LRB-_-LRB- h_NN -RRB-_-RRB- pj_NN l_NN size_NN -LRB-_-LRB- h_NN -RRB-_-RRB- The_DT new_JJ problem_NN is_VBZ to_TO compute_VB min_NN gF_NN -LRB-_-LRB- i1_NN -RRB-_-RRB- ,_, hB_NN -LRB-_-LRB- ni_NNS -RRB-_-RRB- mcost_FW -LRB-_-LRB- g_NN -RRB-_-RRB- +_CC mcost_NN -LRB-_-LRB- h_NN -RRB-_-RRB- +_CC pj_NN l_NN M_NN -LRB-_-LRB- #_# -RRB-_-RRB- The_DT modified_VBN cost_NN simplifies_VBZ the_DT problem_NN ,_, but_CC unfortunately_RB the_DT elements_NNS in_IN F_NN -LRB-_-LRB- i_FW #_# -RRB-_-RRB- and_CC B_NN -LRB-_-LRB- n_NN i_LS -RRB-_-RRB- are_VBP no_RB longer_RB sorted_VBN with_IN respect_NN to_TO mcost_VB ._.
However_RB ,_, the_DT elements_NNS are_VBP still_RB sorted_VBN in_IN quantity_NN and_CC we_PRP use_VBP this_DT property_NN to_TO compute_VB Eq_NNP ._.
#_# ._.
Call_VB a_DT pair_NN -LRB-_-LRB- g_NN ,_, h_NN -RRB-_-RRB- feasible_JJ if_IN M_NN uj_NN +_CC #_# l_NN size_NN -LRB-_-LRB- g_NN -RRB-_-RRB- +_CC size_NN -LRB-_-LRB- h_NN -RRB-_-RRB- M_NN uj_NN l_NN ._.
Define_VB the_DT feasible_JJ set_NN of_IN g_NN as_IN the_DT elements_NNS h_NN B_NN -LRB-_-LRB- n_NN i_LS -RRB-_-RRB- that_WDT are_VBP feasible_JJ given_VBN g_NN ._.
As_IN the_DT elements_NNS are_VBP sorted_VBN by_IN quantity_NN ,_, the_DT feasible_JJ set_NN of_IN g_NN is_VBZ a_DT contiguous_JJ subset_NN of_IN B_NN -LRB-_-LRB- n_NN i_LS -RRB-_-RRB- and_CC shifts_NNS left_VBD as_IN g_NN increases_NNS ._.
2_CD #_# #_# #_# 10_CD ##_CD ##_NNS ##_VBP ##_CD ##_CD Begin_NNP End_NNP B_NN -LRB-_-LRB- ni_NNS -RRB-_-RRB- ##_VBP ##_CD ##_CD ##_CD ##_CD ##_CD 65421_CD #_# 1_CD #_# F_NN -LRB-_-LRB- i1_NN -RRB-_-RRB- l_NN l_NN Figure_NN #_# :_: The_DT feasible_JJ set_NN of_IN g_NN =_JJ #_# ,_, defined_VBN on_IN B_NN -LRB-_-LRB- n_NN i_LS -RRB-_-RRB- ,_, is_VBZ -LCB-_-LRB- #_# ,_, #_# ,_, #_# -RCB-_-RRB- when_WRB M_NN uj_NN +_CC #_# l_NN =_JJ ##_NN and_CC M_NN uj_NN l_NN =_JJ ##_CD ._.
Begin_NN and_CC End_NN represent_VBP the_DT start_NN and_CC end_NN pointers_NNS to_TO the_DT feasible_JJ set_NN ._.
Therefore_RB ,_, we_PRP can_MD compute_VB Eq_NNP ._.
#_# by_IN doing_VBG a_DT forward_RB and_CC backward_RB walk_VB on_IN F_NN -LRB-_-LRB- i_FW #_# -RRB-_-RRB- and_CC B_NN -LRB-_-LRB- n_NN i_LS -RRB-_-RRB- respectively_RB ._.
We_PRP walk_VBP on_IN B_NN -LRB-_-LRB- n_NN i_LS -RRB-_-RRB- ,_, starting_VBG from_IN the_DT highest_JJS index_NN ,_, using_VBG two_CD pointers_NNS ,_, Begin_NNP and_CC End_NNP ,_, to_TO indicate_VB the_DT start_NN and_CC end_NN of_IN the_DT current_JJ feasible_JJ set_NN ._.
We_PRP maintain_VBP the_DT feasible_JJ set_NN as_IN a_DT min_NN heap_NN ,_, where_WRB the_DT key_NN is_VBZ modified_VBN cost_NN ._.
To_TO update_VB the_DT feasible_JJ set_NN ,_, when_WRB we_PRP increment_NN F_NN ''_'' s_NNS pointer_NN -LRB-_-LRB- move_NN forward_RB -RRB-_-RRB- ,_, we_PRP walk_VBP left_VBN on_IN B_NN ,_, first_RB using_VBG End_NN to_TO remove_VB elements_NNS from_IN feasible_JJ set_NN which_WDT are_VBP no_RB longer_RB 174_CD feasible_JJ and_CC then_RB using_VBG Begin_NNP to_TO add_VB new_JJ feasible_JJ elements_NNS ._.
For_IN a_DT given_VBN g_NN ,_, the_DT only_JJ element_NN which_WDT we_PRP need_VBP to_TO consider_VB in_IN g_NN ''_'' s_NNS feasible_JJ set_NN is_VBZ the_DT one_CD with_IN minimum_JJ modified_JJ cost_NN which_WDT can_MD be_VB computed_VBN in_IN constant_JJ time_NN with_IN the_DT min_NN heap_NN ._.
So_RB ,_, the_DT main_JJ complexity_NN of_IN the_DT computation_NN lies_VBZ in_IN heap_NN updates_NNS ._.
Since_IN ,_, any_DT element_NN is_VBZ added_VBN or_CC deleted_VBN at_IN most_JJS once_RB ,_, there_EX are_VBP O_NN -LRB-_-LRB- n_NN -RRB-_-RRB- heap_NN updates_NNS and_CC the_DT time_NN complexity_NN of_IN this_DT step_NN is_VBZ O_NN -LRB-_-LRB- n_NN log_NN n_NN -RRB-_-RRB- ._.
4_LS ._.
#_# Collecting_VBG the_DT Pieces_NNP The_DT algorithm_NN works_VBZ as_IN follows_VBZ ._.
First_RB ,_, using_VBG the_DT #_# approximation_NN algorithm_NN ,_, we_PRP compute_VBP an_DT upper_JJ bound_VBN on_IN C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- ._.
We_PRP use_VBP this_DT bound_VBN to_TO scale_VB down_RP the_DT tuple_NN costs_NNS ._.
Using_VBG the_DT scaled_VBN costs_NNS ,_, we_PRP build_VBP the_DT forward_RB and_CC backward_RB tables_NNS corresponding_VBG to_TO each_DT tuple_NN -LRB-_-LRB- l_NN ,_, j_NN -RRB-_-RRB- ._.
The_DT forward_JJ tables_NNS are_VBP used_VBN to_TO compute_VB C_NN -LRB-_-LRB- I_NN -RRB-_-RRB- ._.
To_TO compute_VB C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- ,_, we_PRP iterate_VBP over_IN all_PDT the_DT possible_JJ midrange_JJ tuples_NNS and_CC use_VB the_DT corresponding_JJ forward_RB and_CC backward_RB tables_NNS to_TO compute_VB the_DT locally_RB optimal_JJ solution_NN using_VBG the_DT above_JJ scheme_NN ._.
Among_IN all_PDT the_DT locally_RB optimal_JJ solutions_NNS we_PRP choose_VBP one_CD with_IN the_DT minimum_JJ total_JJ cost_NN ._.
The_DT most_RBS expensive_JJ step_NN in_IN the_DT algorithm_NN is_VBZ computation_NN of_IN C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- ._.
The_DT time_NN complexity_NN of_IN this_DT step_NN is_VBZ O_NN -LRB-_-LRB- n2_NN log_NN n_NN -RRB-_-RRB- as_IN we_PRP have_VBP to_TO iterate_VB over_IN all_DT O_NN -LRB-_-LRB- n_NN -RRB-_-RRB- choices_NNS of_IN tj_NN l_NN ,_, for_IN all_DT l_NN =_JJ i_FW ,_, and_CC each_DT time_NN use_VB the_DT above_JJ scheme_NN to_TO compute_VB Eq_NNP ._.
#_# ._.
In_IN the_DT worst_JJS case_NN ,_, we_PRP might_MD need_VB to_TO compute_VB C_NN -LRB-_-LRB- I_PRP \_VBP i_LS -RRB-_-RRB- for_IN all_DT n_NN sellers_NNS ,_, in_IN which_WDT case_NN the_DT final_JJ complexity_NN of_IN the_DT algorithm_NN will_MD be_VB O_NN -LRB-_-LRB- n3_NN log_NN n_NN -RRB-_-RRB- ._.
THEOREM_NNP #_# ._.
We_PRP can_MD compute_VB an_DT /_: -LRB-_-LRB- #_# +_CC -RRB-_-RRB- -_: strategyproof_JJ approximation_NN to_TO the_DT VCG_NNP mechanism_NN in_IN the_DT forward_JJ and_CC reverse_JJ multi-unit_JJ auctions_NNS in_IN worst-case_JJ time_NN O_NN -LRB-_-LRB- n3_NN log_NN n_NN -RRB-_-RRB- ._.
It_PRP is_VBZ interesting_JJ to_TO recall_VB that_IN T_NN =_JJ O_NN -LRB-_-LRB- n3_NN -RRB-_-RRB- is_VBZ the_DT time_NN complexity_NN of_IN the_DT FPTAS_NNP to_TO the_DT generalized_VBN knapsack_NN problem_NN with_IN all_DT agents_NNS ._.
Our_PRP$ combined_VBN scheme_NN computes_VBZ an_DT approximation_NN to_TO the_DT complete_JJ VCG_NNP mechanism_NN ,_, including_VBG payments_NNS to_TO O_NN -LRB-_-LRB- n_NN -RRB-_-RRB- agents_NNS ,_, in_IN time_NN complexity_NN O_NN -LRB-_-LRB- T_NN log_NN -LRB-_-LRB- n_NN /_: -RRB-_-RRB- -RRB-_-RRB- ,_, taking_VBG the_DT no-monopoly_JJ parameter_NN ,_, ,_, as_IN a_DT constant_JJ ._.
Thus_RB ,_, our_PRP$ algorithm_NN performs_VBZ much_RB better_JJR than_IN the_DT naive_JJ scheme_NN ,_, which_WDT computes_VBZ the_DT VCG_NNP payment_NN for_IN each_DT agent_NN by_IN solving_VBG a_DT new_JJ instance_NN of_IN generalized_VBN knapsack_NN problem_NN ._.
The_DT speed_NN up_RP comes_VBZ from_IN the_DT way_NN we_PRP solve_VBP iKnapsacki_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- ._.
Time_NNP complexity_NN of_IN computing_NN iKnapsacki_NN -LRB-_-LRB- ,_, j_NN -RRB-_-RRB- by_IN creating_VBG a_DT new_JJ dynamic_JJ programming_NN table_NN will_MD be_VB O_NN -LRB-_-LRB- n2_NN -RRB-_-RRB- but_CC by_IN using_VBG the_DT forward_JJ and_CC backward_RB tables_NNS ,_, the_DT complexity_NN is_VBZ reduced_VBN to_TO O_NN -LRB-_-LRB- n_NN log_NN n_NN -RRB-_-RRB- ._.
We_PRP can_MD further_RB improve_VB the_DT time_NN complexity_NN of_IN our_PRP$ algorithm_NN by_IN computing_VBG Eq_NN ._.
#_# more_RBR efficiently_RB ._.
Currently_RB ,_, the_DT algorithm_NN uses_VBZ heap_NN ,_, which_WDT has_VBZ logarithmic_JJ update_VBP time_NN ._.
In_IN worst_JJS case_NN ,_, we_PRP can_MD have_VB two_CD heap_NN update_VBP operations_NNS for_IN each_DT element_NN ,_, which_WDT makes_VBZ the_DT time_NN complexity_NN super_JJ linear_NN ._.
If_IN we_PRP can_MD compute_VB Eq_NNP ._.
#_# in_IN linear_JJ time_NN then_RB the_DT complexity_NN of_IN computing_VBG the_DT VCG_NNP payment_NN will_MD be_VB same_JJ as_IN the_DT complexity_NN of_IN solving_VBG a_DT single_JJ generalized_VBN knapsack_NN problem_NN ._.
5_CD ._.
CONCLUSIONS_NNS We_PRP presented_VBD a_DT fully_RB polynomial-time_JJ approximation_NN scheme_NN for_IN the_DT single-good_JJ multi-unit_JJ auction_NN problem_NN ,_, using_VBG marginal_JJ decreasing_VBG piecewise_JJ constant_JJ bidding_NN language_NN ._.
Our_PRP$ scheme_NN is_VBZ both_CC approximately_RB efficient_JJ and_CC approximately_RB strategyproof_NN within_IN any_DT specified_JJ factor_NN >_JJR #_# ._.
As_IN such_JJ it_PRP is_VBZ an_DT example_NN of_IN computationally_RB tractable_JJ -_: dominance_NN result_NN ,_, as_RB well_RB as_IN an_DT example_NN of_IN a_DT non-trivial_JJ but_CC approximable_JJ allocation_NN problem_NN ._.
It_PRP is_VBZ particularly_RB interesting_JJ that_IN we_PRP are_VBP able_JJ to_TO compute_VB the_DT payments_NNS to_TO n_NN agents_NNS in_IN a_DT VCG-based_JJ mechanism_NN in_IN worst-case_JJ time_NN O_NN -LRB-_-LRB- T_NN log_NN n_NN -RRB-_-RRB- ,_, where_WRB T_NN is_VBZ the_DT time_NN complexity_NN to_TO compute_VB the_DT solution_NN to_TO a_DT single_JJ allocation_NN problem_NN ._.
6_CD ._.
REFERENCES_NNS -LSB-_-LRB- #_# -RSB-_-RRB- L_NN M_NN Ausubel_NNP and_CC P_NN R_NN Milgrom_NN ._.
Ascending_VBG auctions_NNS with_IN package_NN bidding_NN ._.
Frontiers_NNS of_IN Theoretical_JJ Economics_NNP ,_, #_# :_: 1-42_CD ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- S_NN Bikchandani_NNS ,_, S_NN de_IN Vries_NNP ,_, J_NNP Schummer_NNP ,_, and_CC R_NN V_NN Vohra_NNP ._.
Linear_JJ programming_NN and_CC Vickrey_NNP auctions_NNS ._.
Technical_NNP report_NN ,_, Anderson_NNP Graduate_NNP School_NNP of_IN Management_NNP ,_, U_NNP ._.
C_NN ._.
L_NN ._.
A_DT ._.
,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- S_NN Bikchandani_NNS and_CC J_NN M_NN Ostroy_NN ._.
The_DT package_NN assignment_NN model_NN ._.
Journal_NNP of_IN Economic_NNP Theory_NNP ,_, ####_CD ._.
Forthcoming_JJ ._.
-LSB-_-LRB- #_# -RSB-_-RRB- K_NNP Chatterjee_NNP and_CC W_NNP Samuelson_NNP ._.
Bargaining_VBG under_IN incomplete_JJ information_NN ._.
Operations_NNP Research_NNP ,_, ##_CD :_: 835-851_CD ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- E_NN H_NN Clarke_NNP ._.
Multipart_JJ pricing_NN of_IN public_JJ goods_NNS ._.
Public_NNP Choice_NNP ,_, 11_CD :_: 17-33_CD ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- S_NN de_IN Vries_NNP and_CC R_NNP V_NNP Vohra_NNP ._.
Combinatorial_JJ auctions_NNS :_: A_DT survey_NN ._.
Informs_NNP Journal_NNP on_IN Computing_NNP ,_, ####_CD ._.
Forthcoming_JJ ._.
-LSB-_-LRB- #_# -RSB-_-RRB- M_NN Eso_NN ,_, S_NN Ghosh_NNP ,_, J_NNP R_NNP Kalagnanam_NNP ,_, and_CC L_NN Ladanyi_NN ._.
Bid_NN evaluation_NN in_IN procurement_NN auctions_NNS with_IN piece-wise_JJ linear_JJ supply_NN curves_NNS ._.
Technical_NNP report_NN ,_, IBM_NNP TJ_NNP Watson_NNP Research_NNP Center_NNP ,_, ####_CD ._.
in_IN preparation_NN ._.
-LSB-_-LRB- #_# -RSB-_-RRB- J_NNP Feigenbaum_NNP and_CC S_NN Shenker_NN ._.
Distributed_VBN Algorithmic_JJ Mechanism_NN Design_NN :_: Recent_JJ Results_NNS and_CC Future_JJ Directions_NNS ._.
In_IN Proceedings_NNP of_IN the_DT 6th_JJ International_NNP Workshop_NNP on_IN Discrete_NNP Algorithms_NNPS and_CC Methods_NNS for_IN Mobile_NNP Computing_NNP and_CC Communications_NNPS ,_, pages_NNS 1-13_CD ,_, 2002_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- M_NN R_NN Garey_NN and_CC D_NN S_NN Johnson_NNP ._.
Computers_NNS and_CC Intractability_NNP :_: A_NNP Guide_NNP to_TO the_DT Theory_NNP of_IN NP-Completeness_NN ._.
W_NN ._.
H_NN ._.
Freeman_NNP and_CC Company_NNP ,_, New_NNP York_NNP ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- G_NN V_NN Gens_NNS and_CC E_NN V_NN Levner_NN ._.
Computational_JJ complexity_NN of_IN approximation_NN algorithms_NNS for_IN combinatorial_JJ problems_NNS ._.
In_IN Mathematical_JJ Foundation_NNP of_IN Computer_NNP Science_NNP ,_, 292-300_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- T_NN Groves_NNS ._.
Incentives_NNS in_IN teams_NNS ._.
Econometrica_NNP ,_, ##_CD :_: 617-631_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- J_NN R_NN Kalagnanam_NN ,_, A_DT J_NN Davenport_NNP ,_, and_CC H_NN S_NN Lee_NNP ._.
Computational_JJ aspects_NNS of_IN clearing_VBG continuous_JJ call_NN double_JJ auctions_NNS with_IN assignment_NN constraints_NNS and_CC indivisible_JJ demand_NN ._.
Electronic_JJ Commerce_NNP Journal_NNP ,_, #_# -LRB-_-LRB- #_# -RRB-_-RRB- :_: 221-238_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- V_NN Krishna_NNP ._.
Auction_NN Theory_NNP ._.
Academic_NNP Press_NNP ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- V_NN Krishna_NNP and_CC M_NNP Perry_NNP ._.
Efficient_JJ mechanism_NN design_NN ._.
Technical_NNP report_NN ,_, Pennsylvania_NNP State_NNP University_NNP ,_, ####_CD ._.
Available_JJ at_IN :_: http_NN :_: /_: /_: econ_NN ._.
la_DT ._.
psu_NN ._.
edu_FW /_: vkrishna_NN /_: vcg18_NN ._.
ps_NNS ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- D_NN Lehmann_NNP ,_, L_NN I_PRP O_VBP ''_'' Callaghan_NNP ,_, and_CC Y_NN Shoham_NNP ._.
Truth_NN revelation_NN in_IN approximately_RB efficient_JJ combinatorial_JJ auctions_NNS ._.
JACM_NNP ,_, 49_CD -LRB-_-LRB- #_# -RRB-_-RRB- :_: 577-602_CD ,_, September_NNP ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- R_NN B_NN Myerson_NN ._.
Optimal_JJ auction_NN design_NN ._.
Mathematics_NN of_IN Operation_NNP Research_NNP ,_, #_# :_: 58-73_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- R_NN B_NN Myerson_NN and_CC M_NN A_NN Satterthwaite_NN ._.
Efficient_JJ mechanisms_NNS for_IN bilateral_JJ trading_NN ._.
Journal_NNP of_IN Economic_NNP Theory_NNP ,_, ##_CD :_: 265-281_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- N_NN Nisan_NN and_CC A_NN Ronen_NN ._.
Computationally_RB feasible_JJ VCG_NNP mechanisms_NNS ._.
In_IN ACM-EC_NN ,_, pages_NNS 242-252_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- D_NN C_NN Parkes_NN ,_, J_NNP R_NNP Kalagnanam_NNP ,_, and_CC M_NN Eso_NN ._.
Achieving_VBG budget-balance_NN with_IN Vickrey-based_JJ payment_NN schemes_NNS in_IN exchanges_NNS ._.
In_IN IJCAI_NNP ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- M_NN H_NN Rothkopf_NNP ,_, A_NNP Pekec_NNP ,_, and_CC R_NN M_NN Harstad_NNP ._.
Computationally_RB manageable_JJ combinatorial_JJ auctions_NNS ._.
Management_NNP Science_NNP ,_, 44_CD -LRB-_-LRB- #_# -RRB-_-RRB- :_: 1131-1147_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- J_NN Schummer_NN ._.
Almost_RB dominant_JJ strategy_NN implementation_NN ._.
Technical_NNP report_NN ,_, MEDS_NNP Department_NNP ,_, Kellogg_NNP Graduate_NNP School_NNP of_IN Management_NNP ,_, ####_CD ._.
-LSB-_-LRB- ##_CD -RSB-_-RRB- W_NNP Vickrey_NNP ._.
Counterspeculation_NNP ,_, auctions_NNS ,_, and_CC competitive_JJ sealed_JJ tenders_NNS ._.
Journal_NNP of_IN Finance_NNP ,_, ##_CD :_: 8-37_CD ,_, ####_CD ._.
175_CD
