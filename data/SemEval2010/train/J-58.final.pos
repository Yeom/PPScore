Towards_IN Truthful_JJ Mechanisms_NNS for_IN Binary_NNP Demand_NN Games_NNPS :_: A_DT General_NNP Framework_NNP Ming-Yang_NNP Kao_NNP Dept_NNP ._.
of_IN Computer_NNP Science_NNP Northwestern_NNP University_NNP Evanston_NNP ,_, IL_NN ,_, USA_NNP kao_FW @_SYM cs_NNS ._.
northwestern_JJ ._.
edu_NN Xiang-Yang_NNP Li_NNP Dept_NNP ._.
of_IN Computer_NNP Science_NNP Illinois_NNP Institute_NNP of_IN Technology_NNP Chicago_NNP ,_, IL_NN ,_, USA_NNP xli_NNPS @_SYM cs_NNS ._.
iit_NN ._.
edu_NN WeiZhao_NNP Wang_NNP Dept_NNP ._.
of_IN Computer_NNP Science_NNP Illinois_NNP Institute_NNP of_IN Technology_NNP Chicago_NNP ,_, IL_NN ,_, USA_NNP wangwei4_NN @_IN iit_NN ._.
edu_NN ABSTRACT_NN The_DT family_NN of_IN Vickrey-Clarke-Groves_NNP -LRB-_-LRB- VCG_NNP -RRB-_-RRB- mechanisms_NNS is_VBZ arguably_RB the_DT most_RBS celebrated_JJ achievement_NN in_IN truthful_JJ mechanism_NN design_NN ._.
However_RB ,_, VCG_NNP mechanisms_NNS have_VBP their_PRP$ limitations_NNS ._.
They_PRP only_RB apply_VBP to_TO optimization_NN problems_NNS with_IN a_DT utilitarian_JJ -LRB-_-LRB- or_CC affine_NN -RRB-_-RRB- objective_JJ function_NN ,_, and_CC their_PRP$ output_NN should_MD optimize_VB the_DT objective_JJ function_NN ._.
For_IN many_JJ optimization_NN problems_NNS ,_, finding_VBG the_DT optimal_JJ output_NN is_VBZ computationally_RB intractable_JJ ._.
If_IN we_PRP apply_VBP VCG_NN mechanisms_NNS to_TO polynomial-time_JJ algorithms_NNS that_WDT approximate_JJ the_DT optimal_JJ solution_NN ,_, the_DT resulting_VBG mechanisms_NNS may_MD no_RB longer_RB be_VB truthful_JJ ._.
In_IN light_NN of_IN these_DT limitations_NNS ,_, it_PRP is_VBZ useful_JJ to_TO study_VB whether_IN we_PRP can_MD design_VB a_DT truthful_JJ non-VCG_JJ payment_NN scheme_NN that_WDT is_VBZ computationally_RB tractable_JJ for_IN a_DT given_VBN allocation_NN rule_NN O_NN ._.
In_IN this_DT paper_NN ,_, we_PRP focus_VBP our_PRP$ attention_NN on_IN binary_JJ demand_NN games_NNS in_IN which_WDT the_DT agents_NNS ''_'' only_RB available_JJ actions_NNS are_VBP to_TO take_VB part_NN in_IN the_DT a_DT game_NN or_CC not_RB to_TO ._.
For_IN these_DT problems_NNS ,_, we_PRP prove_VBP that_IN a_DT truthful_JJ mechanism_NN M_NN =_JJ -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- exists_VBZ with_IN a_DT proper_JJ payment_NN method_NN P_NN iff_IN the_DT allocation_NN rule_NN O_NN satisfies_VBZ a_DT certain_JJ monotonicity_NN property_NN ._.
We_PRP provide_VBP a_DT general_JJ framework_NN to_TO design_VB such_JJ P_NN ._.
We_PRP further_RB propose_VBP several_JJ general_JJ composition-based_JJ techniques_NNS to_TO compute_VB P_NN efficiently_RB for_IN various_JJ types_NNS of_IN output_NN ._.
In_IN particular_JJ ,_, we_PRP show_VBP how_WRB P_NN can_MD be_VB computed_VBN through_IN or_CC /_: and_CC combinations_NNS ,_, round-based_JJ combinations_NNS ,_, and_CC some_DT more_RBR complex_JJ combinations_NNS of_IN the_DT outputs_NNS from_IN subgames_NNS ._.
Categories_NNS and_CC Subject_NNP Descriptors_NNPS F_NN ._.
#_# -LSB-_-LRB- Analysis_NN of_IN Algorithms_NNS and_CC Problem_NNP Complexity_NNP -RSB-_-RRB- :_: General_NNP ;_: J_NN ._.
#_# -LSB-_-LRB- Social_NNP and_CC Behavioral_NNP Sciences_NNPS -RSB-_-RRB- :_: Economics_NNP ;_: K_NNP ._.
#_# ._.
#_# -LSB-_-LRB- Computer_NN and_CC Society_NN -RSB-_-RRB- :_: Electronic_JJ Commerce_NNP General_NNP Terms_NNS Algorithms_NNS ,_, Economics_NNP ,_, Theory_NNP 1_CD ._.
INTRODUCTION_NN In_IN recent_JJ years_NNS ,_, with_IN the_DT rapid_JJ development_NN of_IN the_DT Internet_NN ,_, many_JJ protocols_NNS and_CC algorithms_NNS have_VBP been_VBN proposed_VBN to_TO make_VB the_DT Internet_NN more_RBR efficient_JJ and_CC reliable_JJ ._.
The_DT Internet_NN is_VBZ a_DT complex_JJ distributed_VBN system_NN where_WRB a_DT multitude_NN of_IN heterogeneous_JJ agents_NNS cooperate_VBP to_TO achieve_VB some_DT common_JJ goals_NNS ,_, and_CC the_DT existing_VBG protocols_NNS and_CC algorithms_NNS often_RB assume_VBP that_IN all_DT agents_NNS will_MD follow_VB the_DT prescribed_JJ rules_NNS without_IN deviation_NN ._.
However_RB ,_, in_IN some_DT settings_NNS where_WRB the_DT agents_NNS are_VBP selfish_JJ instead_RB of_IN altruistic_JJ ,_, it_PRP is_VBZ more_RBR reasonable_JJ to_TO assume_VB these_DT agents_NNS are_VBP rational_JJ -_: maximize_VB their_PRP$ own_JJ profits_NNS -_: according_VBG to_TO the_DT neoclassic_JJ economics_NNS ,_, and_CC new_JJ models_NNS are_VBP needed_VBN to_TO cope_VB with_IN the_DT selfish_JJ behavior_NN of_IN such_JJ agents_NNS ._.
Towards_IN this_DT end_NN ,_, Nisan_NNP and_CC Ronen_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- proposed_VBD the_DT framework_NN of_IN algorithmic_JJ mechanism_NN design_NN and_CC applied_VBD VCG_NNP mechanisms_NNS to_TO some_DT fundamental_JJ problems_NNS in_IN computer_NN science_NN ,_, including_VBG shortest_JJS paths_NNS ,_, minimum_JJ spanning_VBG trees_NNS ,_, and_CC scheduling_NN on_IN unrelated_JJ machines_NNS ._.
The_DT VCG_NNP mechanisms_NNS -LSB-_-LRB- #_# ,_, ##_NN ,_, ##_NN -RSB-_-RRB- are_VBP applicable_JJ to_TO mechanism_NN design_NN problems_NNS whose_WP$ outputs_NNS optimize_VBP the_DT utilitarian_JJ objective_JJ function_NN ,_, which_WDT is_VBZ simply_RB the_DT sum_NN of_IN all_DT agents_NNS ''_'' valuations_NNS ._.
Unfortunately_RB ,_, some_DT objective_JJ functions_NNS are_VBP not_RB utilitarian_JJ ;_: even_RB for_IN those_DT problems_NNS with_IN a_DT utilitarian_JJ objective_JJ function_NN ,_, sometimes_RB it_PRP is_VBZ impossible_JJ to_TO find_VB the_DT optimal_JJ output_NN in_IN polynomial_JJ time_NN unless_IN P_NN =_JJ NP_NN ._.
Some_DT mechanisms_NNS other_JJ than_IN VCG_NNP mechanism_NN are_VBP needed_VBN to_TO address_VB these_DT issues_NNS ._.
Archer_NNP and_CC Tardos_NNP -LSB-_-LRB- #_# -RSB-_-RRB- studied_VBD a_DT scheduling_NN problem_NN where_WRB it_PRP is_VBZ NP-Hard_JJ to_TO find_VB the_DT optimal_JJ output_NN ._.
They_PRP pointed_VBD out_RP that_IN a_DT certain_JJ monotonicity_NN property_NN of_IN the_DT output_NN work_NN load_NN is_VBZ a_DT necessary_JJ and_CC sufficient_JJ condition_NN for_IN the_DT existence_NN of_IN a_DT truthful_JJ mechanism_NN for_IN their_PRP$ scheduling_NN problem_NN ._.
Auletta_NNP et_FW al_FW ._.
-LSB-_-LRB- #_# -RSB-_-RRB- studied_VBD a_DT similar_JJ scheduling_NN problem_NN ._.
They_PRP provided_VBD a_DT family_NN of_IN deterministic_JJ truthful_JJ -LRB-_-LRB- #_# +_CC -RRB-_-RRB- -_: approximation_NN mechanisms_NNS for_IN any_DT fixed_JJ number_NN of_IN machines_NNS and_CC several_JJ -LRB-_-LRB- #_# +_CC -RRB-_-RRB- -_: truthful_JJ mechanisms_NNS for_IN some_DT NP-hard_JJ restrictions_NNS of_IN their_PRP$ scheduling_NN problem_NN ._.
Lehmann_NNP et_FW al_FW ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- studied_VBD the_DT single-minded_JJ combinatorial_JJ auction_NN and_CC gave_VBD a_DT m-approximation_NN truthful_JJ mechanism_NN ,_, where_WRB m_NN is_VBZ the_DT number_NN of_IN goods_NNS ._.
They_PRP also_RB pointed_VBD out_RP that_IN a_DT certain_JJ monotonicity_NN in_IN the_DT allocation_NN rule_NN can_MD lead_VB to_TO a_DT truthful_JJ mechanism_NN ._.
The_DT work_NN of_IN Mu_NN ''_'' alem_NN and_CC Nisan_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- is_VBZ the_DT closest_JJS in_IN spirit_NN to_TO our_PRP$ work_NN ._.
They_PRP characterized_VBD all_DT truthful_JJ mechanisms_NNS based_VBN on_IN a_DT certain_JJ monotonicity_NN property_NN in_IN a_DT single-minded_JJ auction_NN setting_NN ._.
They_PRP also_RB showed_VBD how_WRB to_TO used_VBN MAX_NNP and_CC IF-THEN-ELSE_NNP to_TO combine_VB outputs_NNS from_IN subproblems_NNS ._.
As_IN shown_VBN in_IN this_DT paper_NN ,_, the_DT MAX_NNP and_CC IF-THEN-ELSE_NNP combinations_NNS are_VBP special_JJ cases_NNS of_IN the_DT composition-based_JJ techniques_NNS that_IN we_PRP present_VBP in_IN this_DT paper_NN for_IN computing_VBG the_DT payments_NNS in_IN polynomial_JJ time_NN under_IN mild_JJ assumptions_NNS ._.
More_RBR generally_RB ,_, we_PRP study_VBD how_WRB to_TO design_VB truthful_JJ mechanisms_NNS for_IN binary_JJ demand_NN games_NNS where_WRB the_DT allocation_NN of_IN an_DT agent_NN is_VBZ either_CC selected_VBN or_CC not_RB selected_VBN ._.
We_PRP also_RB assume_VBP that_IN the_DT valuations_NNS 213_CD of_IN agents_NNS are_VBP uncorrelated_JJ ,_, i_FW ._.
e_LS ._.
,_, the_DT valuation_NN of_IN an_DT agent_NN only_RB depends_VBZ on_IN its_PRP$ own_JJ allocation_NN and_CC type_NN ._.
Recall_VB that_IN a_DT mechanism_NN M_NN =_JJ -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- consists_VBZ of_IN two_CD parts_NNS ,_, an_DT allocation_NN rule_NN O_NN and_CC a_DT payment_NN scheme_NN P_NN ._.
Previously_RB ,_, it_PRP is_VBZ often_RB assumed_VBN that_IN there_EX is_VBZ an_DT objective_JJ function_NN g_NN and_CC an_DT allocation_NN rule_NN O_NN ,_, that_IN either_CC optimizes_VBZ g_NN exactly_RB or_CC approximately_RB ._.
In_IN contrast_NN to_TO the_DT VCG_NNP mechanisms_NNS ,_, we_PRP do_VBP not_RB require_VB that_IN the_DT allocation_NN should_MD optimize_VB the_DT objective_JJ function_NN ._.
In_IN fact_NN ,_, we_PRP do_VBP not_RB even_RB require_VB the_DT existence_NN of_IN an_DT objective_JJ function_NN ._.
Given_VBN any_DT allocation_NN rule_NN O_NN for_IN a_DT binary_JJ demand_NN game_NN ,_, we_PRP showed_VBD that_IN a_DT truthful_JJ mechanism_NN M_NN =_JJ -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- exists_VBZ for_IN the_DT game_NN if_IN and_CC only_RB if_IN O_NN satisfies_VBZ a_DT certain_JJ monotonicity_NN property_NN ._.
The_DT monotonicity_NN property_NN only_RB guarantees_VBZ the_DT existence_NN of_IN a_DT payment_NN scheme_NN P_NN such_JJ that_IN -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- is_VBZ truthful_JJ ._.
We_PRP complement_VBP this_DT existence_NN theorem_NN with_IN a_DT general_JJ framework_NN to_TO design_VB such_PDT a_DT payment_NN scheme_NN P_NN ._.
Furthermore_RB ,_, we_PRP present_VBP general_JJ techniques_NNS to_TO compute_VB the_DT payment_NN when_WRB the_DT output_NN is_VBZ a_DT composition_NN of_IN the_DT outputs_NNS of_IN subgames_NNS through_IN the_DT operators_NNS or_CC and_CC and_CC ;_: through_IN round-based_JJ combinations_NNS ;_: or_CC through_IN intermediate_JJ results_NNS ,_, which_WDT may_MD be_VB themselves_PRP computed_VBN from_IN other_JJ subproblems_NNS ._.
The_DT remainder_NN of_IN the_DT paper_NN is_VBZ organized_VBN as_IN follows_VBZ ._.
In_IN Section_NN 2_CD ,_, we_PRP discuss_VBP preliminaries_NNS and_CC previous_JJ works_NNS ,_, define_VBP binary_JJ demand_NN games_NNS and_CC discuss_VBP the_DT basic_JJ assumptions_NNS about_IN binary_JJ demand_NN games_NNS ._.
In_IN Section_NN #_# ,_, we_PRP show_VBP that_IN O_NN satisfying_VBG a_DT certain_JJ monotonicity_NN property_NN is_VBZ a_DT necessary_JJ and_CC sufficient_JJ condition_NN for_IN the_DT existence_NN of_IN a_DT truthful_JJ mechanism_NN M_NN =_JJ -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- ._.
A_DT framework_NN is_VBZ then_RB proposed_VBN in_IN Section_NN #_# to_TO compute_VB the_DT payment_NN P_NN in_IN polynomial_JJ time_NN for_IN several_JJ types_NNS of_IN allocation_NN rules_NNS O_NN ._.
In_IN Section_NN #_# ,_, we_PRP provide_VBP several_JJ examples_NNS to_TO demonstrate_VB the_DT effectiveness_NN of_IN our_PRP$ general_JJ framework_NN ._.
We_PRP conclude_VBP our_PRP$ paper_NN in_IN Section_NN #_# with_IN some_DT possible_JJ future_JJ directions_NNS ._.
2_LS ._.
PRELIMINARIES_NN 2_CD ._.
#_# Mechanism_NN Design_NN As_IN usually_RB done_VBN in_IN the_DT literatures_NNS about_IN the_DT designing_VBG of_IN algorithms_NNS or_CC protocols_NNS with_IN inputs_NNS from_IN individual_JJ agents_NNS ,_, we_PRP adopt_VBP the_DT assumption_NN in_IN neoclassic_JJ economics_NNS that_IN all_DT agents_NNS are_VBP rational_JJ ,_, i_FW ._.
e_LS ._.
,_, they_PRP respond_VBP to_TO well-defined_JJ incentives_NNS and_CC will_MD deviate_VB from_IN the_DT protocol_NN only_RB if_IN the_DT deviation_NN improves_VBZ their_PRP$ gain_NN ._.
A_DT standard_JJ model_NN for_IN mechanism_NN design_NN is_VBZ as_IN follows_VBZ ._.
There_EX are_VBP n_NN agents_NNS #_# ,_, ..._: ,_, n_NN and_CC each_DT agent_NN i_FW has_VBZ some_DT private_JJ information_NN ti_NN ,_, called_VBD its_PRP$ type_NN ,_, only_RB known_VBN to_TO itself_PRP ._.
For_IN example_NN ,_, the_DT type_NN ti_NN can_MD be_VB the_DT cost_NN that_WDT agent_NN i_FW incurs_VBZ for_IN forwarding_NN a_DT packet_NN in_IN a_DT network_NN or_CC can_MD be_VB a_DT payment_NN that_IN the_DT agent_NN is_VBZ willing_JJ to_TO pay_VB for_IN a_DT good_JJ in_IN an_DT auction_NN ._.
The_DT agents_NNS ''_'' types_NNS define_VBP the_DT type_NN vector_NN t_NN =_JJ -LRB-_-LRB- t1_NN ,_, t2_NN ,_, ..._: ,_, tn_NN -RRB-_-RRB- ._.
Each_DT agent_NN i_FW has_VBZ a_DT set_NN of_IN strategies_NNS Ai_NNP from_IN which_WDT it_PRP can_MD choose_VB ._.
For_IN each_DT input_NN vector_NN a_DT =_JJ -LRB-_-LRB- a1_NN ,_, ..._: ,_, an_DT -RRB-_-RRB- where_WRB agent_NN i_FW plays_VBZ strategy_NN ai_VBP Ai_NNP ,_, the_DT mechanism_NN M_NN =_JJ -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- computes_VBZ an_DT output_NN o_NN =_JJ O_NN -LRB-_-LRB- a_DT -RRB-_-RRB- and_CC a_DT payment_NN vector_NN p_NN -LRB-_-LRB- a_DT -RRB-_-RRB- =_JJ -LRB-_-LRB- p1_NN -LRB-_-LRB- a_DT -RRB-_-RRB- ,_, ..._: ,_, pn_NN -LRB-_-LRB- a_DT -RRB-_-RRB- -RRB-_-RRB- ._.
Here_RB the_DT payment_NN pi_NN -LRB-_-LRB- -RRB-_-RRB- is_VBZ the_DT money_NN given_VBN to_TO agent_NN i_FW and_CC depends_VBZ on_IN the_DT strategies_NNS used_VBN by_IN the_DT agents_NNS ._.
A_DT game_NN is_VBZ defined_VBN as_IN G_NN =_JJ -LRB-_-LRB- S_NN ,_, M_NN -RRB-_-RRB- ,_, where_WRB S_NN is_VBZ the_DT setting_NN for_IN the_DT game_NN G_NN ._.
Here_RB ,_, S_NN consists_VBZ the_DT parameters_NNS of_IN the_DT game_NN that_WDT are_VBP set_VBN before_IN the_DT game_NN starts_VBZ and_CC do_VBP not_RB depend_VB on_IN the_DT players_NNS ''_'' strategies_NNS ._.
For_IN example_NN ,_, in_IN a_DT unicast_JJ routing_VBG game_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- ,_, the_DT setting_NN consists_VBZ of_IN the_DT topology_NN of_IN the_DT network_NN ,_, the_DT source_NN node_NN and_CC the_DT destination_NN node_NN ._.
Throughout_IN this_DT paper_NN ,_, unless_IN explicitly_RB mentioned_VBN otherwise_RB ,_, the_DT setting_NN S_NN of_IN the_DT game_NN is_VBZ fixed_VBN and_CC we_PRP are_VBP only_RB interested_JJ in_IN how_WRB to_TO design_VB P_NN for_IN a_DT given_VBN allocation_NN rule_NN O_NN ._.
A_DT valuation_NN function_NN v_LS -LRB-_-LRB- ti_NN ,_, o_NN -RRB-_-RRB- assigns_VBZ a_DT monetary_JJ amount_NN to_TO agent_NN i_FW for_IN each_DT possible_JJ output_NN o_NN ._.
Everything_NN about_IN a_DT game_NN S_NN ,_, M_NN ,_, including_VBG the_DT setting_NN S_NN ,_, the_DT allocation_NN rule_NN O_NN and_CC the_DT payment_NN scheme_NN P_NN ,_, is_VBZ public_JJ knowledge_NN except_IN the_DT agent_NN i_FW ''_'' s_VBZ actual_JJ type_NN ti_NN ,_, which_WDT is_VBZ private_JJ information_NN to_TO agent_NN i_FW ._.
Let_VB ui_NN -LRB-_-LRB- ti_NN ,_, o_NN -RRB-_-RRB- denote_VBP the_DT utility_NN of_IN agent_NN i_FW at_IN the_DT outcome_NN of_IN the_DT game_NN o_NN ,_, given_VBN its_PRP$ preferences_NNS ti_NNS ._.
Here_RB ,_, following_VBG a_DT common_JJ assumption_NN in_IN the_DT literature_NN ,_, we_PRP assume_VBP the_DT utility_NN for_IN agent_NN i_FW is_VBZ quasi-linear_JJ ,_, i_FW ._.
e_LS ._.
,_, ui_NN -LRB-_-LRB- ti_NN ,_, o_NN -RRB-_-RRB- =_JJ v_LS -LRB-_-LRB- ti_NN ,_, o_NN -RRB-_-RRB- +_CC Pi_NN -LRB-_-LRB- a_DT -RRB-_-RRB- ._.
Let_VB a_DT |_NN i_FW ai_VBP =_JJ -LRB-_-LRB- a1_NN ,_, ,_, ai1_NN ,_, ai_VBP ,_, ai_VBP +_CC #_# ,_, ,_, an_DT -RRB-_-RRB- ,_, i_FW ._.
e_LS ._.
,_, each_DT agent_NN j_NN =_JJ i_FW plays_VBZ an_DT action_NN aj_NN except_IN that_IN the_DT agent_NN i_FW plays_VBZ ai_VBP ._.
Let_VB ai_VBP =_JJ -LRB-_-LRB- a1_NN ,_, ,_, ai1_NN ,_, ai_VBP +_CC #_# ,_, ,_, an_DT -RRB-_-RRB- denote_VBP the_DT actions_NNS of_IN all_DT agents_NNS except_IN i_FW ._.
Sometimes_RB ,_, we_PRP write_VBP -LRB-_-LRB- ai_VBP ,_, bi_VBP -RRB-_-RRB- as_IN a_DT |_NN i_FW bi_FW ._.
An_DT action_NN ai_VBP is_VBZ called_VBN dominant_JJ for_IN i_FW if_IN it_PRP -LRB-_-LRB- weakly_RB -RRB-_-RRB- maximizes_VBZ the_DT utility_NN of_IN i_FW for_IN all_DT possible_JJ strategies_NNS bi_NN of_IN other_JJ agents_NNS ,_, i_FW ._.
e_LS ._.
,_, ui_NN -LRB-_-LRB- ti_NN ,_, O_NN -LRB-_-LRB- bi_NN ,_, ai_VBP -RRB-_-RRB- -RRB-_-RRB- ui_NN -LRB-_-LRB- ti_NN ,_, O_NN -LRB-_-LRB- bi_NN ,_, ai_VBP -RRB-_-RRB- -RRB-_-RRB- for_IN all_DT ai_VBP =_JJ ai_VBP and_CC bi_VBP ._.
A_DT direct-revelation_NN mechanism_NN is_VBZ a_DT mechanism_NN in_IN which_WDT the_DT only_JJ actions_NNS available_JJ to_TO each_DT agent_NN are_VBP to_TO report_VB its_PRP$ private_JJ type_NN either_CC truthfully_RB or_CC falsely_RB to_TO the_DT mechanism_NN ._.
An_DT incentive_NN compatible_JJ -LRB-_-LRB- IC_NN -RRB-_-RRB- mechanism_NN is_VBZ a_DT direct-revelation_NN mechanism_NN in_IN which_WDT if_IN an_DT agent_NN reports_VBZ its_PRP$ type_NN ti_NN truthfully_RB ,_, then_RB it_PRP will_MD maximize_VB its_PRP$ utility_NN ._.
Then_RB ,_, in_IN a_DT direct-revelation_NN mechanism_NN satisfying_VBG IC_NN ,_, the_DT payment_NN scheme_NN should_MD satisfy_VB the_DT property_NN that_IN ,_, for_IN each_DT agent_NN i_FW ,_, v_LS -LRB-_-LRB- ti_NN ,_, O_NN -LRB-_-LRB- t_NN -RRB-_-RRB- -RRB-_-RRB- +_CC pi_NN -LRB-_-LRB- t_NN -RRB-_-RRB- v_LS -LRB-_-LRB- ti_NN ,_, O_NN -LRB-_-LRB- t_NN |_CD i_FW ti_FW -RRB-_-RRB- -RRB-_-RRB- +_CC pi_NN -LRB-_-LRB- t_NN |_CD i_FW ti_FW -RRB-_-RRB- ._.
Another_DT common_JJ requirement_NN in_IN the_DT literature_NN for_IN mechanism_NN design_NN is_VBZ so_RB called_VBN individual_JJ rationality_NN or_CC voluntary_JJ participation_NN :_: the_DT agent_NN ''_'' s_NNS utility_NN of_IN participating_VBG in_IN the_DT output_NN of_IN the_DT mechanism_NN is_VBZ not_RB less_JJR than_IN the_DT utility_NN of_IN the_DT agent_NN of_IN not_RB participating_VBG ._.
A_DT direct-revelation_NN mechanism_NN is_VBZ strategproof_JJ if_IN it_PRP satisfies_VBZ both_DT IC_NN and_CC IR_NN properties_NNS ._.
Arguably_RB the_DT most_RBS important_JJ positive_JJ result_NN in_IN mechanism_NN design_NN is_VBZ the_DT generalized_VBN Vickrey-Clarke-Groves_NNP -LRB-_-LRB- VCG_NNP -RRB-_-RRB- mechanism_NN by_IN Vickrey_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- ,_, Clarke_NNP -LSB-_-LRB- #_# -RSB-_-RRB- ,_, and_CC Groves_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
The_DT VCG_NNP mechanism_NN applies_VBZ to_TO -LRB-_-LRB- affine_NN -RRB-_-RRB- maximization_NN problems_NNS where_WRB the_DT objective_JJ function_NN is_VBZ utilitarian_JJ g_NN -LRB-_-LRB- o_NN ,_, t_NN -RRB-_-RRB- =_JJ P_NN i_FW v_LS -LRB-_-LRB- ti_NN ,_, o_NN -RRB-_-RRB- -LRB-_-LRB- i_FW ._.
e_LS ._.
,_, the_DT sum_NN of_IN all_DT agents_NNS ''_'' valuations_NNS -RRB-_-RRB- and_CC the_DT set_NN of_IN possible_JJ outputs_NNS is_VBZ assumed_VBN to_TO be_VB finite_JJ ._.
A_DT direct_JJ revelation_NN mechanism_NN M_NN =_JJ -LRB-_-LRB- O_NN -LRB-_-LRB- t_NN -RRB-_-RRB- ,_, P_NN -LRB-_-LRB- t_NN -RRB-_-RRB- -RRB-_-RRB- belongs_VBZ to_TO the_DT VCG_NNP family_NN if_IN -LRB-_-LRB- #_# -RRB-_-RRB- the_DT allocation_NN O_NN -LRB-_-LRB- t_NN -RRB-_-RRB- maximizesP_NN i_FW v_LS -LRB-_-LRB- ti_NN ,_, o_NN -RRB-_-RRB- ,_, and_CC -LRB-_-LRB- #_# -RRB-_-RRB- the_DT payment_NN to_TO agent_NN i_FW is_VBZ pi_NN -LRB-_-LRB- t_NN -RRB-_-RRB- =_JJ P_NN j_NN =_JJ i_FW vj_FW -LRB-_-LRB- tj_NN ,_, O_NN -LRB-_-LRB- t_NN -RRB-_-RRB- -RRB-_-RRB- +_CC hi_UH -LRB-_-LRB- ti_NN -RRB-_-RRB- ,_, where_WRB hi_UH -LRB-_-LRB- -RRB-_-RRB- is_VBZ an_DT arbitrary_JJ function_NN of_IN ti_NN ._.
Under_IN mild_JJ assumptions_NNS ,_, VCG_NNP mechanisms_NNS are_VBP the_DT only_JJ truthful_JJ implementations_NNS for_IN utilitarian_JJ problems_NNS -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
The_DT allocation_NN rule_NN of_IN a_DT VCG_NNP mechanism_NN is_VBZ required_VBN to_TO maximize_VB the_DT objective_JJ function_NN in_IN the_DT range_NN of_IN the_DT allocation_NN function_NN ._.
This_DT makes_VBZ the_DT mechanism_NN computationally_RB intractable_JJ in_IN many_JJ cases_NNS ._.
Furthermore_RB ,_, replacing_VBG an_DT optimal_JJ algorithm_NN for_IN computing_VBG the_DT output_NN with_IN an_DT approximation_NN algorithm_NN usually_RB leads_VBZ to_TO untruthful_JJ mechanisms_NNS if_IN a_DT VCG_NNP payment_NN scheme_NN is_VBZ used_VBN ._.
In_IN this_DT paper_NN ,_, we_PRP study_VBD how_WRB to_TO design_VB a_DT truthful_JJ mechanism_NN that_WDT does_VBZ not_RB optimize_VB a_DT utilitarian_JJ objective_JJ function_NN ._.
2_LS ._.
#_# Binary_NNP Demand_NN Games_NNPS A_DT binary_JJ demand_NN game_NN is_VBZ a_DT game_NN G_NN =_JJ -LRB-_-LRB- S_NN ,_, M_NN -RRB-_-RRB- ,_, where_WRB M_NN =_JJ -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- and_CC the_DT range_NN of_IN O_NN is_VBZ -LCB-_-LRB- #_# ,_, #_# -RCB-_-RRB- n_NN ._.
In_IN other_JJ words_NNS ,_, the_DT output_NN is_VBZ a_DT n-tuple_JJ vector_NN O_NN -LRB-_-LRB- t_NN -RRB-_-RRB- =_JJ -LRB-_-LRB- O1_NN -LRB-_-LRB- t_NN -RRB-_-RRB- ,_, O2_CD -LRB-_-LRB- t_NN -RRB-_-RRB- ,_, ..._: ,_, On_IN -LRB-_-LRB- t_NN -RRB-_-RRB- -RRB-_-RRB- ,_, where_WRB Oi_NN -LRB-_-LRB- t_NN -RRB-_-RRB- =_JJ #_# -LRB-_-LRB- respectively_RB ,_, #_# -RRB-_-RRB- means_VBZ that_IN agent_NN i_FW is_VBZ -LRB-_-LRB- respectively_RB ,_, is_VBZ not_RB -RRB-_-RRB- selected_VBN ._.
Examples_NNS of_IN binary_JJ demand_NN games_NNS include_VBP :_: unicast_JJ -LSB-_-LRB- ##_CD ,_, ##_CD ,_, #_# -RSB-_-RRB- and_CC multicast_JJ -LSB-_-LRB- ##_CD ,_, ##_CD ,_, #_# -RSB-_-RRB- -LRB-_-LRB- generally_RB subgraph_JJ construction_NN by_IN selecting_VBG some_DT links_NNS /_: nodes_NNS to_TO satisfy_VB some_DT property_NN -RRB-_-RRB- ,_, facility_NN location_NN -LSB-_-LRB- #_# -RSB-_-RRB- ,_, and_CC a_DT certain_JJ auction_NN -LSB-_-LRB- ##_CD ,_, #_# ,_, ##_NN -RSB-_-RRB- ._.
Hereafter_NNP ,_, we_PRP make_VBP the_DT following_VBG further_JJ assumptions_NNS ._.
1_LS ._.
The_DT valuation_NN of_IN the_DT agents_NNS are_VBP not_RB correlated_VBN ,_, i_FW ._.
e_LS ._.
,_, v_LS -LRB-_-LRB- ti_NN ,_, o_NN -RRB-_-RRB- is_VBZ a_DT function_NN of_IN v_LS -LRB-_-LRB- ti_NN ,_, oi_NN -RRB-_-RRB- only_RB is_VBZ denoted_VBN as_IN v_LS -LRB-_-LRB- ti_NN ,_, oi_NN -RRB-_-RRB- ._.
2_LS ._.
The_DT valuation_NN v_LS -LRB-_-LRB- ti_NN ,_, oi_NN -RRB-_-RRB- is_VBZ a_DT publicly_RB known_JJ value_NN and_CC is_VBZ normalized_VBN to_TO #_# ._.
This_DT assumption_NN is_VBZ needed_VBN to_TO guarantee_VB the_DT IR_NNP property_NN ._.
Thus_RB ,_, throughout_IN his_PRP$ paper_NN ,_, we_PRP only_RB consider_VBP these_DT direct-revelation_NN mechanisms_NNS in_IN which_WDT every_DT agent_NN only_RB needs_VBZ to_TO reveal_VB its_PRP$ valuation_NN vi_LS =_JJ v_LS -LRB-_-LRB- ti_NN ,_, #_# -RRB-_-RRB- ._.
214_CD Notice_NNP that_IN in_IN applications_NNS where_WRB agents_NNS providing_VBG service_NN and_CC receiving_VBG payment_NN ,_, e_LS ._.
g_NN ._.
,_, unicast_NN and_CC job_NN scheduling_NN ,_, the_DT valuation_NN vi_LS of_IN an_DT agent_NN i_FW is_VBZ usually_RB negative_JJ ._.
For_IN the_DT convenience_NN of_IN presentation_NN ,_, we_PRP define_VBP the_DT cost_NN of_IN agent_NN as_IN ci_NN =_JJ v_LS -LRB-_-LRB- ti_NN ,_, #_# -RRB-_-RRB- ,_, i_FW ._.
e_LS ._.
,_, it_PRP costs_VBZ agent_NN i_FW ci_FW to_TO provide_VB the_DT service_NN ._.
Throughout_IN this_DT paper_NN ,_, we_PRP will_MD use_VB ci_NN instead_RB of_IN vi_LS in_IN our_PRP$ analysis_NN ._.
All_DT our_PRP$ results_NNS can_MD apply_VB to_TO the_DT case_NN where_WRB the_DT agents_NNS receive_VBP the_DT service_NN rather_RB than_IN provide_VB by_IN setting_VBG ci_NN to_TO negative_JJ ,_, as_IN in_IN auction_NN ._.
In_IN a_DT binary_JJ demand_NN game_NN ,_, if_IN we_PRP want_VBP to_TO optimize_VB an_DT objective_JJ function_NN g_NN -LRB-_-LRB- o_NN ,_, t_NN -RRB-_-RRB- ,_, then_RB we_PRP call_VBP it_PRP a_DT binary_JJ optimization_NN demand_NN game_NN ._.
The_DT main_JJ differences_NNS between_IN the_DT binary_JJ demand_NN games_NNS and_CC those_DT problems_NNS that_WDT can_MD be_VB solved_VBN by_IN VCG_NNP mechanisms_NNS are_VBP :_: 1_CD ._.
The_DT objective_JJ function_NN is_VBZ utilitarian_JJ -LRB-_-LRB- or_CC affine_JJ maximization_NN problem_NN -RRB-_-RRB- for_IN a_DT problem_NN solvable_JJ by_IN VCG_NNP while_IN there_EX is_VBZ no_DT restriction_NN on_IN the_DT objective_JJ function_NN for_IN a_DT binary_JJ demand_NN game_NN ._.
2_LS ._.
The_DT allocation_NN rule_NN O_NN studied_VBN here_RB does_VBZ not_RB necessarily_RB optimize_VB an_DT objective_JJ function_NN ,_, while_IN a_DT VCG_NNP mechanism_NN only_RB uses_VBZ the_DT output_NN that_WDT optimizes_VBZ the_DT objective_JJ function_NN ._.
We_PRP even_RB do_VBP not_RB require_VB the_DT existence_NN of_IN an_DT objective_JJ function_NN ._.
3_LS ._.
We_PRP assume_VBP that_IN the_DT agents_NNS ''_'' valuations_NNS are_VBP not_RB correlated_VBN in_IN a_DT binary_JJ demand_NN game_NN ,_, while_IN the_DT agents_NNS ''_'' valuations_NNS may_MD be_VB correlated_VBN in_IN a_DT VCG_NNP mechanism_NN ._.
In_IN this_DT paper_NN ,_, we_PRP assume_VBP for_IN technical_JJ convenience_NN that_IN the_DT objective_JJ function_NN g_NN -LRB-_-LRB- o_NN ,_, c_NN -RRB-_-RRB- ,_, if_IN exists_VBZ ,_, is_VBZ continuous_JJ with_IN respect_NN to_TO the_DT cost_NN ci_NN ,_, but_CC most_JJS of_IN our_PRP$ results_NNS are_VBP directly_RB applicable_JJ to_TO the_DT discrete_JJ case_NN without_IN any_DT modification_NN ._.
2_LS ._.
#_# Previous_JJ Work_NN Lehmann_NNP et_FW al_FW ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- studied_VBD how_WRB to_TO design_VB an_DT efficient_JJ truthful_JJ mechanism_NN for_IN single-minded_JJ combinatorial_JJ auction_NN ._.
In_IN a_DT singleminded_JJ combinatorial_JJ auction_NN ,_, each_DT agent_NN i_FW -LRB-_-LRB- #_# i_FW n_NN -RRB-_-RRB- only_RB wants_VBZ to_TO buy_VB a_DT subset_NN Si_NNP S_NN with_IN private_JJ price_NN ci_NN ._.
A_DT single-minded_JJ bidder_NN i_FW declares_VBZ a_DT bid_NN bi_NN =_JJ Si_NNP ,_, ai_VBP with_IN Si_NNP S_NN and_CC ai_VBP R_NN +_CC ._.
In_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- ,_, it_PRP is_VBZ assumed_VBN that_IN the_DT set_NN of_IN goods_NNS allocated_VBN to_TO an_DT agent_NN i_FW is_VBZ either_DT Si_NNP or_CC ,_, which_WDT is_VBZ known_VBN as_IN exactness_NN ._.
Lehmann_NNP et_FW al_FW ._.
gave_VBD a_DT greedy_JJ round-based_JJ allocation_NN algorithm_NN ,_, based_VBN on_IN the_DT rank_NN ai_VBP |_CD Si_NNP |_CD #_# /_: #_# ,_, that_WDT has_VBZ an_DT approximation_NN ratio_NN m_NN ,_, where_WRB m_NN is_VBZ the_DT number_NN of_IN goods_NNS in_IN S_NN ._.
Based_VBN on_IN the_DT approximation_NN algorithm_NN ,_, they_PRP gave_VBD a_DT truthful_JJ payment_NN scheme_NN ._.
For_IN an_DT allocation_NN rule_NN satisfying_VBG -LRB-_-LRB- #_# -RRB-_-RRB- exactness_NN :_: the_DT set_NN of_IN goods_NNS allocated_VBN to_TO an_DT agent_NN i_FW is_VBZ either_DT Si_NNP or_CC ;_: -LRB-_-LRB- #_# -RRB-_-RRB- monotonicity_NN :_: proposing_VBG more_JJR money_NN for_IN fewer_JJR goods_NNS can_MD not_RB cause_VB a_DT bidder_NN to_TO lose_VB its_PRP$ bid_NN ,_, they_PRP proposed_VBD a_DT truthful_JJ payment_NN scheme_NN as_IN follows_VBZ :_: -LRB-_-LRB- #_# -RRB-_-RRB- charge_VBP a_DT winning_VBG bidder_NN a_DT certain_JJ amount_NN that_WDT does_VBZ not_RB depend_VB on_IN its_PRP$ own_JJ bidding_NN ;_: -LRB-_-LRB- #_# -RRB-_-RRB- charge_VBP a_DT losing_VBG bidder_NN #_# ._.
Notice_NNP the_DT assumption_NN of_IN exactness_NN reveals_VBZ that_IN the_DT single_JJ minded_VBN auction_NN is_VBZ indeed_RB a_DT binary_JJ demand_NN game_NN ._.
Their_PRP$ payment_NN scheme_NN inspired_VBD our_PRP$ payment_NN scheme_NN for_IN binary_JJ demand_NN game_NN ._.
In_IN -LSB-_-LRB- #_# -RSB-_-RRB- ,_, Archer_NNP et_FW al_FW ._.
studied_VBN the_DT combinatorial_JJ auctions_NNS where_WRB multiple_JJ copies_NNS of_IN many_JJ different_JJ items_NNS are_VBP on_IN sale_NN ,_, and_CC each_DT bidder_NN i_FW desires_NNS only_RB one_CD subset_NN Si_NNP ._.
They_PRP devised_VBD a_DT randomized_VBN rounding_VBG method_NN that_WDT is_VBZ incentive_NN compatible_JJ and_CC gave_VBD a_DT truthful_JJ mechanism_NN for_IN combinatorial_JJ auctions_NNS with_IN single_JJ parameter_NN agents_NNS that_WDT approximately_RB maximizes_VBZ the_DT social_JJ value_NN of_IN the_DT auction_NN ._.
As_IN they_PRP pointed_VBD out_RP ,_, their_PRP$ method_NN is_VBZ strongly_RB truthful_JJ in_IN sense_NN that_IN it_PRP is_VBZ truthful_JJ with_IN high_JJ probability_NN #_# ,_, where_WRB is_VBZ an_DT error_NN probability_NN ._.
On_IN the_DT contrary_NN ,_, in_IN this_DT paper_NN ,_, we_PRP study_VBD how_WRB to_TO design_VB a_DT deterministic_JJ mechanism_NN that_WDT is_VBZ truthful_JJ based_VBN on_IN some_DT given_VBN allocation_NN rules_NNS ._.
In_IN -LSB-_-LRB- #_# -RSB-_-RRB- ,_, Archer_NNP and_CC Tardos_NNP showed_VBD how_WRB to_TO design_VB truthful_JJ mechanisms_NNS for_IN several_JJ combinatorial_JJ problems_NNS where_WRB each_DT agent_NN ''_'' s_NNS private_JJ information_NN is_VBZ naturally_RB expressed_VBN by_IN a_DT single_JJ positive_JJ real_JJ number_NN ,_, which_WDT will_MD always_RB be_VB the_DT cost_NN incurred_VBN per_IN unit_NN load_NN ._.
The_DT mechanism_NN ''_'' s_NNS output_NN could_MD be_VB arbitrary_JJ real_JJ number_NN but_CC their_PRP$ valuation_NN is_VBZ a_DT quasi-linear_JJ function_NN t_NN w_NN ,_, where_WRB t_NN is_VBZ the_DT private_JJ per_IN unit_NN cost_NN and_CC w_NN is_VBZ the_DT work_NN load_NN ._.
Archer_NNP and_CC Tardos_NNP characterized_VBD that_IN all_DT truthful_JJ mechanism_NN should_MD have_VB decreasing_VBG work_NN curves_NNS w_NN and_CC that_IN the_DT truthful_JJ payment_NN should_MD be_VB Pi_NN -LRB-_-LRB- bi_NN -RRB-_-RRB- =_JJ Pi_NN -LRB-_-LRB- #_# -RRB-_-RRB- +_CC biwi_NN -LRB-_-LRB- bi_NN -RRB-_-RRB- R_NN bi_NN 0_CD wi_NN -LRB-_-LRB- u_NN -RRB-_-RRB- du_NNP Using_VBG this_DT model_NN ,_, Archer_NNP and_CC Tardos_NNP designed_VBN truthful_JJ mechanisms_NNS for_IN several_JJ scheduling_NN related_JJ problems_NNS ,_, including_VBG minimizing_VBG the_DT span_NN ,_, maximizing_VBG flow_NN and_CC minimizing_VBG the_DT weighted_JJ sum_NN of_IN completion_NN time_NN problems_NNS ._.
Notice_NNP when_WRB the_DT load_NN of_IN the_DT problems_NNS is_VBZ w_NN =_JJ -LCB-_-LRB- #_# ,_, #_# -RCB-_-RRB- ,_, it_PRP is_VBZ indeed_RB a_DT binary_JJ demand_NN game_NN ._.
If_IN we_PRP apply_VBP their_PRP$ characterization_NN of_IN the_DT truthful_JJ mechanism_NN ,_, their_PRP$ decreasing_VBG work_NN curves_NNS w_VBP implies_VBZ exactly_RB the_DT monotonicity_NN property_NN of_IN the_DT output_NN ._.
But_CC notice_NN that_IN their_PRP$ proof_NN is_VBZ heavily_RB based_VBN on_IN the_DT assumption_NN that_IN the_DT output_NN is_VBZ a_DT continuous_JJ function_NN of_IN the_DT cost_NN ,_, thus_RB their_PRP$ conclusion_NN can_MD ''_'' t_NN directly_RB apply_VB to_TO binary_JJ demand_NN games_NNS ._.
The_DT paper_NN of_IN Ahuva_NNP Mu_NNP ''_'' alem_NN and_CC Noam_NNP Nisan_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- is_VBZ closest_JJS in_IN spirit_NN to_TO our_PRP$ work_NN ._.
They_PRP clearly_RB stated_VBD that_IN we_PRP only_RB discussed_VBD a_DT limited_JJ class_NN of_IN bidders_NNS ,_, single_JJ minded_VBN bidders_NNS ,_, that_DT was_VBD introduced_VBN by_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- ._.
They_PRP proved_VBD that_IN all_DT truthful_JJ mechanisms_NNS should_MD have_VB a_DT monotonicity_JJ output_NN and_CC their_PRP$ payment_NN scheme_NN is_VBZ based_VBN on_IN the_DT cut_NN value_NN ._.
With_IN a_DT simple_JJ generalization_NN ,_, we_PRP get_VBP our_PRP$ conclusion_NN for_IN general_JJ binary_JJ demand_NN game_NN ._.
They_PRP proposed_VBD several_JJ combination_NN methods_NNS including_VBG MAX_NNP ,_, IF-THEN-ELSE_NN construction_NN to_TO perform_VB partial_JJ search_NN ._.
All_DT of_IN their_PRP$ methods_NNS required_VBD the_DT welfare_NN function_NN associated_VBN with_IN the_DT output_NN satisfying_VBG bitonic_JJ property_NN ._.
Distinction_NN between_IN our_PRP$ contributions_NNS and_CC previous_JJ results_NNS :_: It_PRP has_VBZ been_VBN shown_VBN in_IN -LSB-_-LRB- #_# ,_, #_# ,_, ##_NN ,_, ##_NN -RSB-_-RRB- that_WDT for_IN the_DT single_JJ minded_VBN combinatorial_JJ auction_NN ,_, there_EX exists_VBZ a_DT payment_NN scheme_NN which_WDT results_VBZ in_IN a_DT truthful_JJ mechanism_NN if_IN the_DT allocation_NN rule_NN satisfies_VBZ a_DT certain_JJ monotonicity_NN property_NN ._.
Theorem_NNP #_# also_RB depends_VBZ on_IN the_DT monotonicity_NN property_NN ,_, but_CC it_PRP is_VBZ applicable_JJ to_TO a_DT broader_JJR setting_NN than_IN the_DT single_JJ minded_VBN combinatorial_JJ auction_NN ._.
In_IN addition_NN ,_, the_DT binary_JJ demand_NN game_NN studied_VBN here_RB is_VBZ different_JJ from_IN the_DT traditional_JJ packing_NN IP_NNP ''_'' s_NNS :_: we_PRP only_RB require_VBP that_IN the_DT allocation_NN to_TO each_DT agent_NN is_VBZ binary_JJ and_CC the_DT allocation_NN rule_NN satisfies_VBZ a_DT certain_JJ monotonicity_NN property_NN ;_: we_PRP do_VBP not_RB put_VB any_DT restrictions_NNS on_IN the_DT objective_JJ function_NN ._.
Furthermore_RB ,_, the_DT main_JJ focus_NN of_IN this_DT paper_NN is_VBZ to_TO design_VB some_DT general_JJ techniques_NNS to_TO find_VB the_DT truthful_JJ payment_NN scheme_NN for_IN a_DT given_VBN allocation_NN rule_NN O_NN satisfying_VBG a_DT certain_JJ monotonicity_NN property_NN ._.
3_LS ._.
GENERAL_JJ APPROACHES_NNS 3_CD ._.
#_# Properties_NNPS of_IN Strategyproof_NNP Mechanisms_NNPS We_PRP discuss_VBP several_JJ properties_NNS that_WDT mechanisms_NNS need_VBP to_TO satisfy_VB in_IN order_NN to_TO be_VB truthful_JJ ._.
THEOREM_NNP #_# ._.
If_IN a_DT mechanism_NN M_NN =_JJ -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- satisfies_VBZ IC_NN ,_, then_RB i_FW ,_, if_IN Oi_NN -LRB-_-LRB- t_NN |_CD i_FW ti1_FW -RRB-_-RRB- =_JJ Oi_NN -LRB-_-LRB- t_NN |_CD i_FW ti2_FW -RRB-_-RRB- ,_, then_RB pi_NN -LRB-_-LRB- t_NN |_CD i_FW ti1_FW -RRB-_-RRB- =_JJ pi_NN -LRB-_-LRB- t_NN |_CD i_FW ti2_FW -RRB-_-RRB- ._.
COROLLARY_NN #_# ._.
For_IN any_DT strategy-proof_JJ mechanism_NN for_IN a_DT binary_JJ demand_NN game_NN G_NN with_IN setting_VBG S_NN ,_, if_IN we_PRP fix_VBP the_DT cost_NN ci_NN of_IN all_DT agents_NNS other_JJ than_IN i_FW ,_, the_DT payment_NN to_TO agent_NN i_FW is_VBZ a_DT constant_JJ p1_NN i_FW if_IN Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ,_, and_CC it_PRP is_VBZ another_DT constant_JJ p0_NN i_FW if_IN Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ._.
THEOREM_NNP #_# ._.
Fixed_VBN the_DT setting_NN S_NN for_IN a_DT binary_JJ demand_NN game_NN ,_, if_IN mechanism_NN M_NN =_JJ -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- satisfies_VBZ IC_NN ,_, then_RB mechanism_NN M_NN =_JJ -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- with_IN the_DT same_JJ output_NN method_NN O_NN and_CC pi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ pi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- i_FW -LRB-_-LRB- ci_NN -RRB-_-RRB- for_IN any_DT function_NN i_FW -LRB-_-LRB- ci_NN -RRB-_-RRB- also_RB satisfies_VBZ IC_NN ._.
The_DT proofs_NNS of_IN above_JJ theorems_NNS are_VBP straightforward_JJ and_CC thus_RB omitted_VBN due_JJ to_TO space_NN limit_NN ._.
This_DT theorem_NN implies_VBZ that_IN for_IN the_DT binary_JJ demand_NN games_NNS we_PRP can_MD always_RB normalize_VB the_DT payment_NN to_TO an_DT agent_NN i_FW such_JJ that_IN the_DT payment_NN to_TO the_DT agent_NN is_VBZ #_# when_WRB it_PRP is_VBZ not_RB selected_VBN ._.
Hereafter_NNP ,_, we_PRP will_MD only_RB consider_VB normalized_VBN payment_NN schemes_NNS ._.
215_CD 3_CD ._.
#_# Existence_NN of_IN Strategyproof_NNP Mechanisms_NNPS Notice_NNP ,_, given_VBN the_DT setting_NN S_NN ,_, a_DT mechanism_NN design_NN problem_NN is_VBZ composed_VBN of_IN two_CD parts_NNS :_: the_DT allocation_NN rule_NN O_NN and_CC a_DT payment_NN scheme_NN P_NN ._.
In_IN this_DT paper_NN ,_, given_VBN an_DT allocation_NN rule_NN O_NN we_PRP focus_VBP our_PRP$ attention_NN on_IN how_WRB to_TO design_VB a_DT truthful_JJ payment_NN scheme_NN based_VBN on_IN O_NN ._.
Given_VBN an_DT allocation_NN rule_NN O_NN for_IN a_DT binary_JJ demand_NN game_NN ,_, we_PRP first_RB present_VB a_DT sufficient_JJ and_CC necessary_JJ condition_NN for_IN the_DT existence_NN of_IN a_DT truthful_JJ payment_NN scheme_NN P_NN ._.
DEFINITION_NN #_# -LRB-_-LRB- MONOTONE_NN NON-INCREASING_NN PROPERTY_NN -LRB-_-LRB- MP_NN -RRB-_-RRB- -RRB-_-RRB- ._.
An_DT output_NN method_NN O_NN is_VBZ said_VBN to_TO satisfy_VB the_DT monotone_NN non-increasing_JJ property_NN if_IN for_IN every_DT agent_NN i_FW and_CC two_CD of_IN its_PRP$ possible_JJ costs_NNS ci1_NN <_JJR ci2_CD ,_, Oi_NN -LRB-_-LRB- c_NN |_CD i_FW ci2_FW -RRB-_-RRB- Oi_NN -LRB-_-LRB- c_NN |_CD i_FW ci1_FW -RRB-_-RRB- ._.
This_DT definition_NN is_VBZ not_RB restricted_JJ only_RB to_TO binary_JJ demand_NN games_NNS ._.
For_IN binary_JJ demand_NN games_NNS ,_, this_DT definition_NN implies_VBZ that_IN if_IN Oi_NN -LRB-_-LRB- c_NN |_CD i_FW ci2_FW -RRB-_-RRB- =_JJ 1_CD then_RB Oi_NN -LRB-_-LRB- c_NN |_CD i_FW ci1_FW -RRB-_-RRB- =_JJ #_# ._.
THEOREM_NNP #_# ._.
Fix_VB the_DT setting_NN S_NN ,_, ci_NN in_IN a_DT binary_JJ demand_NN game_NN G_NN with_IN the_DT allocation_NN rule_NN O_NN ,_, the_DT following_VBG three_CD conditions_NNS are_VBP equivalent_JJ :_: 1_CD ._.
There_EX exists_VBZ a_DT value_NN i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- -LRB-_-LRB- which_WDT we_PRP will_MD call_VB a_DT cut_NN value_NN ,_, such_JJ that_IN Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# if_IN ci_NN <_JJR i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- and_CC Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# if_IN ci_NN >_JJR i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- ._.
When_WRB ci_NN =_JJ i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- ,_, Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- can_MD be_VB either_CC #_# or_CC #_# depending_VBG on_IN the_DT tie-breaker_NN of_IN the_DT allocation_NN rule_NN O_NN ._.
Hereafter_NNP ,_, we_PRP will_MD not_RB consider_VB the_DT tie-breaker_NN scenario_NN in_IN our_PRP$ proofs_NNS ._.
2_LS ._.
The_DT allocation_NN rule_NN O_NN satisfies_VBZ MP_NN ._.
3_LS ._.
There_EX exists_VBZ a_DT truthful_JJ payment_NN scheme_NN P_NN for_IN this_DT binary_JJ demand_NN game_NN ._.
PROOF_NN ._.
The_DT proof_NN that_IN Condition_NN #_# implies_VBZ Condition_NN is_VBZ straightforward_JJ and_CC is_VBZ omitted_VBN here_RB ._.
We_PRP then_RB show_VBP Condition_NN #_# implies_VBZ Condition_NN #_# ._.
The_DT proof_NN of_IN this_DT is_VBZ similar_JJ to_TO a_DT proof_NN in_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- ._.
To_TO prove_VB this_DT direction_NN ,_, we_PRP assume_VBP there_EX exists_VBZ an_DT agent_NN i_FW and_CC two_CD valuation_NN vectors_NNS c_NN |_CD i_FW ci1_FW and_CC c_NN |_CD i_FW ci2_FW ,_, where_WRB ci1_NN <_JJR ci2_CD ,_, Oi_NN -LRB-_-LRB- c_NN |_CD i_FW ci2_FW -RRB-_-RRB- =_JJ #_# and_CC Oi_NN -LRB-_-LRB- c_NN |_CD i_FW ci1_FW -RRB-_-RRB- =_JJ #_# ._.
From_IN corollary_NN #_# ,_, we_PRP know_VBP that_IN pi_NN -LRB-_-LRB- c_NN |_CD i_FW ci1_FW -RRB-_-RRB- =_JJ p0_NN i_FW and_CC pi_NN -LRB-_-LRB- c_NN |_CD i_FW ci2_FW -RRB-_-RRB- =_JJ p1_NN i_FW ._.
Now_RB fix_VB ci_NN ,_, the_DT utility_NN for_IN i_FW when_WRB ci_NN =_JJ ci1_NN is_VBZ ui_NN -LRB-_-LRB- ci1_NN -RRB-_-RRB- =_JJ p0_NN i_FW ._.
When_WRB agent_NN i_FW lies_VBZ its_PRP$ valuation_NN to_TO ci2_NN ,_, its_PRP$ utility_NN is_VBZ p1_NN i_FW ci1_FW ._.
Since_IN M_NN =_JJ -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- is_VBZ truthful_JJ ,_, we_PRP have_VBP p0_NN i_FW >_JJR p1_NN i_FW ci1_FW ._.
Now_RB consider_VB the_DT scenario_NN when_WRB the_DT actual_JJ valuation_NN of_IN agent_NN i_FW is_VBZ ci_NN =_JJ ci2_NN ._.
Its_PRP$ utility_NN is_VBZ p1_NN i_FW ci2_FW when_WRB it_PRP reports_VBZ its_PRP$ true_JJ valuation_NN ._.
Similarly_RB ,_, if_IN it_PRP lies_VBZ its_PRP$ valuation_NN to_TO ci1_NN ,_, its_PRP$ utility_NN is_VBZ p0_NN i_FW ._.
Since_IN M_NN =_JJ -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- is_VBZ truthful_JJ ,_, we_PRP have_VBP p0_NN i_FW <_JJR p1_CD i_FW ci2_FW ._.
Consequently_RB ,_, we_PRP have_VBP p1_NN i_FW ci2_FW >_JJR p0_NN i_FW >_JJR p1_NN i_FW ci1_FW ._.
This_DT inequality_NN implies_VBZ that_IN ci1_NN >_JJR ci2_NN ,_, which_WDT is_VBZ a_DT contradiction_NN ._.
We_PRP then_RB show_VBP Condition_NN #_# implies_VBZ Condition_NN #_# ._.
We_PRP prove_VBP this_DT by_IN constructing_VBG a_DT payment_NN scheme_NN and_CC proving_VBG that_IN this_DT payment_NN scheme_NN is_VBZ truthful_JJ ._.
The_DT payment_NN scheme_NN is_VBZ :_: If_IN Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ,_, then_RB agent_NN i_FW gets_VBZ payment_NN pi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- ;_: else_RB it_PRP gets_VBZ payment_NN pi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ._.
From_IN condition_NN #_# ,_, if_IN Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# then_RB ci_VBP >_JJR i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- ._.
Thus_RB ,_, its_PRP$ utility_NN is_VBZ i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- ci_NN >_JJR #_# ,_, which_WDT implies_VBZ that_IN the_DT payment_NN scheme_NN satisfies_VBZ the_DT IR_NNP ._.
In_IN the_DT following_VBG we_PRP prove_VBP that_IN this_DT payment_NN scheme_NN also_RB satisfies_VBZ IC_NN property_NN ._.
There_EX are_VBP two_CD cases_NNS here_RB ._.
Case_NNP #_# :_: ci_NN <_JJR -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- ._.
In_IN this_DT case_NN ,_, when_WRB i_FW declares_VBZ its_PRP$ true_JJ cost_NN ci_NN ,_, its_PRP$ utility_NN is_VBZ i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- ci_NN >_JJR #_# ._.
Now_RB consider_VB the_DT situation_NN when_WRB i_FW declares_VBZ a_DT cost_NN di_FW =_JJ ci_NN ._.
If_IN di_FW <_JJR i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- ,_, then_RB i_FW gets_VBZ the_DT same_JJ payment_NN and_CC utility_NN since_IN it_PRP is_VBZ still_RB selected_VBN ._.
If_IN di_FW >_JJR i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- ,_, then_RB its_PRP$ utility_NN becomes_VBZ #_# since_IN it_PRP is_VBZ not_RB selected_VBN anymore_RB ._.
Thus_RB ,_, it_PRP has_VBZ no_DT incentive_NN to_TO lie_VB in_IN this_DT case_NN ._.
Case_NNP #_# :_: ci_NN -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- ._.
In_IN this_DT case_NN ,_, when_WRB i_FW reveals_VBZ its_PRP$ true_JJ valuation_NN ,_, its_PRP$ payment_NN is_VBZ #_# and_CC the_DT utility_NN is_VBZ #_# ._.
Now_RB consider_VB the_DT situation_NN when_WRB i_FW declares_VBZ a_DT valuation_NN di_FW =_JJ ci_NN ._.
If_IN di_FW >_JJR i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- ,_, then_RB i_FW gets_VBZ the_DT same_JJ payment_NN and_CC utility_NN since_IN it_PRP is_VBZ still_RB not_RB selected_VBN ._.
If_IN di_FW i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- ,_, then_RB its_PRP$ utility_NN becomes_VBZ i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- ci_NN #_# since_IN it_PRP is_VBZ selected_VBN now_RB ._.
Thus_RB ,_, it_PRP has_VBZ no_DT incentive_NN to_TO lie_VB ._.
The_DT equivalence_JJ of_IN the_DT monotonicity_NN property_NN of_IN the_DT allocation_NN rule_NN O_NN and_CC the_DT existence_NN of_IN a_DT truthful_JJ mechanism_NN using_VBG O_NN can_MD be_VB extended_VBN to_TO games_NNS beyond_IN binary_JJ demand_NN games_NNS ._.
The_DT details_NNS are_VBP omitted_VBN here_RB due_JJ to_TO space_NN limit_NN ._.
We_PRP now_RB summarize_VBP the_DT process_NN to_TO design_VB a_DT truthful_JJ payment_NN scheme_NN for_IN a_DT binary_JJ demand_NN game_NN based_VBN on_IN an_DT output_NN method_NN O_NN ._.
General_NNP Framework_NNP #_# Truthful_JJ mechanism_NN design_NN for_IN a_DT binary_JJ demand_NN game_NN Stage_NN #_# :_: Check_VB whether_IN the_DT allocation_NN rule_NN O_NN satisfies_VBZ MP_NN ._.
If_IN it_PRP does_VBZ not_RB ,_, then_RB there_EX is_VBZ no_DT payment_NN scheme_NN P_NN such_JJ that_IN mechanism_NN M_NN =_JJ -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- is_VBZ truthful_JJ ._.
Otherwise_RB ,_, define_VB the_DT payment_NN scheme_NN P_NN as_IN follows_VBZ ._.
Stage_NN #_# :_: Based_VBN on_IN the_DT allocation_NN rule_NN O_NN ,_, find_VB the_DT cut_NN value_NN i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- for_IN agent_NN i_FW such_JJ that_IN Oi_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- =_JJ #_# when_WRB di_FW <_JJR i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- ,_, and_CC Oi_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- =_JJ #_# when_WRB di_FW >_JJR i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- ._.
Stage_NN #_# :_: The_DT payment_NN for_IN agent_NN i_FW is_VBZ #_# if_IN Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ;_: the_DT payment_NN is_VBZ i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- if_IN Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ._.
THEOREM_NNP #_# ._.
The_DT payment_NN defined_VBN by_IN our_PRP$ general_JJ framework_NN is_VBZ minimum_JJ among_IN all_DT truthful_JJ payment_NN schemes_NNS using_VBG O_NN as_IN output_NN ._.
4_LS ._.
COMPUTING_NN CUT_NN VALUE_NN FUNCTIONS_NNS To_TO find_VB the_DT truthful_JJ payment_NN scheme_NN by_IN using_VBG General_NNP Framework_NNP #_# ,_, the_DT most_RBS difficult_JJ stage_NN seems_VBZ to_TO be_VB the_DT stage_NN #_# ._.
Notice_NNP that_WDT binary_JJ search_NN does_VBZ not_RB work_VB generally_RB since_IN the_DT valuations_NNS of_IN agents_NNS may_MD be_VB continuous_JJ ._.
We_PRP give_VBP some_DT general_JJ techniques_NNS that_WDT can_MD help_VB with_IN finding_VBG the_DT cut_NN value_NN function_NN under_IN certain_JJ circumstances_NNS ._.
Our_PRP$ basic_JJ approach_NN is_VBZ as_IN follows_VBZ ._.
First_RB ,_, we_PRP decompose_VBP the_DT allocation_NN rule_NN into_IN several_JJ allocation_NN rules_NNS ._.
Next_JJ find_VB the_DT cut_NN value_NN function_NN for_IN each_DT of_IN these_DT new_JJ allocation_NN rules_NNS ._.
Then_RB ,_, we_PRP compute_VBP the_DT original_JJ cut_NN value_NN function_NN by_IN combining_VBG these_DT cut_VBN value_NN functions_NNS of_IN the_DT new_JJ allocation_NN rules_NNS ._.
4_LS ._.
#_# Simple_JJ Combinations_NNS In_IN this_DT subsection_NN ,_, we_PRP introduce_VBP techniques_NNS to_TO compute_VB the_DT cut_NN value_NN function_NN by_IN combining_VBG multiple_JJ allocation_NN rules_NNS with_IN conjunctions_NNS or_CC disconjunctions_NNS ._.
For_IN simplicity_NN ,_, given_VBN an_DT allocation_NN rule_NN O_NN ,_, we_PRP will_MD use_VB -LRB-_-LRB- O_NN ,_, c_NN -RRB-_-RRB- to_TO denote_VB a_DT n-tuple_NN vector_NN -LRB-_-LRB- #_# -LRB-_-LRB- O_NN ,_, c1_NN -RRB-_-RRB- ,_, #_# -LRB-_-LRB- O_NN ,_, c2_NN -RRB-_-RRB- ,_, ..._: ,_, n_NN -LRB-_-LRB- O_NN ,_, cn_NN -RRB-_-RRB- -RRB-_-RRB- ._.
Here_RB ,_, i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- is_VBZ the_DT cut_NN value_NN for_IN agent_NN i_FW when_WRB the_DT allocation_NN rule_NN is_VBZ O_NN and_CC the_DT costs_NNS ci_NN of_IN all_DT other_JJ agents_NNS are_VBP fixed_VBN ._.
THEOREM_NNP #_# ._.
With_IN a_DT fixed_VBN setting_NN S_NN of_IN a_DT binary_JJ demand_NN game_NN ,_, assume_VB that_IN there_EX are_VBP m_NN allocation_NN rules_NNS O1_NN ,_, O2_CD ,_, ,_, Om_NN satisfying_VBG the_DT monotonicity_NN property_NN ,_, and_CC -LRB-_-LRB- Oi_NNP ,_, c_NN -RRB-_-RRB- is_VBZ the_DT cut_NN value_NN vector_NN for_IN Oi_NN ._.
Then_RB the_DT allocation_NN rule_NN O_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ Wm_NN i_FW =_JJ #_# Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- satisfies_VBZ the_DT monotonicity_NN property_NN ._.
Moreover_RB ,_, the_DT cut_NN value_NN for_IN O_NN is_VBZ -LRB-_-LRB- O_NN ,_, c_NN -RRB-_-RRB- =_JJ maxm_FW i_FW =_JJ #_# -LCB-_-LRB- -LRB-_-LRB- Oi_NNP ,_, c_NN -RRB-_-RRB- -RCB-_-RRB- Here_RB -LRB-_-LRB- O_NN ,_, c_NN -RRB-_-RRB- =_JJ maxm_FW i_FW =_JJ #_# -LCB-_-LRB- -LRB-_-LRB- Oi_NNP ,_, c_NN -RRB-_-RRB- -RCB-_-RRB- means_VBZ ,_, j_NN -LSB-_-LRB- #_# ,_, n_NN -RSB-_-RRB- ,_, j_NN -LRB-_-LRB- O_NN ,_, cj_NN -RRB-_-RRB- =_JJ maxm_FW i_FW =_JJ #_# -LCB-_-LRB- j_NN -LRB-_-LRB- Oi_NN ,_, cj_NN -RRB-_-RRB- -RCB-_-RRB- and_CC O_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ Wm_NN i_FW =_JJ #_# Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- means_VBZ ,_, j_NN -LSB-_-LRB- #_# ,_, n_NN -RSB-_-RRB- ,_, Oj_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ O1_NN j_NN -LRB-_-LRB- c_NN -RRB-_-RRB- O2_CD j_NN -LRB-_-LRB- c_NN -RRB-_-RRB- Om_NN j_NN -LRB-_-LRB- c_NN -RRB-_-RRB- ._.
PROOF_NN ._.
Assume_VB that_DT ci_NN >_JJR ci_NN and_CC Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ._.
Without_IN loss_NN of_IN generality_NN ,_, we_PRP assume_VBP that_IN Ok_NNP i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# for_IN some_DT k_NN ,_, #_# k_NN m_NN ._.
From_IN the_DT assumption_NN that_IN Ok_NNP i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- satisfies_VBZ MP_NN ,_, we_PRP obtain_VBP that_IN 216_CD Ok_NN i_FW -LRB-_-LRB- c_NN |_CD i_FW ci_FW -RRB-_-RRB- =_JJ #_# ._.
Thus_RB ,_, Oi_NN -LRB-_-LRB- c_NN |_CD i_FW ci_FW -RRB-_-RRB- =_JJ Wm_NN j_NN =_JJ #_# Oj_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ._.
This_DT proves_VBZ that_IN O_NN -LRB-_-LRB- c_NN -RRB-_-RRB- satisfies_VBZ MP_NN ._.
The_DT correctness_NN of_IN the_DT cut_NN value_NN function_NN follows_VBZ directly_RB from_IN Theorem_NNP #_# ._.
Many_JJ algorithms_NNS indeed_RB fall_VBP into_IN this_DT category_NN ._.
To_TO demonstrate_VB the_DT usefulness_NN of_IN Theorem_NNP #_# ,_, we_PRP discuss_VBP a_DT concrete_JJ example_NN here_RB ._.
In_IN a_DT network_NN ,_, sometimes_RB we_PRP want_VBP to_TO deliver_VB a_DT packet_NN to_TO a_DT set_NN of_IN nodes_NNS instead_RB of_IN one_CD ._.
This_DT problem_NN is_VBZ known_VBN as_IN multicast_NN ._.
The_DT most_RBS commonly_RB used_VBN structure_NN in_IN multicast_JJ routing_VBG is_VBZ so_RB called_VBN shortest_JJS path_NN tree_NN -LRB-_-LRB- SPT_NN -RRB-_-RRB- ._.
Consider_VB a_DT network_NN G_NN =_JJ -LRB-_-LRB- V_NN ,_, E_NN ,_, c_NN -RRB-_-RRB- ,_, where_WRB V_NN is_VBZ the_DT set_NN of_IN nodes_NNS ,_, and_CC vector_NN c_NN is_VBZ the_DT actual_JJ cost_NN of_IN the_DT nodes_NNS forwarding_NN the_DT data_NNS ._.
Assume_VB that_IN the_DT source_NN node_NN is_VBZ s_NNS and_CC the_DT receivers_NNS are_VBP Q_NNP V_NNP ._.
For_IN each_DT receiver_NN qi_NN Q_NNP ,_, we_PRP compute_VBP the_DT shortest_JJS path_NN -LRB-_-LRB- least_JJS cost_NN path_NN -RRB-_-RRB- ,_, denoted_VBN by_IN LCP_NN -LRB-_-LRB- s_NNS ,_, qi_NN ,_, d_NN -RRB-_-RRB- ,_, from_IN the_DT source_NN s_VBZ to_TO qi_VB under_IN the_DT reported_VBN cost_NN profile_NN d_NN ._.
The_DT union_NN of_IN all_DT such_JJ shortest_JJS paths_NNS forms_VBZ the_DT shortest_JJS path_NN tree_NN ._.
We_PRP then_RB use_VBP General_NNP Framework_NNP #_# to_TO design_VB the_DT truthful_JJ payment_NN scheme_NN P_NN when_WRB the_DT SPT_NNP structure_NN is_VBZ used_VBN as_IN the_DT output_NN for_IN multicast_NNS ,_, i_FW ._.
e_LS ._.
,_, we_PRP design_VBP a_DT mechanism_NN M_NN =_JJ -LRB-_-LRB- SPT_NNP ,_, P_NN -RRB-_-RRB- ._.
Notice_NNP that_IN VCG_NNP mechanisms_NNS can_MD not_RB be_VB applied_VBN here_RB since_IN SPT_NNP is_VBZ not_RB an_DT affine_JJ maximization_NN ._.
We_PRP define_VBP LCP_NN -LRB-_-LRB- s_NNS ,_, qi_NN -RRB-_-RRB- as_IN the_DT allocation_NN corresponds_VBZ to_TO the_DT path_NN LCP_NN -LRB-_-LRB- s_NNS ,_, qi_NN ,_, d_NN -RRB-_-RRB- ,_, i_FW ._.
e_LS ._.
,_, LCP_NNP -LRB-_-LRB- s_NNS ,_, qi_NN -RRB-_-RRB- k_NN -LRB-_-LRB- d_NN -RRB-_-RRB- =_JJ #_# if_IN and_CC only_RB if_IN node_NN vk_NN is_VBZ in_IN LCP_NNP -LRB-_-LRB- s_NNS ,_, qi_NN ,_, d_NN -RRB-_-RRB- ._.
Then_RB the_DT output_NN SPT_NNP is_VBZ defined_VBN as_IN W_NNP qiQ_NNP LCP_NNP -LRB-_-LRB- s_NNS ,_, qi_NN -RRB-_-RRB- ._.
In_IN other_JJ words_NNS ,_, SPTk_NN -LRB-_-LRB- d_NN -RRB-_-RRB- =_JJ #_# if_IN and_CC only_RB if_IN qk_NN is_VBZ selected_VBN in_IN some_DT LCP_NN -LRB-_-LRB- s_NNS ,_, qi_NN ,_, d_NN -RRB-_-RRB- ._.
The_DT shortest_JJS path_NN allocation_NN rule_NN is_VBZ a_DT utilitarian_JJ and_CC satisfies_VBZ MP_NN ._.
Thus_RB ,_, from_IN Theorem_NNP #_# ,_, SPT_NNP also_RB satisfies_VBZ MP_NN ,_, and_CC the_DT cut_NN value_NN function_NN vector_NN for_IN SPT_NNP can_MD be_VB calculated_VBN as_IN -LRB-_-LRB- SPT_NNP ,_, c_NN -RRB-_-RRB- =_JJ maxqiQ_NN -LRB-_-LRB- LCP_NN -LRB-_-LRB- s_NNS ,_, qi_NN -RRB-_-RRB- ,_, c_NN -RRB-_-RRB- ,_, where_WRB -LRB-_-LRB- LCP_NN -LRB-_-LRB- s_NNS ,_, qi_NN -RRB-_-RRB- ,_, c_NN -RRB-_-RRB- is_VBZ the_DT cut_NN value_NN function_NN vector_NN for_IN the_DT shortest_JJS path_NN LCP_NN -LRB-_-LRB- s_NNS ,_, qi_NN ,_, c_NN -RRB-_-RRB- ._.
Consequently_RB ,_, the_DT payment_NN scheme_NN above_IN is_VBZ truthful_JJ and_CC the_DT minimum_NN among_IN all_DT truthful_JJ payment_NN schemes_NNS when_WRB the_DT allocation_NN rule_NN is_VBZ SPT_NNP ._.
THEOREM_NNP #_# ._.
Fixed_VBN the_DT setting_NN S_NN of_IN a_DT binary_JJ demand_NN game_NN ,_, assume_VB that_IN there_EX are_VBP m_NN output_NN methods_NNS O1_NN ,_, O2_CD ,_, ,_, Om_NN satisfying_VBG MP_NN ,_, and_CC -LRB-_-LRB- Oi_NNP ,_, c_NN -RRB-_-RRB- are_VBP the_DT cut_NN value_NN functions_VBZ respectively_RB for_IN Oi_NN where_WRB i_FW =_JJ #_# ,_, #_# ,_, ,_, m_NN ._.
Then_RB the_DT allocation_NN rule_NN O_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ Vm_NN i_FW =_JJ #_# Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- satisfies_VBZ MP_NN ._.
Moreover_RB ,_, the_DT cut_NN value_NN function_NN for_IN O_NN is_VBZ -LRB-_-LRB- O_NN ,_, c_NN -RRB-_-RRB- =_JJ minm_NN i_FW =_JJ #_# -LCB-_-LRB- -LRB-_-LRB- Oi_NNP ,_, c_NN -RRB-_-RRB- -RCB-_-RRB- ._.
We_PRP show_VBP that_IN our_PRP$ simple_JJ combination_NN generalizes_VBZ the_DT IF-THENELSE_NN function_NN defined_VBN in_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- ._.
For_IN an_DT agent_NN i_FW ,_, assume_VB that_IN there_EX are_VBP two_CD allocation_NN rules_NNS O1_NN and_CC O2_CD satisfying_VBG MP_NN ._.
Let_VB i_FW -LRB-_-LRB- O1_NN ,_, ci_NN -RRB-_-RRB- ,_, i_FW -LRB-_-LRB- O2_CD ,_, ci_NN -RRB-_-RRB- be_VB the_DT cut_NN value_NN functions_NNS for_IN O1_NN ,_, O2_CD respectively_RB ._.
Then_RB the_DT IF-THEN-ELSE_NN function_NN Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- is_VBZ actually_RB Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ -LSB-_-LRB- -LRB-_-LRB- ci_NN i_FW -LRB-_-LRB- O1_NN ,_, ci_NN -RRB-_-RRB- +_CC #_# -LRB-_-LRB- ci_NN -RRB-_-RRB- -RRB-_-RRB- O2_CD -LRB-_-LRB- ci_NN ,_, ci_NN -RRB-_-RRB- -RSB-_-RRB- -LRB-_-LRB- ci_NN <_JJR i_FW -LRB-_-LRB- O1_NN ,_, ci_NN -RRB-_-RRB- 2_CD -LRB-_-LRB- ci_NN -RRB-_-RRB- -RRB-_-RRB- where_WRB #_# -LRB-_-LRB- ci_NN -RRB-_-RRB- and_CC #_# -LRB-_-LRB- ci_NN -RRB-_-RRB- are_VBP two_CD positive_JJ functions_NNS ._.
By_IN applying_VBG Theorems_NNS #_# and_CC #_# ,_, we_PRP know_VBP that_IN the_DT allocation_NN rule_NN O_NN satisfies_VBZ MP_NN and_CC consequently_RB i_FW -LRB-_-LRB- O_NN ,_, ci_NN -RRB-_-RRB- =_JJ max_NN -LCB-_-LRB- min_NN -LRB-_-LRB- i_FW -LRB-_-LRB- O1_NN ,_, ci_NN -RRB-_-RRB- +_CC 1_CD -LRB-_-LRB- ci_NN -RRB-_-RRB- ,_, i_FW -LRB-_-LRB- O2_CD ,_, ci_NN -RRB-_-RRB- -RRB-_-RRB- ,_, i_FW -LRB-_-LRB- O1_NN ,_, ci_NN -RRB-_-RRB- #_# -LRB-_-LRB- ci_NN -RRB-_-RRB- -RRB-_-RRB- -RCB-_-RRB- ._.
4_LS ._.
#_# Round-Based_JJ Allocations_NNS Some_DT approximation_NN algorithms_NNS are_VBP round-based_JJ ,_, where_WRB each_DT round_NN of_IN an_DT algorithm_NN selects_VBZ some_DT agents_NNS and_CC updates_NNS the_DT setting_NN and_CC the_DT cost_NN profile_NN if_IN necessary_JJ ._.
For_IN example_NN ,_, several_JJ approximation_NN algorithms_NNS for_IN minimum_JJ weight_NN vertex_NN cover_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- ,_, maximum_NN weight_NN independent_JJ set_NN ,_, minimum_JJ weight_NN set_VBN cover_NN -LSB-_-LRB- #_# -RSB-_-RRB- ,_, and_CC minimum_JJ weight_NN Steiner_NN -LSB-_-LRB- ##_NN -RSB-_-RRB- tree_NN fall_NN into_IN this_DT category_NN ._.
As_IN an_DT example_NN ,_, we_PRP discuss_VBP the_DT minimum_JJ weighted_JJ vertex_NN cover_NN problem_NN -LRB-_-LRB- MWVC_NN -RRB-_-RRB- -LSB-_-LRB- ##_CD ,_, ##_CD -RSB-_-RRB- to_TO show_VB how_WRB to_TO compute_VB the_DT cut_NN value_NN for_IN a_DT round-based_JJ output_NN ._.
Given_VBN a_DT graph_NN G_NN =_JJ -LRB-_-LRB- V_NN ,_, E_NN -RRB-_-RRB- ,_, where_WRB the_DT nodes_NNS v1_NN ,_, v2_NN ,_, ..._: ,_, vn_NN are_VBP the_DT agents_NNS and_CC each_DT agent_NN vi_LS has_VBZ a_DT weight_NN ci_NN ,_, we_PRP want_VBP to_TO find_VB a_DT node_NN set_NN V_NN V_NN such_JJ that_IN for_IN every_DT edge_NN -LRB-_-LRB- u_NN ,_, v_LS -RRB-_-RRB- E_NN at_IN least_JJS one_CD of_IN u_NN and_CC v_LS is_VBZ in_IN V_NN ._.
Such_JJ V_NN is_VBZ called_VBN a_DT vertex_NN cover_NN of_IN G_NN ._.
The_DT valuation_NN of_IN a_DT node_NN i_FW is_VBZ ci_NN if_IN it_PRP is_VBZ selected_VBN ;_: otherwise_RB its_PRP$ valuation_NN is_VBZ #_# ._.
For_IN a_DT subset_NN of_IN nodes_NNS V_NN V_NN ,_, we_PRP define_VBP its_PRP$ weight_NN as_IN c_NN -LRB-_-LRB- V_NN -RRB-_-RRB- =_JJ P_NN iV_NN ci_NN ._.
We_PRP want_VBP to_TO find_VB a_DT vertex_NN cover_NN with_IN the_DT minimum_JJ weight_NN ._.
Hence_RB ,_, the_DT objective_JJ function_NN to_TO be_VB implemented_VBN is_VBZ utilitarian_JJ ._.
To_TO use_VB the_DT VCG_NNP mechanism_NN ,_, we_PRP need_VBP to_TO find_VB the_DT vertex_NN cover_NN with_IN the_DT minimum_JJ weight_NN ,_, which_WDT is_VBZ NP-hard_JJ -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
Since_IN we_PRP are_VBP interested_JJ in_IN mechanisms_NNS that_WDT can_MD be_VB computed_VBN in_IN polynomial_JJ time_NN ,_, we_PRP must_MD use_VB polynomial-time_JJ computable_JJ allocation_NN rules_NNS ._.
Many_JJ algorithms_NNS have_VBP been_VBN proposed_VBN in_IN the_DT literature_NN to_TO approximate_JJ the_DT optimal_JJ solution_NN ._.
In_IN this_DT paper_NN ,_, we_PRP use_VBP a_DT 2-approximation_JJ algorithm_NN given_VBN in_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- ._.
For_IN the_DT sake_NN of_IN completeness_NN ,_, we_PRP briefly_RB review_VBP this_DT algorithm_NN here_RB ._.
The_DT algorithm_NN is_VBZ round-based_JJ ._.
Each_DT round_NN selects_VBZ some_DT vertices_NNS and_CC discards_VBZ some_DT vertices_NNS ._.
For_IN each_DT node_NN i_FW ,_, w_NN -LRB-_-LRB- i_LS -RRB-_-RRB- is_VBZ initialized_VBN to_TO its_PRP$ weight_NN ci_NN ,_, and_CC when_WRB w_NN -LRB-_-LRB- i_LS -RRB-_-RRB- drops_VBZ to_TO #_# ,_, i_FW is_VBZ included_VBN in_IN the_DT vertex_NN cover_NN ._.
To_TO make_VB the_DT presentation_NN clear_JJ ,_, we_PRP say_VBP an_DT edge_NN -LRB-_-LRB- i1_NN ,_, j1_NN -RRB-_-RRB- is_VBZ lexicographically_RB smaller_JJR than_IN edge_NN -LRB-_-LRB- i2_NN ,_, j2_NN -RRB-_-RRB- if_IN -LRB-_-LRB- #_# -RRB-_-RRB- min_NN -LRB-_-LRB- i1_NN ,_, j1_NN -RRB-_-RRB- <_JJR min_NN -LRB-_-LRB- i2_NN ,_, j2_NN -RRB-_-RRB- ,_, or_CC -LRB-_-LRB- #_# -RRB-_-RRB- min_NN -LRB-_-LRB- i1_NN ,_, j1_NN -RRB-_-RRB- =_JJ min_NN -LRB-_-LRB- i2_NN ,_, j2_NN -RRB-_-RRB- and_CC max_NN -LRB-_-LRB- i1_NN ,_, j1_NN -RRB-_-RRB- <_JJR max_NN -LRB-_-LRB- i2_NN ,_, j2_NN -RRB-_-RRB- ._.
Algorithm_NN #_# Approximate_NNP Minimum_NNP Weighted_NNP Vertex_NNP Cover_NNP Input_NNP :_: A_DT node_NN weighted_JJ graph_NN G_NN =_JJ -LRB-_-LRB- V_NN ,_, E_NN ,_, c_NN -RRB-_-RRB- ._.
Output_NN :_: A_DT vertex_NN cover_NN V_NN ._.
1_CD :_: Set_VB V_NN =_JJ ._.
For_IN each_DT i_FW V_NN ,_, set_VBN w_NN -LRB-_-LRB- i_LS -RRB-_-RRB- =_JJ ci_NN ._.
2_CD :_: while_IN V_NN is_VBZ not_RB a_DT vertex_NN cover_NN do_VBP 3_CD :_: Pick_VB an_DT uncovered_JJ edge_NN -LRB-_-LRB- i_FW ,_, j_NN -RRB-_-RRB- with_IN the_DT least_JJS lexicographic_JJ order_NN among_IN all_DT uncovered_JJ edges_NNS ._.
4_CD :_: Let_VB m_NN =_JJ min_NN -LRB-_-LRB- w_NN -LRB-_-LRB- i_LS -RRB-_-RRB- ,_, w_NN -LRB-_-LRB- j_NN -RRB-_-RRB- -RRB-_-RRB- ._.
5_CD :_: Update_NNP w_NN -LRB-_-LRB- i_LS -RRB-_-RRB- to_TO w_VB -LRB-_-LRB- i_LS -RRB-_-RRB- m_NN and_CC w_NN -LRB-_-LRB- j_NN -RRB-_-RRB- to_TO w_VB -LRB-_-LRB- j_NN -RRB-_-RRB- m_NN ._.
6_CD :_: If_IN w_NN -LRB-_-LRB- i_LS -RRB-_-RRB- =_JJ #_# ,_, add_VB i_FW to_TO V_NN ._.
If_IN w_NN -LRB-_-LRB- j_NN -RRB-_-RRB- =_JJ #_# ,_, add_VB j_NN to_TO V_NN ._.
Notice_NNP ,_, selecting_VBG an_DT edge_NN using_VBG the_DT lexicographic_JJ order_NN is_VBZ crutial_JJ to_TO guarantee_VB the_DT monotonicity_NN property_NN ._.
Algorithm_NN #_# outputs_VBZ a_DT vertex_NN cover_NN V_NN whose_WP$ weight_NN is_VBZ within_IN #_# times_NNS of_IN the_DT optimum_NN ._.
For_IN convenience_NN ,_, we_PRP use_VBP VC_NN -LRB-_-LRB- c_NN -RRB-_-RRB- to_TO denote_VB the_DT vertex_NN cover_NN computed_VBN by_IN Algorithm_NNP #_# when_WRB the_DT cost_NN vector_NN of_IN vertices_NNS is_VBZ c_NN ._.
Below_IN we_PRP generalize_VBP Algorithm_NNP #_# to_TO a_DT more_RBR general_JJ scenario_NN ._.
Typically_RB ,_, a_DT round-based_JJ output_NN can_MD be_VB characterized_VBN as_IN follows_VBZ -LRB-_-LRB- Algorithm_NN #_# -RRB-_-RRB- ._.
DEFINITION_NN #_# ._.
An_DT updating_VBG rule_NN Ur_NN is_VBZ said_VBN to_TO be_VB crossingindependent_JJ if_IN ,_, for_IN any_DT agent_NN i_FW not_RB selected_VBN in_IN round_JJ r_NN ,_, -LRB-_-LRB- #_# -RRB-_-RRB- Sr_NNP +_CC #_# and_CC cr_NN +_CC #_# i_FW do_VBP not_RB depend_VB on_IN cr_NN j_NN -LRB-_-LRB- #_# -RRB-_-RRB- for_IN fixed_VBN cr_NN i_FW ,_, cr_NN i1_NN cr_NN i2_NN implies_VBZ that_IN cr_NN +_CC #_# i1_CD cr_NN +_CC #_# i2_NN ._.
We_PRP have_VBP the_DT following_VBG theorem_NN about_IN the_DT existence_NN of_IN a_DT truthful_JJ payment_NN using_VBG a_DT round_NN based_VBN allocation_NN rule_NN A_NN ._.
THEOREM_NNP #_# ._.
A_DT round-based_JJ output_NN A_NN ,_, with_IN the_DT framework_NN defined_VBN in_IN Algorithm_NNP #_# ,_, satisfies_VBZ MP_NN if_IN the_DT output_NN methods_NNS Or_CC satisfy_VB MP_NN and_CC all_DT updating_VBG rules_NNS Ur_NN are_VBP crossing-independent_JJ ._.
PROOF_NN ._.
Consider_VB an_DT agent_NN i_FW and_CC fixed_VBN ci_NN ._.
We_PRP prove_VBP that_IN when_WRB an_DT agent_NN i_FW is_VBZ selected_VBN with_IN cost_NN ci_NN ,_, then_RB it_PRP is_VBZ also_RB selected_VBN with_IN cost_NN di_FW <_JJR ci_NN ._.
Assume_VB that_DT i_FW is_VBZ selected_VBN in_IN round_JJ r_NN with_IN cost_NN ci_NN ._.
Then_RB under_IN cost_NN di_FW ,_, if_IN agent_NN i_FW is_VBZ selected_VBN in_IN a_DT round_NN before_IN r_NN ,_, our_PRP$ claim_NN holds_VBZ ._.
Otherwise_RB ,_, consider_VB in_IN round_JJ r_NN ._.
Clearly_RB ,_, the_DT setting_NN Sr_NNP and_CC the_DT costs_NNS of_IN all_DT other_JJ agents_NNS are_VBP the_DT same_JJ as_IN what_WP if_IN agent_NN i_FW had_VBD cost_VBN ci_NN since_IN i_FW is_VBZ not_RB selected_VBN in_IN the_DT previous_JJ rounds_NNS due_JJ to_TO the_DT crossindependent_JJ property_NN ._.
Since_IN i_FW is_VBZ selected_VBN in_IN round_JJ r_NN with_IN cost_NN ci_NN ,_, i_FW is_VBZ also_RB selected_VBN in_IN round_JJ r_NN with_IN di_FW <_JJR ci_NNS due_JJ to_TO the_DT reason_NN that_WDT Or_CC satisfies_VBZ MP_NN ._.
This_DT finishes_VBZ the_DT proof_NN ._.
217_CD Algorithm_NN #_# A_DT General_JJ Round-Based_JJ Allocation_NN Rule_NN A_NN 1_CD :_: Set_VB r_NN =_JJ #_# ,_, c0_NN =_JJ c_NN ,_, and_CC G0_NN =_JJ G_NN initially_RB ._.
2_CD :_: repeat_NN 3_CD :_: Compute_VB an_DT output_NN or_CC using_VBG a_DT deterministic_JJ algorithm_NN Or_CC :_: Sr_NNP cr_NN -LCB-_-LRB- #_# ,_, #_# -RCB-_-RRB- n_NN ._.
Here_RB Or_CC ,_, cr_NN and_CC Sr_NNP are_VBP allocation_NN rule_NN ,_, cost_NN vector_NN and_CC game_NN setting_NN in_IN game_NN Gr_NN ,_, respectively_RB ._.
Remark_NN :_: Or_CC is_VBZ often_RB a_DT simple_JJ greedy_JJ algorithm_NN such_JJ as_IN selecting_VBG the_DT agents_NNS that_WDT minimize_VBP some_DT utilitarian_JJ function_NN ._.
For_IN the_DT example_NN of_IN vertex_NN cover_NN ,_, Or_CC will_MD always_RB select_VB the_DT light-weighted_JJ node_NN on_IN the_DT lexicographically_RB least_JJS uncovered_JJ edge_NN -LRB-_-LRB- i_FW ,_, j_NN -RRB-_-RRB- ._.
4_CD :_: Let_VB r_NN =_JJ r_NN +_CC #_# ._.
Update_NNP the_DT game_NN Gr1_NN to_TO obtain_VB a_DT new_JJ game_NN Gr_NN with_IN setting_VBG Sr_NNP and_CC cost_NN vector_NN cr_NN according_VBG to_TO some_DT rule_NN Ur_NN :_: Or1_NN -LRB-_-LRB- Sr1_NN ,_, cr1_NN -RRB-_-RRB- -LRB-_-LRB- Sr_NNP ,_, cr_NN -RRB-_-RRB- ._.
Here_RB we_PRP updates_NNS the_DT cost_NN and_CC setting_NN of_IN the_DT game_NN ._.
Remark_NN :_: For_IN the_DT example_NN of_IN vertex_NN cover_NN ,_, the_DT updating_VBG rule_NN will_MD decrease_VB the_DT weight_NN of_IN vertices_NNS i_FW and_CC j_FW by_IN min_NN -LRB-_-LRB- w_NN -LRB-_-LRB- i_LS -RRB-_-RRB- ,_, w_NN -LRB-_-LRB- j_NN -RRB-_-RRB- -RRB-_-RRB- ._.
5_CD :_: until_IN a_DT valid_JJ output_NN is_VBZ found_VBN 6_CD :_: Return_NN the_DT union_NN of_IN the_DT set_NN of_IN selected_VBN players_NNS of_IN each_DT round_NN as_IN the_DT final_JJ output_NN ._.
For_IN the_DT example_NN of_IN vertex_NN cover_NN ,_, it_PRP is_VBZ the_DT union_NN of_IN nodes_NNS selected_VBN in_IN all_DT rounds_NNS ._.
Algorithm_NN #_# Compute_VB Cut_NNP Value_NNP for_IN Round-Based_NNP Algorithms_NNP Input_NNP :_: A_NNP round-based_JJ output_NN A_NN ,_, a_DT game_NN G1_NN =_JJ G_NN ,_, and_CC a_DT updating_VBG function_NN vector_NN U_NN ._.
Output_NN :_: The_DT cut_NN value_NN x_NN for_IN agent_NN k_NN ._.
1_CD :_: Set_VB r_NN =_JJ #_# and_CC ck_NN =_JJ ._.
Recall_VB that_DT is_VBZ a_DT value_NN that_WDT can_MD guarantee_VB Ak_NN =_JJ #_# when_WRB an_DT agent_NN reports_VBZ the_DT cost_NN ._.
2_CD :_: repeat_NN 3_CD :_: Compute_VB an_DT output_NN or_CC using_VBG a_DT deterministic_JJ algorithm_NN based_VBN on_IN setting_VBG Sr_NNP using_VBG allocation_NN rule_NN Or_CC :_: Sr_NNP cr_NN -LCB-_-LRB- #_# ,_, #_# -RCB-_-RRB- n_NN ._.
4_CD :_: Find_VB the_DT cut_NN value_NN for_IN agent_NN k_NN based_VBN on_IN the_DT allocation_NN rule_NN Or_CC for_IN costs_NNS cr_VBP k_NN ._.
Let_VB r_NN =_JJ k_NN -LRB-_-LRB- Or_CC ,_, cr_NN k_NN -RRB-_-RRB- be_VB the_DT cut_NN value_NN ._.
5_CD :_: Set_VB r_NN =_JJ r_NN +_CC #_# and_CC obtain_VB a_DT new_JJ game_NN Gr_NN from_IN Gr1_NN and_CC or_CC according_VBG to_TO the_DT updating_VBG rule_NN Ur_NN ._.
6_CD :_: Let_VB cr_NN be_VB the_DT new_JJ cost_NN vector_NN for_IN game_NN Gr_NN ._.
7_CD :_: until_IN a_DT valid_JJ output_NN is_VBZ found_VBN ._.
8_CD :_: Let_VB gi_NN -LRB-_-LRB- x_NN -RRB-_-RRB- be_VB the_DT cost_NN of_IN ci_NN k_NN when_WRB the_DT original_JJ cost_NN vector_NN is_VBZ c_NN |_NN k_NN x_NN ._.
9_CD :_: Find_VB the_DT minimum_JJ value_NN x_NN such_JJ that_IN 8_CD >_JJR >_JJR >_JJR >_JJR >_JJR <_JJR >_JJR >_JJR >_JJR >_JJR >_JJR :_: g1_NN -LRB-_-LRB- x_NN -RRB-_-RRB- #_# ;_: g2_NN -LRB-_-LRB- x_NN -RRB-_-RRB- #_# ;_: ..._: gt1_NN -LRB-_-LRB- x_NN -RRB-_-RRB- t1_NN ;_: gt_NN -LRB-_-LRB- x_NN -RRB-_-RRB- t_NN ._.
Here_RB ,_, t_NN is_VBZ the_DT total_JJ number_NN of_IN rounds_NNS ._.
10_CD :_: Output_NN the_DT value_NN x_NN as_IN the_DT cut_NN value_NN ._.
If_IN the_DT round-based_JJ output_NN satisfies_NNS monotonicity_NN property_NN ,_, the_DT cut-value_JJ always_RB exists_VBZ ._.
We_PRP then_RB show_VBP how_WRB to_TO find_VB the_DT cut_NN value_NN for_IN a_DT selected_VBN agent_NN k_NN in_IN Algorithm_NNP #_# ._.
The_DT correctness_NN of_IN Algorithm_NNP #_# is_VBZ straightforward_JJ ._.
To_TO compute_VB the_DT cut_NN value_NN ,_, we_PRP assume_VBP that_IN -LRB-_-LRB- #_# -RRB-_-RRB- the_DT cut_NN value_NN r_NN for_IN each_DT round_NN r_NN can_MD be_VB computed_VBN in_IN polynomial_JJ time_NN ;_: -LRB-_-LRB- #_# -RRB-_-RRB- we_PRP can_MD solve_VB the_DT equation_NN gr_NN -LRB-_-LRB- x_NN -RRB-_-RRB- =_JJ r_NN to_TO find_VB x_NN in_IN polynomial_JJ time_NN when_WRB the_DT cost_NN vector_NN ci_NN and_CC b_NN are_VBP given_VBN ._.
Now_RB we_PRP consider_VBP the_DT vertex_NN cover_NN problem_NN ._.
For_IN each_DT round_NN r_NN ,_, we_PRP select_VBP a_DT vertex_NN with_IN the_DT least_JJS weight_NN and_CC that_DT is_VBZ incident_NN on_IN the_DT lexicographically_RB least_JJS uncovered_JJ edge_NN ._.
The_DT output_NN satisfies_VBZ MP_NN ._.
For_IN agent_NN i_FW ,_, we_PRP update_VBP its_PRP$ cost_NN to_TO cr_NN i_FW cr_FW j_FW iff_FW edge_NN -LRB-_-LRB- i_FW ,_, j_NN -RRB-_-RRB- is_VBZ selected_VBN ._.
It_PRP is_VBZ easy_JJ to_TO verify_VB this_DT updating_VBG rule_NN is_VBZ crossing-independent_JJ ,_, thus_RB we_PRP can_MD apply_VB Algorithm_NNP #_# to_TO compute_VB the_DT cut_NN value_NN for_IN the_DT set_VBN cover_NN game_NN as_IN shown_VBN in_IN Algorithm_NNP #_# ._.
Algorithm_NN #_# Compute_VB Cut_NNP Value_NNP for_IN MVC_NNP ._.
Input_NN :_: A_DT node_NN weighted_JJ graph_NN G_NN =_JJ -LRB-_-LRB- V_NN ,_, E_NN ,_, c_NN -RRB-_-RRB- and_CC a_DT node_NN k_NN selected_VBN by_IN Algorithm_NNP #_# ._.
Output_NN :_: The_DT cut_NN value_NN k_NN -LRB-_-LRB- V_NN C_NN ,_, ck_NN -RRB-_-RRB- ._.
1_CD :_: For_IN each_DT i_FW V_NN ,_, set_VBN w_NN -LRB-_-LRB- i_LS -RRB-_-RRB- =_JJ ci_NN ._.
2_CD :_: Set_VB w_NN -LRB-_-LRB- k_NN -RRB-_-RRB- =_JJ ,_, pk_NN =_JJ #_# and_CC V_NN =_JJ ._.
3_CD :_: while_IN V_NN is_VBZ not_RB a_DT vertex_NN cover_NN do_VBP 4_CD :_: Pick_VB an_DT uncovered_JJ edge_NN -LRB-_-LRB- i_FW ,_, j_NN -RRB-_-RRB- with_IN the_DT least_JJS lexicographic_JJ order_NN among_IN all_DT uncovered_JJ edges_NNS ._.
5_CD :_: Set_VB m_NN =_JJ min_NN -LRB-_-LRB- w_NN -LRB-_-LRB- i_LS -RRB-_-RRB- ,_, w_NN -LRB-_-LRB- j_NN -RRB-_-RRB- -RRB-_-RRB- ._.
6_CD :_: Update_NNP w_NN -LRB-_-LRB- i_LS -RRB-_-RRB- =_JJ w_NN -LRB-_-LRB- i_LS -RRB-_-RRB- m_NN and_CC w_NN -LRB-_-LRB- j_NN -RRB-_-RRB- =_JJ w_NN -LRB-_-LRB- j_NN -RRB-_-RRB- m_NN ._.
7_CD :_: If_IN w_NN -LRB-_-LRB- i_LS -RRB-_-RRB- =_JJ #_# ,_, add_VB i_FW to_TO V_NN ;_: else_RB add_VB j_NN to_TO V_NN ._.
8_CD :_: If_IN i_FW =_JJ =_JJ k_NN or_CC j_NN =_JJ =_JJ k_NN then_RB set_VBD pk_NN =_JJ pk_NN +_CC m_NN ._.
9_CD :_: Output_NN pk_NN as_IN the_DT cut_NN value_NN k_NN -LRB-_-LRB- V_NN C_NN ,_, ck_NN -RRB-_-RRB- ._.
4_LS ._.
#_# Complex_JJ Combinations_NNS In_IN subsection_NN #_# ._.
#_# ,_, we_PRP discussed_VBD how_WRB to_TO find_VB the_DT cut_NN value_NN function_NN when_WRB the_DT output_NN of_IN the_DT binary_JJ demand_NN game_NN is_VBZ a_DT simple_JJ combination_NN of_IN some_DT outputs_NNS ,_, whose_WP$ cut_NN values_NNS can_MD be_VB computed_VBN through_IN other_JJ means_NNS -LRB-_-LRB- typically_RB VCG_NNP -RRB-_-RRB- ._.
However_RB ,_, some_DT algorithms_NNS can_MD not_RB be_VB decomposed_VBN in_IN the_DT way_NN described_VBN in_IN subsection_NN #_# ._.
#_# ._.
Next_IN we_PRP present_VBP a_DT more_RBR complex_JJ way_NN to_TO combine_VB allocation_NN rules_NNS ,_, and_CC as_IN we_PRP may_MD expected_VBD ,_, the_DT way_NN to_TO find_VB the_DT cut_NN value_NN is_VBZ also_RB more_RBR complicated_JJ ._.
Assume_VB that_IN there_EX are_VBP n_NN agents_NNS #_# i_FW n_NN with_IN cost_NN vector_NN c_NN ,_, and_CC there_EX are_VBP m_NN binary_JJ demand_NN games_NNS Gi_NN with_IN objective_JJ functions_NNS fi_NN -LRB-_-LRB- o_NN ,_, c_NN -RRB-_-RRB- ,_, setting_VBG Si_NNP and_CC allocation_NN rule_NN i_FW where_WRB i_FW =_JJ #_# ,_, #_# ,_, ,_, m_NN ._.
There_EX is_VBZ another_DT binary_JJ demand_NN game_NN with_IN setting_VBG S_NN and_CC allocation_NN rule_NN O_NN ,_, whose_WP$ input_NN is_VBZ a_DT cost_NN vector_NN d_NN =_JJ -LRB-_-LRB- d1_NN ,_, d2_NN ,_, ,_, dm_NN -RRB-_-RRB- ._.
Let_VB f_SYM be_VB the_DT function_NN vector_NN -LRB-_-LRB- f1_NN ,_, f2_NN ,_, ,_, fm_NN -RRB-_-RRB- ,_, be_VB the_DT allocation_NN rule_NN vector_NN -LRB-_-LRB- #_# ,_, #_# ,_, ,_, m_NN -RRB-_-RRB- and_CC be_VB the_DT setting_NN vector_NN -LRB-_-LRB- S1_NN ,_, S2_NN ,_, ,_, Sm_NN -RRB-_-RRB- ._.
For_IN notation_NN simplicity_NN ,_, we_PRP define_VBP Fi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ fi_NN -LRB-_-LRB- i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- ,_, c_NN -RRB-_-RRB- ,_, for_IN each_DT #_# i_FW m_NN ,_, and_CC F_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ -LRB-_-LRB- F1_NN -LRB-_-LRB- c_NN -RRB-_-RRB- ,_, F2_NN -LRB-_-LRB- c_NN -RRB-_-RRB- ,_, ,_, Fm_NN -LRB-_-LRB- c_NN -RRB-_-RRB- -RRB-_-RRB- ._.
Let_VB us_PRP see_VB a_DT concrete_JJ example_NN of_IN these_DT combinations_NNS ._.
Consider_VB a_DT link_NN weighted_JJ graph_NN G_NN =_JJ -LRB-_-LRB- V_NN ,_, E_NN ,_, c_NN -RRB-_-RRB- ,_, and_CC a_DT subset_NN of_IN q_JJ nodes_NNS Q_NNP V_NNP ._.
The_DT Steiner_NNP tree_NN problem_NN is_VBZ to_TO find_VB a_DT set_NN of_IN links_NNS with_IN minimum_JJ total_JJ cost_NN to_TO connect_VB Q_NNP ._.
One_CD way_NN to_TO find_VB an_DT approximation_NN of_IN the_DT Steiner_NNP tree_NN is_VBZ as_IN follows_VBZ :_: -LRB-_-LRB- #_# -RRB-_-RRB- we_PRP build_VBP a_DT virtual_JJ complete_JJ graph_NN H_NN using_VBG Q_NNP as_IN its_PRP$ vertices_NNS ,_, and_CC the_DT cost_NN of_IN each_DT edge_NN -LRB-_-LRB- i_FW ,_, j_NN -RRB-_-RRB- is_VBZ the_DT cost_NN of_IN LCP_NN -LRB-_-LRB- i_FW ,_, j_NN ,_, c_NN -RRB-_-RRB- in_IN graph_NN G_NN ;_: -LRB-_-LRB- #_# -RRB-_-RRB- build_VBP the_DT minimum_NN spanning_VBG tree_NN of_IN H_NN ,_, denoted_VBN as_IN MST_NN -LRB-_-LRB- H_NN -RRB-_-RRB- ;_: -LRB-_-LRB- #_# -RRB-_-RRB- an_DT edge_NN of_IN G_NN is_VBZ selected_VBN iff_IN it_PRP is_VBZ selected_VBN in_IN some_DT LCP_NN -LRB-_-LRB- i_FW ,_, j_NN ,_, c_NN -RRB-_-RRB- and_CC edge_NN -LRB-_-LRB- i_FW ,_, j_NN -RRB-_-RRB- of_IN H_NN is_VBZ selected_VBN to_TO MST_NN -LRB-_-LRB- H_NN -RRB-_-RRB- ._.
In_IN this_DT game_NN ,_, we_PRP define_VBP q_NN -LRB-_-LRB- q_NN #_# -RRB-_-RRB- /_: #_# games_NNS Gi_NN ,_, j_NN ,_, where_WRB i_LS ,_, j_NN Q_NNP ,_, with_IN objective_JJ functions_NNS fi_VBP ,_, j_VBP -LRB-_-LRB- o_NN ,_, c_NN -RRB-_-RRB- being_VBG the_DT minimum_JJ cost_NN of_IN 218_CD connecting_VBG i_FW and_CC j_FW in_FW graph_NN G_NN ,_, setting_VBG Si_NNP being_VBG the_DT original_JJ graph_NN G_NN and_CC allocation_NN rule_NN is_VBZ LCP_NNP -LRB-_-LRB- i_FW ,_, j_NN ,_, c_NN -RRB-_-RRB- ._.
The_DT game_NN G_NN corresponds_VBZ to_TO the_DT MST_NNP game_NN on_IN graph_NN H_NN ._.
The_DT cost_NN of_IN the_DT pair-wise_JJ q_NN -LRB-_-LRB- q_NN #_# -RRB-_-RRB- /_: #_# shortest_JJS paths_NNS defines_VBZ the_DT input_NN vector_NN d_NN =_JJ -LRB-_-LRB- d1_NN ,_, d2_NN ,_, ,_, dm_NN -RRB-_-RRB- for_IN game_NN MST_NN ._.
More_JJR details_NNS will_MD be_VB given_VBN in_IN Section_NN #_# ._.
#_# ._.
DEFINITION_NN #_# ._.
Given_VBN an_DT allocation_NN rule_NN O_NN and_CC setting_VBG S_NN ,_, an_DT objective_JJ function_NN vector_NN f_FW ,_, an_DT allocation_NN rule_NN vector_NN and_CC setting_NN vector_NN ,_, we_PRP define_VBP a_DT compound_NN binary_JJ demand_NN game_NN with_IN setting_VBG S_NN and_CC output_NN O_NN F_NN as_IN -LRB-_-LRB- O_NN F_NN -RRB-_-RRB- i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ Wm_NN j_NN =_JJ #_# -LRB-_-LRB- Oj_NN -LRB-_-LRB- F_NN -LRB-_-LRB- c_NN -RRB-_-RRB- -RRB-_-RRB- j_NN i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- -RRB-_-RRB- ._.
The_DT allocation_NN rule_NN of_IN the_DT above_JJ definition_NN can_MD be_VB interpreted_VBN as_IN follows_VBZ ._.
An_DT agent_NN i_FW is_VBZ selected_VBN if_IN and_CC only_RB if_IN there_EX is_VBZ a_DT j_NN such_JJ that_IN -LRB-_-LRB- #_# -RRB-_-RRB- i_FW is_VBZ selected_VBN in_IN j_NN -LRB-_-LRB- c_NN -RRB-_-RRB- ,_, and_CC -LRB-_-LRB- #_# -RRB-_-RRB- the_DT allocation_NN rule_NN O_NN will_MD select_VB index_NN j_NN under_IN cost_NN profile_NN F_NN -LRB-_-LRB- c_NN -RRB-_-RRB- ._.
For_IN simplicity_NN ,_, we_PRP will_MD use_VB O_NN F_NN to_TO denote_VB the_DT output_NN of_IN this_DT compound_NN binary_JJ demand_NN game_NN ._.
Notice_NNP that_IN a_DT truthful_JJ payment_NN scheme_NN using_VBG O_NN F_NN as_IN output_NN exists_VBZ if_IN and_CC only_RB if_IN it_PRP satisfies_VBZ the_DT monotonicity_NN property_NN ._.
To_TO study_VB when_WRB O_NN F_NN satisfies_VBZ MP_NN ,_, several_JJ necessary_JJ definitions_NNS are_VBP in_IN order_NN ._.
DEFINITION_NN #_# ._.
Function_NN Monotonicity_NN Property_NN -LRB-_-LRB- FMP_NN -RRB-_-RRB- Given_VBN an_DT objective_JJ function_NN g_NN and_CC an_DT allocation_NN rule_NN O_NN ,_, a_DT function_NN H_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ g_NN -LRB-_-LRB- O_NN -LRB-_-LRB- c_NN -RRB-_-RRB- ,_, c_NN -RRB-_-RRB- is_VBZ said_VBN to_TO satisfy_VB the_DT function_NN monotonicity_NN property_NN ,_, if_IN ,_, given_VBN fixed_VBN ci_NNS ,_, it_PRP satisfies_VBZ :_: 1_CD ._.
When_WRB Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ,_, H_NN -LRB-_-LRB- c_NN -RRB-_-RRB- does_VBZ not_RB increase_VB over_IN ci_NN ._.
2_LS ._.
When_WRB Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ,_, H_NN -LRB-_-LRB- c_NN -RRB-_-RRB- does_VBZ not_RB decrease_VB over_IN ci_NN ._.
DEFINITION_NN #_# ._.
Strong_JJ Monotonicity_NN Property_NN -LRB-_-LRB- SMP_NN -RRB-_-RRB- An_DT allocation_NN rule_NN O_NN is_VBZ said_VBN to_TO satisfy_VB the_DT strong_JJ monotonicity_NN property_NN if_IN O_NN satisfies_VBZ MP_NN ,_, and_CC for_IN any_DT agent_NN i_FW with_IN Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# and_CC agent_NN j_NN =_JJ i_FW ,_, Oi_NN -LRB-_-LRB- c_NN |_CD j_NN cj_NN -RRB-_-RRB- =_JJ #_# if_IN cj_NN cj_NN or_CC Oj_NN -LRB-_-LRB- c_NN |_CD j_NN cj_NN -RRB-_-RRB- =_JJ #_# ._.
LEMMA_NNP #_# ._.
For_IN a_DT given_VBN allocation_NN rule_NN O_NN satisfying_VBG SMP_NN and_CC cost_NN vectors_NNS c_NN ,_, c_NN with_IN ci_NN =_JJ ci_NN ,_, if_IN Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# and_CC Oi_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ,_, then_RB there_EX must_MD exist_VB j_NN =_JJ i_FW such_JJ that_IN cj_NN <_JJR cj_CD and_CC Oj_NN -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ._.
From_IN the_DT definition_NN of_IN the_DT strong_JJ monotonicity_NN property_NN ,_, we_PRP have_VBP Lemma_NNP #_# directly_RB ._.
We_PRP now_RB can_MD give_VB a_DT sufficient_JJ condition_NN when_WRB O_NN F_NN satisfies_VBZ the_DT monotonicity_NN property_NN ._.
THEOREM_NNP #_# ._.
If_IN i_FW -LSB-_-LRB- #_# ,_, m_NN -RSB-_-RRB- ,_, Fi_NNP satisfies_VBZ FMP_NNP ,_, i_FW satisfies_VBZ MP_NN ,_, and_CC the_DT output_NN O_NN satisfies_VBZ SMP_NNP ,_, then_RB O_NN F_NN satisfies_VBZ MP_NN ._.
PROOF_NN ._.
Assuming_VBG for_IN cost_NN vector_NN c_NN we_PRP have_VBP -LRB-_-LRB- O_NN F_NN -RRB-_-RRB- i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ 1_CD ,_, we_PRP should_MD prove_VB for_IN any_DT cost_NN vector_NN c_NN =_JJ c_NN |_NN i_FW ci_FW with_IN ci_NN <_JJR ci_CD ,_, -LRB-_-LRB- O_NN F_NN -RRB-_-RRB- i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ._.
Noticing_VBG that_DT -LRB-_-LRB- O_NN F_NN -RRB-_-RRB- i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ,_, without_IN loss_NN of_IN generality_NN ,_, we_PRP assume_VBP that_IN Ok_NN -LRB-_-LRB- F_NN -LRB-_-LRB- c_NN -RRB-_-RRB- -RRB-_-RRB- =_JJ #_# and_CC k_NN i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# for_IN some_DT index_NN #_# k_NN m_NN ._.
Now_RB consider_VB the_DT output_NN O_NN with_IN the_DT cost_NN vector_NN F_NN -LRB-_-LRB- c_NN -RRB-_-RRB- |_CD k_NN Fk_NN -LRB-_-LRB- c_NN -RRB-_-RRB- ._.
There_EX are_VBP two_CD scenarios_NNS ,_, which_WDT will_MD be_VB studied_VBN one_CD by_IN one_CD as_IN follows_VBZ ._.
One_CD scenario_NN is_VBZ that_IN index_NN k_NN is_VBZ not_RB chosen_VBN by_IN the_DT output_NN function_NN O_NN ._.
From_IN Lemma_NNP #_# ,_, there_EX must_MD exist_VB j_NN =_JJ k_NN such_JJ that_IN Fj_NN -LRB-_-LRB- c_NN -RRB-_-RRB- <_JJR Fj_NN -LRB-_-LRB- c_NN -RRB-_-RRB- -LRB-_-LRB- #_# -RRB-_-RRB- Oj_NN -LRB-_-LRB- F_NN -LRB-_-LRB- c_NN -RRB-_-RRB- |_CD k_NN Fk_NN -LRB-_-LRB- c_NN -RRB-_-RRB- -RRB-_-RRB- =_JJ #_# -LRB-_-LRB- #_# -RRB-_-RRB- We_PRP then_RB prove_VBP that_IN agent_NN i_FW will_MD be_VB selected_VBN in_IN the_DT output_NN j_NN -LRB-_-LRB- c_NN -RRB-_-RRB- ,_, i_FW ._.
e_LS ._.
,_, j_NN i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ._.
If_IN it_PRP is_VBZ not_RB ,_, since_IN j_NN -LRB-_-LRB- c_NN -RRB-_-RRB- satisfies_VBZ MP_NN ,_, we_PRP have_VBP j_NN i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ j_NN i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# from_IN ci_NN <_JJR ci_CD ._.
Since_IN Fj_NNP satisfies_VBZ FMP_NNP ,_, we_PRP know_VBP Fj_NN -LRB-_-LRB- c_NN -RRB-_-RRB- Fj_NN -LRB-_-LRB- c_NN -RRB-_-RRB- ,_, which_WDT is_VBZ a_DT contradiction_NN to_TO the_DT inequality_NN -LRB-_-LRB- #_# -RRB-_-RRB- ._.
Consequently_RB ,_, we_PRP have_VBP j_NN i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ._.
From_IN Equation_NN -LRB-_-LRB- #_# -RRB-_-RRB- ,_, the_DT fact_NN that_IN index_NN k_NN is_VBZ not_RB selected_VBN by_IN allocation_NN rule_NN O_NN and_CC the_DT definition_NN of_IN SMP_NNP ,_, we_PRP have_VBP Oj_NN -LRB-_-LRB- F_NN -LRB-_-LRB- c_NN -RRB-_-RRB- -RRB-_-RRB- =_JJ #_# ,_, Thus_RB ,_, agent_NN i_FW is_VBZ selected_VBN by_IN O_NN F_NN because_IN of_IN Oj_NN -LRB-_-LRB- F_NN -LRB-_-LRB- c_NN -RRB-_-RRB- -RRB-_-RRB- =_JJ #_# and_CC j_NN i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ._.
The_DT other_JJ scenario_NN is_VBZ that_IN index_NN k_NN is_VBZ chosen_VBN by_IN the_DT output_NN function_NN O_NN ._.
First_RB ,_, agent_NN i_FW is_VBZ chosen_VBN in_IN k_NN -LRB-_-LRB- c_NN -RRB-_-RRB- since_IN the_DT output_NN k_NN -LRB-_-LRB- c_NN -RRB-_-RRB- satisfies_VBZ the_DT monotonicity_NN property_NN and_CC ci_NN <_JJR ci_CD and_CC k_NN i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ._.
Secondly_RB ,_, since_IN the_DT function_NN Fk_NN satisfies_VBZ FMP_NNP ,_, we_PRP know_VBP that_IN Fk_NN -LRB-_-LRB- c_NN -RRB-_-RRB- Fk_NN -LRB-_-LRB- c_NN -RRB-_-RRB- ._.
Remember_VB that_DT output_NN O_NN satisfies_VBZ the_DT SMP_NNP ,_, thus_RB we_PRP can_MD obtain_VB Ok_NN -LRB-_-LRB- F_NN -LRB-_-LRB- c_NN -RRB-_-RRB- -RRB-_-RRB- =_JJ #_# from_IN the_DT fact_NN that_IN Ok_NN -LRB-_-LRB- F_NN -LRB-_-LRB- c_NN -RRB-_-RRB- |_CD k_NN Fk_NN -LRB-_-LRB- c_NN -RRB-_-RRB- -RRB-_-RRB- =_JJ #_# and_CC Fk_NN -LRB-_-LRB- c_NN -RRB-_-RRB- Fk_NN -LRB-_-LRB- c_NN -RRB-_-RRB- ._.
Consequently_RB ,_, agent_NN i_FW will_MD also_RB be_VB selected_VBN in_IN the_DT final_JJ output_NN O_NN F_NN ._.
This_DT finishes_VBZ our_PRP$ proof_NN ._.
This_DT theorem_NN implies_VBZ that_IN there_EX is_VBZ a_DT cut_NN value_NN for_IN the_DT compound_JJ output_NN O_NN F_NN ._.
We_PRP then_RB discuss_VBP how_WRB to_TO find_VB the_DT cut_NN value_NN for_IN this_DT output_NN ._.
Below_IN we_PRP will_MD give_VB an_DT algorithm_NN to_TO calculate_VB i_FW -LRB-_-LRB- O_NN F_NN -RRB-_-RRB- when_WRB -LRB-_-LRB- #_# -RRB-_-RRB- O_NN satisfies_VBZ SMP_NNP ,_, -LRB-_-LRB- #_# -RRB-_-RRB- j_NN satisfies_VBZ MP_NN ,_, and_CC -LRB-_-LRB- #_# -RRB-_-RRB- for_IN fixed_VBN ci_NN ,_, Fj_NN -LRB-_-LRB- c_NN -RRB-_-RRB- is_VBZ a_DT constant_JJ ,_, say_VBP hj_NN ,_, when_WRB j_NN i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ,_, and_CC Fj_NN -LRB-_-LRB- c_NN -RRB-_-RRB- increases_VBZ when_WRB j_NN i_FW -LRB-_-LRB- c_NN -RRB-_-RRB- =_JJ #_# ._.
Notice_NNP that_IN here_RB hj_NN can_MD be_VB easily_RB computed_VBN by_IN setting_VBG ci_NN =_JJ since_IN j_NN satisfies_VBZ the_DT monotonicity_NN property_NN ._.
When_WRB given_VBN i_FW and_CC fixed_VBN ci_NN ,_, we_PRP define_VBP -LRB-_-LRB- Fi_FW j_FW -RRB-_-RRB- #_# -LRB-_-LRB- y_NN -RRB-_-RRB- as_IN the_DT smallest_JJS x_NN such_JJ that_IN Fj_NN -LRB-_-LRB- c_NN |_CD i_FW x_NN -RRB-_-RRB- =_JJ y_NN ._.
For_IN simplicity_NN ,_, we_PRP denote_VBP -LRB-_-LRB- Fi_FW j_FW -RRB-_-RRB- #_# as_IN F1_NN j_NN if_IN no_DT confusion_NN is_VBZ caused_VBN when_WRB i_FW is_VBZ a_DT fixed_JJ agent_NN ._.
In_IN this_DT paper_NN ,_, we_PRP assume_VBP that_IN given_VBN any_DT y_NN ,_, we_PRP can_MD find_VB such_JJ x_NN in_IN polynomial_JJ time_NN ._.
Algorithm_NN #_# Find_VB Cut_NNP Value_NNP for_IN Compound_NN Method_NN O_NN F_NN Input_NN :_: allocation_NN rule_NN O_NN ,_, objective_JJ function_NN vector_NN F_NN and_CC inverse_JJ function_NN vector_NN F1_NN =_JJ -LCB-_-LRB- F1_NN 1_CD ,_, ,_, F1_NN m_NN -RCB-_-RRB- ,_, allocation_NN rule_NN vector_NN and_CC fixed_VBN ci_NN ._.
Output_NN :_: Cut_NNP value_NN for_IN agent_NN i_FW based_VBN on_IN O_NN F_NN ._.
1_CD :_: for_IN #_# j_FW m_NN do_VBP 2_CD :_: Compute_VB the_DT outputs_NNS j_NN -LRB-_-LRB- ci_NN -RRB-_-RRB- ._.
3_CD :_: Compute_VB hj_NN =_JJ Fj_NN -LRB-_-LRB- c_NN |_CD i_LS -RRB-_-RRB- ._.
4_CD :_: Use_NNP h_NN =_JJ -LRB-_-LRB- h1_NN ,_, h2_NN ,_, ,_, hm_NN -RRB-_-RRB- as_IN the_DT input_NN for_IN the_DT output_NN function_NN O_NN ._.
Denote_VB j_NN =_JJ j_NN -LRB-_-LRB- O_NN ,_, hj_NN -RRB-_-RRB- as_IN the_DT cut_NN value_NN function_NN of_IN output_NN O_NN based_VBN on_IN input_NN h_NN ._.
5_CD :_: for_IN #_# j_FW m_NN do_VBP 6_CD :_: Set_VB i_FW ,_, j_NN =_JJ F1_NN j_NN -LRB-_-LRB- min_NN -LCB-_-LRB- j_NN ,_, hj_NN -RCB-_-RRB- -RRB-_-RRB- ._.
7_CD :_: The_DT cut_NN value_NN for_IN i_FW is_VBZ i_FW -LRB-_-LRB- O_NN F_NN ,_, ci_NN -RRB-_-RRB- =_JJ maxm_FW j_FW =_JJ #_# i_LS ,_, j_NN ._.
THEOREM_NNP ##_CD ._.
Algorithm_NN #_# computes_VBZ the_DT correct_JJ cut_NN value_NN for_IN agent_NN i_FW based_VBN on_IN the_DT allocation_NN rule_NN O_NN F_NN ._.
PROOF_NN ._.
In_IN order_NN to_TO prove_VB the_DT correctness_NN of_IN the_DT cut_NN value_NN function_NN calculated_VBN by_IN Algorithm_NNP #_# ,_, we_PRP prove_VBP the_DT following_VBG two_CD cases_NNS ._.
For_IN our_PRP$ convenience_NN ,_, we_PRP will_MD use_VB i_FW to_TO represent_VB i_FW -LRB-_-LRB- O_NN F_NN ,_, ci_NN -RRB-_-RRB- if_IN no_DT confusion_NN caused_VBD ._.
First_RB ,_, if_IN di_FW <_JJR i_FW then_RB -LRB-_-LRB- O_NN F_NN -RRB-_-RRB- i_FW -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- =_JJ #_# ._.
Without_IN loss_NN of_IN generality_NN ,_, we_PRP assume_VBP that_IN i_FW =_JJ i_FW ,_, j_NN for_IN some_DT j_NN ._.
Since_IN function_NN Fj_NN satisfies_VBZ FMP_NN and_CC j_NN i_FW -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- =_JJ #_# ,_, we_PRP have_VBP Fj_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- <_JJR Fj_NN -LRB-_-LRB- i_LS -RRB-_-RRB- ._.
Notice_NNP di_FW <_JJR i_LS ,_, j_NN ,_, from_IN the_DT definition_NN of_IN i_FW ,_, j_NN =_JJ F1_NN j_NN -LRB-_-LRB- min_NN -LCB-_-LRB- j_NN ,_, hj_NN -RCB-_-RRB- -RRB-_-RRB- we_PRP have_VBP -LRB-_-LRB- #_# -RRB-_-RRB- j_NN i_FW -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- =_JJ #_# ,_, -LRB-_-LRB- #_# -RRB-_-RRB- Fj_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- <_JJR j_NN due_JJ to_TO the_DT fact_NN that_IN Fj_NN -LRB-_-LRB- x_NN -RRB-_-RRB- is_VBZ a_DT non-decreasing_JJ function_NN when_WRB j_NN is_VBZ selected_VBN ._.
Thus_RB ,_, from_IN the_DT monotonicity_NN property_NN of_IN O_NN and_CC j_NN is_VBZ the_DT cut_NN value_NN for_IN output_NN O_NN ,_, we_PRP have_VBP Oj_NN -LRB-_-LRB- h_NN |_CD j_NN Fj_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- -RRB-_-RRB- =_JJ #_# ._.
-LRB-_-LRB- #_# -RRB-_-RRB- If_IN Oj_NN -LRB-_-LRB- F_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- -RRB-_-RRB- =_JJ #_# then_RB -LRB-_-LRB- OF_IN -RRB-_-RRB- i_FW -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- =_JJ #_# ._.
Otherwise_RB ,_, since_IN O_NN satisfies_VBZ SMP_NNP ,_, Lemma_NNP #_# and_CC equation_NN #_# imply_VBP that_IN there_EX exists_VBZ at_IN least_JJS one_CD index_NN k_NN such_JJ that_IN Ok_NN -LRB-_-LRB- F_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- -RRB-_-RRB- =_JJ #_# and_CC Fk_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- <_JJR hk_NN ._.
Note_VB Fk_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- <_JJR hk_NN implies_VBZ that_IN i_FW is_VBZ selected_VBN in_IN k_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- since_IN hk_NN =_JJ Fk_NN -LRB-_-LRB- ci_NN |_CD i_LS -RRB-_-RRB- ._.
In_IN other_JJ words_NNS ,_, agent_NN i_FW is_VBZ selected_VBN in_IN OF_IN ._.
219_CD Second_JJ ,_, if_IN di_FW i_FW -LRB-_-LRB- O_NN F_NN ,_, ci_NN -RRB-_-RRB- then_RB -LRB-_-LRB- O_NN F_NN -RRB-_-RRB- i_FW -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- =_JJ #_# ._.
Assume_VB for_IN the_DT sake_NN of_IN contradiction_NN that_WDT -LRB-_-LRB- O_NN F_NN -RRB-_-RRB- i_FW -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- =_JJ #_# ._.
Then_RB there_EX exists_VBZ an_DT index_NN #_# j_FW m_NN such_JJ that_IN Oj_NN -LRB-_-LRB- F_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- -RRB-_-RRB- =_JJ #_# and_CC j_NN i_FW -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- =_JJ #_# ._.
Remember_VB that_DT hk_NN Fk_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- for_IN any_DT k_NN ._.
Thus_RB ,_, from_IN the_DT fact_NN that_IN O_NN satisfies_VBZ SMP_NNP ,_, when_WRB changing_VBG the_DT cost_NN vector_NN from_IN F_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- to_TO h_NN |_NN j_NN Fj_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- ,_, we_PRP still_RB have_VBP Oj_NN -LRB-_-LRB- h_NN |_CD j_NN Fj_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- -RRB-_-RRB- =_JJ 1_CD ._.
This_DT implies_VBZ that_IN Fj_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- <_JJR j_NN ._.
Combining_VBG the_DT above_JJ inequality_NN and_CC the_DT fact_NN that_IN Fj_NN -LRB-_-LRB- c_NN |_CD i_FW c_NN |_NN i_FW di_FW -RRB-_-RRB- <_JJR hj_NN ,_, we_PRP have_VBP Fj_NN -LRB-_-LRB- c_NN |_CD i_FW di_FW -RRB-_-RRB- <_JJR min_NN -LCB-_-LRB- hj_NN ,_, j_NN -RCB-_-RRB- ._.
This_DT implies_VBZ di_FW <_JJR F1_CD j_NN -LRB-_-LRB- min_NN -LCB-_-LRB- hj_NN ,_, j_NN -RCB-_-RRB- -RRB-_-RRB- =_JJ i_FW ,_, j_NN <_JJR i_FW -LRB-_-LRB- O_NN F_NN ,_, ci_NN -RRB-_-RRB- ._.
which_WDT is_VBZ a_DT contradiction_NN ._.
This_DT finishes_VBZ our_PRP$ proof_NN ._.
In_IN most_JJS applications_NNS ,_, the_DT allocation_NN rule_NN j_NN implements_VBZ the_DT objective_JJ function_NN fj_NN and_CC fj_NN is_VBZ utilitarian_JJ ._.
Thus_RB ,_, we_PRP can_MD compute_VB the_DT inverse_NN of_IN F1_NN j_NN efficiently_RB ._.
Another_DT issue_NN is_VBZ that_IN it_PRP seems_VBZ the_DT conditions_NNS when_WRB we_PRP can_MD apply_VB Algorithm_NNP #_# are_VBP restrictive_JJ ._.
However_RB ,_, lots_NNS of_IN games_NNS in_IN practice_NN satisfy_VBP these_DT properties_NNS and_CC here_RB we_PRP show_VBP how_WRB to_TO deduct_VB the_DT MAX_NNP combination_NN in_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- ._.
Assume_VB A1_NN and_CC A2_NN are_VBP two_CD allocation_NN rules_NNS for_IN single_JJ minded_VBN combinatorial_JJ auction_NN ,_, then_RB the_DT combination_NN MAX_NN -LRB-_-LRB- A1_NN ,_, A2_NN -RRB-_-RRB- returns_VBZ the_DT allocation_NN with_IN the_DT larger_JJR welfare_NN ._.
If_IN algorithm_NN A1_NN and_CC A2_NN satisfy_VBP MP_NN and_CC FMP_NN ,_, the_DT operation_NN max_NN -LRB-_-LRB- x_NN ,_, y_NN -RRB-_-RRB- which_WDT returns_VBZ the_DT larger_JJR element_NN of_IN x_NN and_CC y_NN satisfies_NNS SMP_NNP ._.
From_IN Theorem_NNP #_# we_PRP obtain_VBP that_IN combination_NN MAX_NN -LRB-_-LRB- A1_NN ,_, A2_NN -RRB-_-RRB- also_RB satisfies_VBZ MP_NN ._.
Further_RB ,_, the_DT cut_NN value_NN of_IN the_DT MAX_NNP combination_NN can_MD be_VB found_VBN by_IN Algorithm_NNP #_# ._.
As_IN we_PRP will_MD show_VB in_IN Section_NN #_# ,_, the_DT complex_NN combination_NN can_MD apply_VB to_TO some_DT more_RBR complicated_JJ problems_NNS ._.
5_CD ._.
CONCRETE_JJ EXAMPLES_NNS 5_CD ._.
#_# Set_VB Cover_NNP In_IN the_DT set_VBN cover_NN problem_NN ,_, there_EX is_VBZ a_DT set_NN U_NN of_IN m_NN elements_NNS needed_VBN to_TO be_VB covered_VBN ,_, and_CC each_DT agent_NN #_# i_FW n_NN can_MD cover_VB a_DT subset_NN of_IN elements_NNS Si_NNP with_IN a_DT cost_NN ci_NN ._.
Let_VB S_NN =_JJ -LCB-_-LRB- S1_NN ,_, S2_NN ,_, ,_, Sn_NNP -RCB-_-RRB- and_CC c_NN =_JJ -LRB-_-LRB- c1_NN ,_, c2_NN ,_, ,_, cn_NN -RRB-_-RRB- ._.
We_PRP want_VBP to_TO find_VB a_DT subset_NN of_IN agents_NNS D_NN such_JJ that_IN U_NNP S_NNP iD_NNP Si_NNP ._.
The_DT selected_VBN subsets_NNS is_VBZ called_VBN the_DT set_NN cover_NN for_IN U_NNP ._.
The_DT social_JJ efficiency_NN of_IN the_DT output_NN D_NN is_VBZ defined_VBN as_IN P_NN iD_NN ci_NN ,_, which_WDT is_VBZ the_DT objective_JJ function_NN to_TO be_VB minimized_VBN ._.
Clearly_RB ,_, this_DT is_VBZ a_DT utilitarian_JJ and_CC thus_RB VCG_NNP mechanism_NN can_MD be_VB applied_VBN if_IN we_PRP can_MD find_VB the_DT subset_NN of_IN S_NN that_WDT covers_VBZ U_NN with_IN the_DT minimum_JJ cost_NN ._.
It_PRP is_VBZ well-known_JJ that_IN finding_VBG the_DT optimal_JJ solution_NN is_VBZ NP-hard_NN ._.
In_IN -LSB-_-LRB- #_# -RSB-_-RRB- ,_, an_DT algorithm_NN of_IN approximation_NN ratio_NN of_IN Hm_NN has_VBZ been_VBN proposed_VBN and_CC it_PRP has_VBZ been_VBN proved_VBN that_IN this_DT is_VBZ the_DT best_JJS ratio_NN possible_JJ for_IN the_DT set_VBN cover_NN problem_NN ._.
For_IN the_DT completeness_NN of_IN presentation_NN ,_, we_PRP review_VBP their_PRP$ method_NN here_RB ._.
Algorithm_NN #_# Greedy_JJ Set_VB Cover_NNP -LRB-_-LRB- GSC_NNP -RRB-_-RRB- Input_NNP :_: Agent_NNP i_FW ''_'' s_VBZ subset_NN Si_NNP covered_VBD and_CC cost_VBD ci_NN ._.
-LRB-_-LRB- #_# i_FW n_NN -RRB-_-RRB- ._.
Output_NN :_: A_DT set_NN of_IN agents_NNS that_WDT can_MD cover_VB all_DT elements_NNS ._.
1_CD :_: Initialize_VB r_NN =_JJ #_# ,_, T0_NN =_JJ ,_, and_CC R_NN =_JJ ._.
2_CD :_: while_IN R_NN =_JJ U_NN do_VBP 3_CD :_: Find_VB the_DT set_NN Sj_NN with_IN the_DT minimum_NN density_NN cj_NN |_CD Sj_NN Tr_NN |_NN ._.
4_CD :_: Set_VB Tr_NN +_CC #_# =_JJ Tr_NN S_NN Sj_NN and_CC R_NN =_JJ R_NN S_NN j_NN ._.
5_CD :_: r_NN =_JJ r_NN +_CC #_# 6_CD :_: Output_NN R_NN ._.
Let_VB GSC_NNP -LRB-_-LRB- S_NN -RRB-_-RRB- be_VB the_DT sets_NNS selected_VBN by_IN the_DT Algorithm_NNP #_# ._.
Notice_NNP that_IN the_DT output_NN set_NN is_VBZ a_DT function_NN of_IN S_NN and_CC c_NN ._.
Some_DT works_NNS assume_VBP that_IN the_DT type_NN of_IN an_DT agent_NN could_MD be_VB ci_NN ,_, i_FW ._.
e_LS ._.
,_, Si_NNP is_VBZ assumed_VBN to_TO be_VB a_DT public_JJ knowledge_NN ._.
Here_RB ,_, we_PRP consider_VBP a_DT more_JJR general_JJ case_NN in_IN which_WDT the_DT type_NN of_IN an_DT agent_NN is_VBZ -LRB-_-LRB- Si_NNP ,_, ci_NN -RRB-_-RRB- ._.
In_IN other_JJ words_NNS ,_, we_PRP assume_VBP that_IN every_DT agent_NN i_FW can_MD not_RB only_RB lie_VB about_IN its_PRP$ cost_NN ci_NN but_CC also_RB can_MD lie_VB about_IN the_DT set_VBN Si_NNP ._.
This_DT problem_NN now_RB looks_VBZ similar_JJ to_TO the_DT combinatorial_JJ auction_NN with_IN single_JJ minded_VBN bidder_NN studied_VBN in_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- ,_, but_CC with_IN the_DT following_VBG differences_NNS :_: in_IN the_DT set_VBN cover_NN problem_NN we_PRP want_VBP to_TO cover_VB all_PDT the_DT elements_NNS and_CC the_DT sets_NNS chosen_VBN can_MD have_VB some_DT overlap_VBP while_IN in_IN combinatorial_JJ auction_NN the_DT chosen_VBN sets_NNS are_VBP disjoint_NN ._.
We_PRP can_MD show_VB that_IN the_DT mechanism_NN M_NN =_JJ -LRB-_-LRB- GSC_NNP ,_, PV_NNP CG_NNP -RRB-_-RRB- ,_, using_VBG Algorithm_NNP #_# to_TO find_VB a_DT set_NN cover_NN and_CC apply_VB VCG_NNP mechanism_NN to_TO compute_VB the_DT payment_NN to_TO the_DT selected_VBN agents_NNS ,_, is_VBZ not_RB truthful_JJ ._.
Obviously_RB ,_, the_DT set_NN cover_NN problem_NN is_VBZ a_DT binary_JJ demand_NN game_NN ._.
For_IN the_DT moment_NN ,_, we_PRP assume_VBP that_IN agent_NN i_FW won_VBD ''_'' t_NN be_VB able_JJ to_TO lie_VB about_IN Si_NNP ._.
We_PRP will_MD drop_VB this_DT assumption_NN later_RB ._.
We_PRP show_VBP how_WRB to_TO design_VB a_DT truthful_JJ mechanism_NN by_IN applying_VBG our_PRP$ general_JJ framework_NN ._.
1_LS ._.
Check_VB the_DT monotonicity_NN property_NN :_: The_DT output_NN of_IN Algorithm_NNP #_# is_VBZ a_DT round-based_JJ output_NN ._.
Thus_RB ,_, for_IN an_DT agent_NN i_FW ,_, we_PRP first_RB focus_VB on_IN the_DT output_NN of_IN one_CD round_NN r_NN ._.
In_IN round_JJ r_NN ,_, if_IN i_FW is_VBZ selected_VBN by_IN Algorithm_NNP #_# ,_, then_RB it_PRP has_VBZ the_DT minimum_JJ ratio_NN ci_NN |_CD SiTr_NNP |_CD among_IN all_DT remaining_VBG agents_NNS ._.
Now_RB consider_VB the_DT case_NN when_WRB i_FW lies_VBZ its_PRP$ cost_NN to_TO ci_NN <_JJR ci_CD ,_, obviously_RB ci_FW |_FW SiTr_FW |_FW is_VBZ still_RB minimum_JJ among_IN all_DT remaining_VBG agents_NNS ._.
Consequently_RB ,_, agent_NN i_FW is_VBZ still_RB selected_VBN in_IN round_JJ r_NN ,_, which_WDT means_VBZ the_DT output_NN of_IN round_NN r_NN satisfies_VBZ MP_NN ._.
Now_RB we_PRP look_VBP into_IN the_DT updating_VBG rules_NNS ._.
For_IN every_DT round_NN ,_, we_PRP only_RB update_VBP the_DT Tr_NN +_CC #_# =_JJ Tr_NN S_NN Sj_NN and_CC R_NN =_JJ R_NN S_NN j_NN ,_, which_WDT is_VBZ obviously_RB cross-independent_JJ ._.
Thus_RB ,_, by_IN applying_VBG Theorem_NNP 8_CD ,_, we_PRP know_VBP the_DT output_NN by_IN Algorithm_NNP #_# satisfies_VBZ MP_NN ._.
2_LS ._.
Find_VB the_DT cut_NN value_NN :_: To_TO calculate_VB the_DT cut_NN value_NN for_IN agent_NN i_FW with_IN fixed_VBN cost_NN vector_NN ci_NN ,_, we_PRP follow_VBP the_DT steps_NNS in_IN Algorithm_NNP 4_CD ._.
First_RB ,_, we_PRP set_VBD ci_NN =_JJ and_CC apply_VB Algorithm_NN #_# ._.
Let_VB ir_NNP be_VB the_DT agent_NN selected_VBN in_IN round_JJ r_NN and_CC Ti_NN r_NN +_CC #_# be_VB the_DT corresponding_JJ set_NN ._.
Then_RB the_DT cut_NN value_NN of_IN round_JJ r_NN is_VBZ r_NN =_JJ cir_NN |_CD Sir_NNP Ti_NNP r_NN |_CD |_CD Si_NNP Ti_NNP r_NN |_NN ._.
Remember_VB the_DT updating_VBG rule_NN only_RB updates_NNS the_DT game_NN setting_NN but_CC not_RB the_DT cost_NN of_IN the_DT agent_NN ,_, thus_RB we_PRP have_VBP gr_NN -LRB-_-LRB- x_NN -RRB-_-RRB- =_JJ x_NN r_NN for_IN #_# r_NN t_NN ._.
Therefore_RB ,_, the_DT final_JJ cut_NN value_NN for_IN agent_NN i_FW is_VBZ i_FW -LRB-_-LRB- GSC_NNP ,_, ci_NN -RRB-_-RRB- =_JJ max_NN r_NN -LCB-_-LRB- cir_NN |_CD Sir_NNP Ti_NNP r_NN |_CD |_CD Si_NNP Ti_NNP r_NN |_CD -RCB-_-RRB- The_DT payment_NN to_TO an_DT agent_NN i_FW is_VBZ i_FW if_IN i_FW is_VBZ selected_VBN ;_: otherwise_RB its_PRP$ payment_NN is_VBZ #_# ._.
We_PRP now_RB consider_VBP the_DT scenario_NN when_WRB agent_NN i_FW can_MD lie_VB about_IN Si_NNP ._.
Assume_VB that_DT agent_NN i_FW can_MD not_RB lie_VB upward_RB ,_, i_FW ._.
e_LS ._.
,_, it_PRP can_MD only_RB report_VB a_DT set_NN Si_NNP Si_NNP ._.
We_PRP argue_VBP that_IN agent_NN i_FW will_MD not_RB lie_VB about_IN its_PRP$ elements_NNS Si_NNP ._.
Notice_NNP that_IN the_DT cut_NN value_NN computed_VBD for_IN round_JJ r_NN is_VBZ r_NN =_JJ cir_NN |_CD Sir_NNP T_NN i_FW r_NN |_CD |_CD Si_NNP Ti_NNP r_NN |_NN ._.
Obviously_RB |_CD Si_NNP Ti_NNP r_NN |_CD |_CD Si_NNP Ti_NNP r_NN |_NN for_IN any_DT Si_NNP Si_NNP ._.
Thus_RB ,_, lying_VBG its_PRP$ set_VBN as_IN Si_NNP will_MD not_RB increase_VB the_DT cut_NN value_NN for_IN each_DT round_NN ._.
Thus_RB lying_VBG about_IN Si_NNP will_MD not_RB improve_VB agent_NN i_FW ''_'' s_VBZ utility_NN ._.
5_CD ._.
#_# Link_NNP Weighted_NNP Steiner_NNP Trees_NNP Consider_VB any_DT link_NN weighted_JJ network_NN G_NN =_JJ -LRB-_-LRB- V_NN ,_, E_NN ,_, c_NN -RRB-_-RRB- ,_, where_WRB E_NN =_JJ -LCB-_-LRB- e1_NN ,_, e2_NN ,_, ,_, em_NN -RCB-_-RRB- are_VBP the_DT set_NN of_IN links_NNS and_CC ci_NN is_VBZ the_DT weight_NN of_IN the_DT link_NN ei_NN ._.
The_DT link_NN weighted_JJ Steiner_NNP tree_NN problem_NN is_VBZ to_TO find_VB a_DT tree_NN rooted_VBN at_IN source_NN node_NN s_VBZ spanning_VBG a_DT given_VBN set_NN of_IN nodes_NNS Q_NNP =_JJ -LCB-_-LRB- q1_NN ,_, q2_NN ,_, ,_, qk_NN -RCB-_-RRB- V_NN ._.
For_IN simplicity_NN ,_, we_PRP assume_VBP that_IN qi_NN =_JJ vi_LS ,_, for_IN #_# i_FW k_NN ._.
Here_RB the_DT links_NNS are_VBP agents_NNS ._.
The_DT total_JJ cost_NN of_IN links_NNS in_IN a_DT graph_NN H_NN G_NN is_VBZ called_VBN the_DT weight_NN of_IN H_NN ,_, denoted_VBN as_IN -LRB-_-LRB- H_NN -RRB-_-RRB- ._.
It_PRP is_VBZ NP-hard_JJ to_TO find_VB the_DT minimum_JJ cost_NN multicast_JJ tree_NN when_WRB given_VBN an_DT arbitrary_JJ link_NN weighted_JJ 220_CD graph_NN G_NN -LSB-_-LRB- ##_CD ,_, ##_CD -RSB-_-RRB- ._.
The_DT currently_RB best_JJS polynomial_JJ time_NN method_NN has_VBZ approximation_NN ratio_NN #_# +_CC ln_NN #_# 2_CD -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
Here_RB ,_, we_PRP review_VBP and_CC discuss_VBP the_DT first_JJ approximation_NN method_NN by_IN Takahashi_NNP and_CC Matsuyama_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
Algorithm_NN #_# Find_VB LinkWeighted_JJ SteinerTree_NN -LRB-_-LRB- LST_NN -RRB-_-RRB- Input_NN :_: Network_NNP G_NN =_JJ -LRB-_-LRB- V_NN ,_, E_NN ,_, c_NN -RRB-_-RRB- where_WRB c_NN is_VBZ the_DT cost_NN vector_NN for_IN link_NN set_NN E_NN ._.
Source_NN node_NN s_NNS and_CC receiver_NN set_VBD Q_NNP ._.
Output_NN :_: A_DT tree_NN LST_NN rooted_VBN at_IN s_NNS and_CC spanned_VBD all_DT receivers_NNS ._.
1_CD :_: Set_VB r_NN =_JJ #_# ,_, G1_NN =_JJ G_NN ,_, Q1_NN =_JJ Q_NNP and_CC s1_NN =_JJ s_NNS ._.
2_CD :_: repeat_NN 3_CD :_: In_IN graph_NN Gr_NN ,_, find_VB the_DT receiver_NN ,_, say_VBP qi_NN ,_, that_WDT is_VBZ closest_JJS to_TO the_DT source_NN s_NNS ,_, i_FW ._.
e_LS ._.
,_, LCP_NNP -LRB-_-LRB- s_NNS ,_, qi_NN ,_, c_NN -RRB-_-RRB- has_VBZ the_DT least_JJS cost_NN among_IN the_DT shortest_JJS paths_NNS from_IN s_NNS to_TO all_DT receivers_NNS in_IN Qr_NNP ._.
4_CD :_: Select_NNP all_DT links_NNS on_IN LCP_NN -LRB-_-LRB- s_NNS ,_, qi_NN ,_, c_NN -RRB-_-RRB- as_IN relay_NN links_NNS and_CC set_VB their_PRP$ cost_NN to_TO #_# ._.
The_DT new_JJ graph_NN is_VBZ denoted_VBN as_IN Gr_NN +_CC #_# ._.
5_CD :_: Set_VB tr_NN as_IN qi_NN and_CC Pr_NN =_JJ LCP_NN -LRB-_-LRB- s_NNS ,_, qi_NN ,_, c_NN -RRB-_-RRB- ._.
6_CD :_: Set_VB Qr_NN +_CC #_# =_SYM Qr_FW \_FW qi_FW and_CC r_NN =_JJ r_NN +_CC #_# ._.
7_CD :_: until_IN all_DT receivers_NNS are_VBP spanned_VBN ._.
Hereafter_NNP ,_, let_VBD LST_NN -LRB-_-LRB- G_NN -RRB-_-RRB- be_VB the_DT final_JJ tree_NN constructed_VBN using_VBG the_DT above_JJ method_NN ._.
It_PRP is_VBZ shown_VBN in_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- that_WDT mechanism_NN M_NN =_JJ -LRB-_-LRB- LST_NN ,_, pV_NN CG_NN -RRB-_-RRB- is_VBZ not_RB truthful_JJ ,_, where_WRB pV_NN CG_NN is_VBZ the_DT payment_NN calculated_VBN based_VBN on_IN VCG_NNP mechanism_NN ._.
We_PRP then_RB show_VBP how_WRB to_TO design_VB a_DT truthful_JJ payment_NN scheme_NN using_VBG our_PRP$ general_JJ framework_NN ._.
Observe_VB that_IN the_DT output_NN Pr_NN ,_, for_IN any_DT round_JJ r_NN ,_, satisfies_VBZ MP_NN ,_, and_CC the_DT update_VBP rule_NN for_IN every_DT round_NN satisfies_VBZ crossing-independence_NN ._.
Thus_RB ,_, from_IN Theorem_NNP #_# ,_, the_DT roundbased_JJ output_NN LST_NN satisfies_VBZ MP_NN ._.
In_IN round_JJ r_NN ,_, the_DT cut_NN value_NN for_IN a_DT link_NN ei_NN can_MD be_VB obtained_VBN by_IN using_VBG the_DT VCG_NNP mechanism_NN ._.
Now_RB we_PRP set_VBD ci_NN =_JJ and_CC execute_VB Algorithm_NNP #_# ._.
Let_VB wi_NN r_NN -LRB-_-LRB- ci_NN -RRB-_-RRB- be_VB the_DT cost_NN of_IN the_DT path_NN Pr_NN -LRB-_-LRB- ci_NN -RRB-_-RRB- selected_VBN in_IN the_DT rth_NN round_NN and_CC i_FW r_NN -LRB-_-LRB- ci_NN -RRB-_-RRB- be_VB the_DT shortest_JJS path_NN selected_VBN in_IN round_JJ r_NN if_IN the_DT cost_NN of_IN ci_NN is_VBZ temporarily_RB set_VBN to_TO ._.
Then_RB the_DT cut_NN value_NN for_IN round_JJ r_NN is_VBZ r_NN =_JJ wi_NN r_NN -LRB-_-LRB- ci_NN -RRB-_-RRB- |_CD i_FW r_NN -LRB-_-LRB- ci_NN -RRB-_-RRB- |_CD where_WRB |_NN i_FW r_NN -LRB-_-LRB- ci_NN -RRB-_-RRB- |_NN is_VBZ the_DT cost_NN of_IN the_DT path_NN i_FW r_NN -LRB-_-LRB- ci_NN -RRB-_-RRB- excluding_VBG node_NN vi_LS ._.
Using_VBG Algorithm_NN #_# ,_, we_PRP obtain_VBP the_DT final_JJ cut_NN value_NN for_IN agent_NN i_FW :_: i_FW -LRB-_-LRB- LST_NN ,_, ci_NN -RRB-_-RRB- =_JJ maxr_NN -LCB-_-LRB- r_NN -RCB-_-RRB- ._.
Thus_RB ,_, the_DT payment_NN to_TO a_DT link_NN ei_NN is_VBZ i_FW -LRB-_-LRB- LST_NN ,_, ci_NN -RRB-_-RRB- if_IN its_PRP$ reported_VBN cost_NN is_VBZ di_FW <_JJR i_FW -LRB-_-LRB- LST_NN ,_, di_FW -RRB-_-RRB- ;_: otherwise_RB ,_, its_PRP$ payment_NN is_VBZ #_# ._.
5_CD ._.
#_# Virtual_JJ Minimal_JJ Spanning_VBG Trees_NNP To_TO connect_VB the_DT given_VBN set_NN of_IN receivers_NNS to_TO the_DT source_NN node_NN ,_, besides_IN the_DT Steiner_NNP tree_NN constructed_VBN by_IN the_DT algorithms_NNS described_VBN before_IN ,_, a_DT virtual_JJ minimum_NN spanning_VBG tree_NN is_VBZ also_RB often_RB used_VBN ._.
Assume_VB that_DT Q_NNP is_VBZ the_DT set_NN of_IN receivers_NNS ,_, including_VBG the_DT sender_NN ._.
Assume_VB that_IN the_DT nodes_NNS in_IN a_DT node-weighted_JJ graph_NN are_VBP all_DT agents_NNS ._.
The_DT virtual_JJ minimum_NN spanning_VBG tree_NN is_VBZ constructed_VBN as_IN follows_VBZ ._.
Algorithm_NN #_# Construct_VB VMST_NN 1_CD :_: for_IN all_DT pairs_NNS of_IN receivers_NNS qi_VBP ,_, qj_VBP Q_NNP do_VBP 2_CD :_: Calculate_VB the_DT least_JJS cost_NN path_NN LCP_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, d_NN -RRB-_-RRB- ._.
3_CD :_: Construct_VB a_DT virtual_JJ complete_JJ link_NN weighted_JJ graph_NN K_NN -LRB-_-LRB- d_NN -RRB-_-RRB- using_VBG Q_NNP as_IN its_PRP$ node_NN set_NN ,_, where_WRB the_DT link_NN qiqj_NN corresponds_VBZ to_TO the_DT least_JJS cost_NN path_NN LCP_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, d_NN -RRB-_-RRB- ,_, and_CC its_PRP$ weight_NN is_VBZ w_NN -LRB-_-LRB- qiqj_NN -RRB-_-RRB- =_JJ |_CD LCP_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, d_NN -RRB-_-RRB- |_NN ._.
4_CD :_: Build_VB the_DT minimum_NN spanning_VBG tree_NN on_IN K_NN -LRB-_-LRB- d_NN -RRB-_-RRB- ,_, denoted_VBN as_IN V_NN MST_NN -LRB-_-LRB- d_NN -RRB-_-RRB- ._.
5_CD :_: for_IN every_DT virtual_JJ link_NN qiqj_NN in_IN V_NN MST_NN -LRB-_-LRB- d_NN -RRB-_-RRB- do_VBP 6_CD :_: Find_VB the_DT corresponding_JJ least_JJS cost_NN path_NN LCP_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, d_NN -RRB-_-RRB- in_IN the_DT original_JJ network_NN ._.
7_CD :_: Mark_NNP the_DT agents_NNS on_IN LCP_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, d_NN -RRB-_-RRB- selected_VBN ._.
The_DT mechanism_NN M_NN =_JJ -LRB-_-LRB- V_NN MST_NN ,_, pV_NN CG_NN -RRB-_-RRB- is_VBZ not_RB truthful_JJ -LSB-_-LRB- ##_CD -RSB-_-RRB- ,_, where_WRB the_DT payment_NN pV_NN CG_NN to_TO a_DT node_NN is_VBZ based_VBN on_IN the_DT VCG_NNP mechanism_NN ._.
We_PRP then_RB show_VBP how_WRB to_TO design_VB a_DT truthful_JJ mechanism_NN based_VBN on_IN the_DT framework_NN we_PRP described_VBD ._.
1_LS ._.
Check_VB the_DT monotonicity_NN property_NN :_: Remember_VB that_IN in_IN the_DT complete_JJ graph_NN K_NN -LRB-_-LRB- d_NN -RRB-_-RRB- ,_, the_DT weight_NN of_IN a_DT link_NN qiqj_NN is_VBZ |_CD LCP_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, d_NN -RRB-_-RRB- |_NN ._.
In_IN other_JJ words_NNS ,_, we_PRP implicitly_RB defined_VBD |_CD Q_NNP |_CD -LRB-_-LRB- |_CD Q_NNP |_CD #_# -RRB-_-RRB- /_: #_# functions_VBZ fi_NN ,_, j_NN ,_, for_IN all_DT i_FW <_JJR j_NN and_CC qi_NN Q_NNP and_CC qj_NN Q_NNP ,_, with_IN fi_NN ,_, j_NN -LRB-_-LRB- d_NN -RRB-_-RRB- =_JJ |_CD LCP_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, d_NN -RRB-_-RRB- |_NN ._.
We_PRP can_MD show_VB that_IN the_DT function_NN fi_NN ,_, j_NN -LRB-_-LRB- d_NN -RRB-_-RRB- =_JJ |_CD LCP_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, d_NN -RRB-_-RRB- |_NN satisfies_VBZ FMP_NNP ,_, LCP_NNP satisfies_VBZ MP_NN ,_, and_CC the_DT output_NN MST_NN satisfies_VBZ SMP_NNP ._.
From_IN Theorem_NNP #_# ,_, the_DT allocation_NN rule_NN VMST_NN satisfies_VBZ the_DT monotonicity_NN property_NN ._.
2_LS ._.
Find_VB the_DT cut_NN value_NN :_: Notice_NNP VMST_NNP is_VBZ the_DT combination_NN of_IN MST_NN and_CC function_NN fi_NN ,_, j_NN ,_, so_RB cut_JJ value_NN for_IN VMST_NNP can_MD be_VB computed_VBN based_VBN on_IN Algorithm_NNP #_# as_IN follows_VBZ ._.
-LRB-_-LRB- a_DT -RRB-_-RRB- Given_VBN a_DT link_NN weighted_VBD complete_JJ graph_NN K_NN -LRB-_-LRB- d_NN -RRB-_-RRB- on_IN Q_NNP ,_, we_PRP should_MD find_VB the_DT cut_NN value_NN function_NN for_IN edge_NN ek_NN =_JJ -LRB-_-LRB- qi_NN ,_, qj_NN -RRB-_-RRB- based_VBN on_IN MST_NNP ._.
Given_VBN a_DT spanning_VBG tree_NN T_NN and_CC a_DT pair_NN of_IN terminals_NNS p_NN and_CC q_NN ,_, clearly_RB there_EX is_VBZ a_DT unique_JJ path_NN connecting_VBG them_PRP on_IN T_NN ._.
We_PRP denote_VBP this_DT path_NN as_IN T_NN -LRB-_-LRB- p_NN ,_, q_NN -RRB-_-RRB- ,_, and_CC the_DT edge_NN with_IN the_DT maximum_NN length_NN on_IN this_DT path_NN as_IN LE_NN -LRB-_-LRB- p_NN ,_, q_NN ,_, T_NN -RRB-_-RRB- ._.
Thus_RB ,_, the_DT cut_NN value_NN can_MD be_VB represented_VBN as_IN k_NN -LRB-_-LRB- MST_NN ,_, d_NN -RRB-_-RRB- =_JJ LE_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, MST_NN -LRB-_-LRB- d_NN |_CD k_NN -RRB-_-RRB- -RRB-_-RRB- -LRB-_-LRB- b_NN -RRB-_-RRB- We_PRP find_VBP the_DT value-cost_JJ function_NN for_IN LCP_NNP ._.
Assume_VB vk_NN LCP_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, d_NN -RRB-_-RRB- ,_, then_RB the_DT value-cost_JJ function_NN is_VBZ xk_NN =_JJ yk_NN |_NN LCPvk_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, d_NN |_NN k_NN 0_CD -RRB-_-RRB- |_RB ._.
Here_RB ,_, LCPvk_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, d_NN -RRB-_-RRB- is_VBZ the_DT least_JJS cost_NN path_NN between_IN qi_NN and_CC qj_NN with_IN node_NN vk_NN on_IN this_DT path_NN ._.
-LRB-_-LRB- c_NN -RRB-_-RRB- Remove_VB vk_NN and_CC calculate_VB the_DT value_NN K_NN -LRB-_-LRB- d_NN |_CD k_NN -RRB-_-RRB- ._.
Set_VB h_NN -LRB-_-LRB- i_FW ,_, j_NN -RRB-_-RRB- =_JJ |_CD LCP_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, d_NN |_NN -RRB-_-RRB- -RRB-_-RRB- |_NN for_IN every_DT pair_NN of_IN node_NN i_FW =_JJ j_NN and_CC let_VB h_NN =_JJ -LCB-_-LRB- h_NN -LRB-_-LRB- i_FW ,_, j_NN -RRB-_-RRB- -RCB-_-RRB- be_VB the_DT vector_NN ._.
Then_RB it_PRP is_VBZ easy_JJ to_TO show_VB that_IN -LRB-_-LRB- i_FW ,_, j_NN -RRB-_-RRB- =_JJ |_CD LE_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, MST_NN -LRB-_-LRB- h_NN |_NN -LRB-_-LRB- i_FW ,_, j_NN -RRB-_-RRB- -RRB-_-RRB- -RRB-_-RRB- |_NN is_VBZ the_DT cut_NN value_NN for_IN output_NN VMST_NN ._.
It_PRP easy_RB to_TO verify_VB that_IN min_NN -LCB-_-LRB- h_NN -LRB-_-LRB- i_FW ,_, j_NN -RRB-_-RRB- ,_, -LRB-_-LRB- i_LS ,_, j_NN -RRB-_-RRB- -RCB-_-RRB- =_JJ |_CD LE_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, MST_NN -LRB-_-LRB- h_NN -RRB-_-RRB- |_NN ._.
Thus_RB ,_, we_PRP know_VBP -LRB-_-LRB- i_FW ,_, j_NN -RRB-_-RRB- k_NN -LRB-_-LRB- V_NN MST_NN ,_, d_NN -RRB-_-RRB- is_VBZ |_CD LE_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, MST_NN -LRB-_-LRB- h_NN -RRB-_-RRB- |_CD |_CD LCPvk_NN -LRB-_-LRB- qi_NN ,_, qj_NN ,_, d_NN |_NN k_NN 0_CD -RRB-_-RRB- |_RB ._.
The_DT cut_NN value_NN for_IN agent_NN k_NN is_VBZ k_NN -LRB-_-LRB- V_NN MST_NN ,_, dk_NN -RRB-_-RRB- =_JJ max0i_NNS ,_, jr_NN ij_NN k_NN -LRB-_-LRB- V_NN MST_NN ,_, dk_NN -RRB-_-RRB- ._.
3_LS ._.
We_PRP pay_VBP agent_NN k_NN k_NN -LRB-_-LRB- V_NN MST_NN ,_, dk_NN -RRB-_-RRB- if_IN and_CC only_RB if_IN k_NN is_VBZ selected_VBN in_IN V_NN MST_NN -LRB-_-LRB- d_NN -RRB-_-RRB- ;_: else_RB we_PRP pay_VBP it_PRP #_# ._.
5_CD ._.
#_# Combinatorial_NNP Auctions_NNS Lehmann_NNP et_FW al_FW ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- studied_VBD how_WRB to_TO design_VB an_DT efficient_JJ truthful_JJ mechanism_NN for_IN single-minded_JJ combinatorial_JJ auction_NN ._.
In_IN a_DT singleminded_JJ combinatorial_JJ auction_NN ,_, there_EX is_VBZ a_DT set_NN of_IN items_NNS S_NN to_TO be_VB sold_VBN and_CC there_EX is_VBZ a_DT set_NN of_IN agents_NNS #_# i_FW n_NN who_WP wants_VBZ to_TO buy_VB some_DT of_IN the_DT items_NNS :_: agent_NN i_FW wants_VBZ to_TO buy_VB a_DT subset_NN Si_NNP S_NN with_IN maximum_JJ price_NN mi_NN ._.
A_DT single-minded_JJ bidder_NN i_FW declares_VBZ a_DT bid_NN bi_NN =_JJ Si_NNP ,_, ai_VBP with_IN Si_NNP S_NN and_CC ai_VBP R_NN +_CC ._.
Two_CD bids_NNS Si_NNP ,_, ai_VBP and_CC Sj_NN ,_, aj_NN conflict_NN if_IN Si_NNP Sj_NN =_JJ ._.
Given_VBN the_DT bids_NNS b1_NN ,_, b2_NN ,_, ,_, bn_NN ,_, they_PRP gave_VBD a_DT greedy_JJ round-based_JJ algorithm_NN as_IN follows_VBZ ._.
First_RB the_DT bids_NNS are_VBP sorted_VBN by_IN some_DT criterion_NN -LRB-_-LRB- ai_VBP |_CD Si_NNP |_CD #_# /_: #_# is_VBZ used_VBN in_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- -RRB-_-RRB- in_IN an_DT increasing_VBG order_NN and_CC let_VB L_NN be_VB the_DT list_NN of_IN sorted_VBN bids_NNS ._.
The_DT first_JJ bid_NN is_VBZ granted_VBN ._.
Then_RB the_DT algorithm_NN exams_NNS each_DT bid_NN of_IN L_NN in_IN order_NN and_CC grants_NNS the_DT bid_NN if_IN it_PRP does_VBZ not_RB conflict_VB with_IN any_DT of_IN the_DT bids_NNS previously_RB granted_VBN ._.
If_IN it_PRP does_VBZ ,_, it_PRP is_VBZ denied_VBN ._.
They_PRP proved_VBD that_IN this_DT greedy_JJ allocation_NN scheme_NN using_VBG criterion_NN ai_VBP |_CD Si_NNP |_CD #_# /_: #_# approximates_VBZ the_DT optimal_JJ allocation_NN within_IN a_DT factor_NN of_IN m_NN ,_, where_WRB m_NN is_VBZ the_DT number_NN of_IN goods_NNS in_IN S_NN ._.
In_IN the_DT auction_NN settings_NNS ,_, we_PRP have_VBP ci_NN =_JJ ai_VBP ._.
It_PRP is_VBZ easy_JJ to_TO verify_VB the_DT output_NN of_IN the_DT greedy_JJ algorithm_NN is_VBZ a_DT round-based_JJ output_NN ._.
Remember_VB after_IN bidder_NN j_NN is_VBZ selected_VBN for_IN round_JJ r_NN ,_, every_DT bidder_NN has_VBZ conflict_NN 221_CD with_IN j_NN will_MD not_RB be_VB selected_VBN in_IN the_DT rounds_NNS after_IN ._.
This_DT equals_VBZ to_TO update_VB the_DT cost_NN of_IN every_DT bidder_NN having_VBG conflict_NN with_IN j_NN to_TO #_# ,_, which_WDT satisfies_VBZ crossing-independence_NN ._.
In_IN addition_NN ,_, in_IN any_DT round_NN ,_, if_IN bidder_NN i_FW is_VBZ selected_VBN with_IN ai_VBP then_RB it_PRP will_MD still_RB be_VB selected_VBN when_WRB it_PRP declares_VBZ ai_VBP >_JJR ai_VBP ._.
Thus_RB ,_, for_IN every_DT round_NN ,_, it_PRP satisfies_VBZ MP_NN and_CC the_DT cut_NN value_NN is_VBZ |_CD Si_NNP |_CD #_# /_: #_# ajr_FW |_FW Sjr_FW |_FW #_# /_: #_# where_WRB jr_NN is_VBZ the_DT bidder_NN selected_VBN in_IN round_JJ r_NN if_IN we_PRP did_VBD not_RB consider_VB the_DT agent_NN i_FW at_IN all_DT ._.
Notice_NNP ajr_NNP |_NNP Sjr_NNP |_NNP #_# /_: #_# does_VBZ not_RB increase_VB when_WRB round_JJ r_NN increases_NNS ,_, so_IN the_DT final_JJ cut_NN value_NN is_VBZ |_CD Si_NNP |_CD #_# /_: #_# aj_IN |_CD Sj_NN |_CD #_# /_: #_# where_WRB bj_NN is_VBZ the_DT first_JJ bid_NN that_WDT has_VBZ been_VBN denied_VBN but_CC would_MD have_VB been_VBN selected_VBN were_VBD it_PRP not_RB only_RB for_IN the_DT presence_NN of_IN bidder_NN i_FW ._.
Thus_RB ,_, the_DT payment_NN by_IN agent_NN i_FW is_VBZ |_CD Si_NNP |_CD #_# /_: #_# aj_IN |_CD Sj_NN |_CD #_# /_: #_# if_IN ai_VBP |_CD Si_NNP |_CD #_# /_: #_# aj_IN |_CD Sj_NN |_CD #_# /_: #_# ,_, and_CC #_# otherwise_RB ._.
This_DT payment_NN scheme_NN is_VBZ exactly_RB the_DT same_JJ as_IN the_DT payment_NN scheme_NN in_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- ._.
6_CD ._.
CONCLUSIONS_NNS In_IN this_DT paper_NN ,_, we_PRP have_VBP studied_VBN how_WRB to_TO design_VB a_DT truthful_JJ mechanism_NN M_NN =_JJ -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- for_IN a_DT given_VBN allocation_NN rule_NN O_NN for_IN a_DT binary_JJ demand_NN game_NN ._.
We_PRP first_RB showed_VBD that_IN the_DT allocation_NN rule_NN O_NN satisfying_VBG the_DT MP_NN is_VBZ a_DT necessary_JJ and_CC sufficient_JJ condition_NN for_IN a_DT truthful_JJ mechanism_NN M_NN to_TO exist_VB ._.
We_PRP then_RB formulate_VBP a_DT general_JJ framework_NN for_IN designing_VBG payment_NN P_NN such_JJ that_IN the_DT mechanism_NN M_NN =_JJ -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- is_VBZ truthful_JJ and_CC computable_JJ in_IN polynomial_JJ time_NN ._.
We_PRP further_RB presented_VBD several_JJ general_JJ composition-based_JJ techniques_NNS to_TO compute_VB P_NN efficiently_RB for_IN various_JJ allocation_NN rules_NNS O_NN ._.
Several_JJ concrete_JJ examples_NNS were_VBD discussed_VBN to_TO demonstrate_VB our_PRP$ general_JJ framework_NN for_IN designing_VBG P_NN and_CC for_IN composition-based_JJ techniques_NNS of_IN computing_VBG P_NN in_IN polynomial_JJ time_NN ._.
In_IN this_DT paper_NN ,_, we_PRP have_VBP concentrated_VBN on_IN how_WRB to_TO compute_VB P_NN in_IN polynomial_JJ time_NN ._.
Our_PRP$ algorithms_NNS do_VBP not_RB necessarily_RB have_VB the_DT optimal_JJ running_VBG time_NN for_IN computing_VBG P_NN given_VBN O_NN ._.
It_PRP would_MD be_VB of_IN interest_NN to_TO design_VB algorithms_NNS to_TO compute_VB P_NN in_IN optimal_JJ time_NN ._.
We_PRP have_VBP made_VBN some_DT progress_NN in_IN this_DT research_NN direction_NN in_IN -LSB-_-LRB- ##_NN -RSB-_-RRB- by_IN providing_VBG an_DT algorithm_NN to_TO compute_VB the_DT payments_NNS for_IN unicast_NN in_IN a_DT node_NN weighted_JJ graph_NN in_IN optimal_JJ O_NN -LRB-_-LRB- n_NN log_NN n_NN +_CC m_NN -RRB-_-RRB- time_NN ._.
Another_DT research_NN direction_NN is_VBZ to_TO design_VB an_DT approximation_NN allocation_NN rule_NN O_NN satisfying_VBG MP_NN with_IN a_DT good_JJ approximation_NN ratio_NN for_IN a_DT given_VBN binary_JJ demand_NN game_NN ._.
Many_JJ works_NNS -LSB-_-LRB- ##_NNS ,_, ##_NN -RSB-_-RRB- in_IN the_DT mechanism_NN design_NN literature_NN are_VBP in_IN this_DT direction_NN ._.
We_PRP point_VBP out_RP here_RB that_IN the_DT goal_NN of_IN this_DT paper_NN is_VBZ not_RB to_TO design_VB a_DT better_JJR allocation_NN rule_NN for_IN a_DT problem_NN ,_, but_CC to_TO design_VB an_DT algorithm_NN to_TO compute_VB the_DT payments_NNS efficiently_RB when_WRB O_NN is_VBZ given_VBN ._.
It_PRP would_MD be_VB of_IN significance_NN to_TO design_VB allocation_NN rules_NNS with_IN good_JJ approximation_NN ratios_NNS such_JJ that_IN a_DT given_VBN binary_JJ demand_NN game_NN has_VBZ a_DT computationally_RB efficient_JJ payment_NN scheme_NN ._.
In_IN this_DT paper_NN ,_, we_PRP have_VBP studied_VBN mechanism_NN design_NN for_IN binary_JJ demand_NN games_NNS ._.
However_RB ,_, some_DT problems_NNS can_MD not_RB be_VB directly_RB formulated_VBN as_IN binary_JJ demand_NN games_NNS ._.
The_DT job_NN scheduling_NN problem_NN in_IN -LSB-_-LRB- #_# -RSB-_-RRB- is_VBZ such_JJ an_DT example_NN ._.
For_IN this_DT problem_NN ,_, a_DT truthful_JJ payment_NN scheme_NN P_NN exists_VBZ for_IN an_DT allocation_NN rule_NN O_NN if_IN and_CC only_RB if_IN the_DT workload_NN assigned_VBN by_IN O_NN is_VBZ monotonic_JJ in_IN a_DT certain_JJ manner_NN ._.
It_PRP wound_VBD be_VB of_IN interest_NN to_TO generalize_VB our_PRP$ framework_NN for_IN designing_VBG a_DT truthful_JJ payment_NN scheme_NN for_IN a_DT binary_JJ demand_NN game_NN to_TO non-binary_JJ demand_NN games_NNS ._.
Towards_IN this_DT research_NN direction_NN ,_, Theorem_NNP #_# can_MD be_VB extended_VBN to_TO a_DT general_JJ allocation_NN rule_NN O_NN ,_, whose_WP$ range_NN is_VBZ R_NN +_CC ._.
The_DT remaining_VBG difficulty_NN is_VBZ then_RB how_WRB to_TO compute_VB the_DT payment_NN P_NN under_IN mild_JJ assumptions_NNS about_IN the_DT valuations_NNS if_IN a_DT truthful_JJ mechanism_NN M_NN =_JJ -LRB-_-LRB- O_NN ,_, P_NN -RRB-_-RRB- does_VBZ exist_VB ._.
Acknowledgements_NNS We_PRP would_MD like_VB to_TO thank_VB Rakesh_NNP Vohra_NNP ,_, Tuomas_NNP Sandholm_NNP ,_, and_CC anonymous_JJ reviewers_NNS for_IN helpful_JJ comments_NNS and_CC discussions_NNS ._.
7_CD ._.
REFERENCES_NNS -LSB-_-LRB- #_# -RSB-_-RRB- A_DT ._.
ARCHER_NNP ,_, C_NNP ._.
PAPADIMITRIOU_NNP ,_, K_NNP ._.
T_NN ._.
,_, AND_CC TARDOS_NNS ,_, E_NN ._.
An_DT approximate_JJ truthful_JJ mechanism_NN for_IN combinatorial_JJ auctions_NNS with_IN single_JJ parameter_NN agents_NNS ._.
In_IN ACM-SIAM_NNP SODA_NNP -LRB-_-LRB- ####_CD -RRB-_-RRB- ,_, pp_NN ._.
205-214_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- ARCHER_NNP ,_, A_NNP ._.
,_, AND_CC TARDOS_NNS ,_, E_NN ._.
Truthful_JJ mechanisms_NNS for_IN one-parameter_JJ agents_NNS ._.
In_IN Proceedings_NNP of_IN the_DT 42nd_NNP IEEE_NNP FOCS_NN -LRB-_-LRB- ####_CD -RRB-_-RRB- ,_, IEEE_NNP Computer_NNP Society_NNP ,_, p_NN ._.
###_NN ._.
-LSB-_-LRB- #_# -RSB-_-RRB- AULETTA_NNP ,_, V_NNP ._.
,_, PRISCO_NNP ,_, R_NN ._.
D_NN ._.
,_, PENNA_NNP ,_, P_NN ._.
,_, AND_CC PERSIANO_NN ,_, P_NN ._.
Deterministic_JJ truthful_JJ approximation_NN schemes_NNS for_IN scheduling_NN related_JJ machines_NNS ._.
-LSB-_-LRB- #_# -RSB-_-RRB- CHVATAL_NNP ,_, V_NNP ._.
A_DT greedy_JJ heuristic_NN for_IN the_DT set_NN covering_VBG problem_NN ._.
Mathematics_NN of_IN Operations_NNP Research_NNP #_# ,_, #_# -LRB-_-LRB- ####_CD -RRB-_-RRB- ,_, 233-235_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- CLARKE_NNP ,_, E_NNP ._.
H_NN ._.
Multipart_JJ pricing_NN of_IN public_JJ goods_NNS ._.
Public_NNP Choice_NNP -LRB-_-LRB- ####_CD -RRB-_-RRB- ,_, 17-33_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- R_NN ._.
Muller_NNP ,_, and_CC R_NN ._.
V_NN ._.
Vohra_NNP ._.
On_IN Dominant_JJ Strategy_NNP Mechanisms_NNS ._.
Working_VBG paper_NN ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- DEVANUR_NN ,_, N_NN ._.
R_NN ._.
,_, MIHAIL_NNP ,_, M_NN ._.
,_, AND_CC VAZIRANI_NNP ,_, V_NNP ._.
V_NN ._.
Strategyproof_JJ cost-sharing_JJ mechanisms_NNS for_IN set_VBN cover_NN and_CC facility_NN location_NN games_NNS ._.
In_IN ACM_NNP Electronic_NNP Commerce_NNP -LRB-_-LRB- EC03_NN -RRB-_-RRB- -LRB-_-LRB- ####_CD -RRB-_-RRB- ._.
-LSB-_-LRB- #_# -RSB-_-RRB- FEIGENBAUM_NNP ,_, J_NNP ._.
,_, KRISHNAMURTHY_NNP ,_, A_NNP ._.
,_, SAMI_NNP ,_, R_NN ._.
,_, AND_CC SHENKER_NN ,_, S_NN ._.
Approximation_NN and_CC collusion_NN in_IN multicast_JJ cost_NN sharing_NN -LRB-_-LRB- abstract_JJ -RRB-_-RRB- ._.
In_IN ACM_NNP Economic_NNP Conference_NNP -LRB-_-LRB- ####_CD -RRB-_-RRB- ._.
-LSB-_-LRB- #_# -RSB-_-RRB- FEIGENBAUM_NNP ,_, J_NNP ._.
,_, PAPADIMITRIOU_NNP ,_, C_NNP ._.
,_, SAMI_NNP ,_, R_NN ._.
,_, AND_CC SHENKER_NN ,_, S_NN ._.
A_DT BGP-based_JJ mechanism_NN for_IN lowest-cost_JJ routing_VBG ._.
In_IN Proceedings_NNP of_IN the_DT ####_CD ACM_NNP Symposium_NNP on_IN Principles_NNS of_IN Distributed_VBN Computing_NNP ._.
-LRB-_-LRB- ####_CD -RRB-_-RRB- ,_, pp_NN ._.
173-182_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- GREEN_NNP ,_, J_NNP ._.
,_, AND_CC LAFFONT_NNP ,_, J_NNP ._.
J_NN ._.
Characterization_NN of_IN satisfactory_JJ mechanisms_NNS for_IN the_DT revelation_NN of_IN preferences_NNS for_IN public_JJ goods_NNS ._.
Econometrica_NNP -LRB-_-LRB- ####_CD -RRB-_-RRB- ,_, 427-438_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- GROVES_NNS ,_, T_NN ._.
Incentives_NNS in_IN teams_NNS ._.
Econometrica_NNP -LRB-_-LRB- ####_CD -RRB-_-RRB- ,_, 617-631_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- LEHMANN_NNP ,_, D_NNP ._.
,_, OCALLAGHAN_NNP ,_, L_NNP ._.
I_PRP ._.
,_, AND_CC SHOHAM_NNP ,_, Y_NN ._.
Truth_NN revelation_NN in_IN approximately_RB efficient_JJ combinatorial_JJ auctions_NNS ._.
Journal_NNP of_IN ACM_NNP ##_CD ,_, #_# -LRB-_-LRB- ####_CD -RRB-_-RRB- ,_, 577-602_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- MU_NN ''_'' ALEM_NNP ,_, A_NNP ._.
,_, AND_CC NISAN_NNP ,_, N_NNP ._.
Truthful_JJ approximation_NN mechanisms_NNS for_IN restricted_JJ combinatorial_JJ auctions_NNS :_: extended_VBN abstract_JJ ._.
In_IN 18th_JJ National_NNP Conference_NNP on_IN Artificial_NNP intelligence_NN -LRB-_-LRB- ####_CD -RRB-_-RRB- ,_, American_NNP Association_NNP for_IN Artificial_NNP Intelligence_NNP ,_, pp_NN ._.
379-384_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- NISAN_NNP ,_, N_NNP ._.
,_, AND_CC RONEN_NNP ,_, A_NNP ._.
Algorithmic_JJ mechanism_NN design_NN ._.
In_IN Proc_NNP ._.
31st_JJ Annual_JJ ACM_NNP STOC_NN -LRB-_-LRB- ####_CD -RRB-_-RRB- ,_, pp_NN ._.
129-140_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- E_NN ._.
Halperin_NNP ._.
Improved_VBN approximation_NN algorithms_NNS for_IN the_DT vertex_NN cover_NN problem_NN in_IN graphs_NNS and_CC hypergraphs_NNS ._.
In_IN Proceedings_NNP of_IN the_DT 11th_JJ Annual_JJ ACM-SIAM_NN Symposium_NN on_IN Discrete_NNP Algorithms_NNP ,_, pages_NNS 329-337_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- R_NN ._.
Bar-Yehuda_NNP and_CC S_NN ._.
Even_RB ._.
A_DT local_JJ ratio_NN theorem_NN for_IN approximating_VBG the_DT weighted_JJ vertex_NN cover_NN problem_NN ._.
Annals_NNS of_IN Discrete_NNP Mathematics_NNP ,_, Volume_NN ##_NN :_: Analysis_NN and_CC Design_NN of_IN Algorithms_NNS for_IN Combinatorial_JJ Problems_NNS ,_, pages_NNS 27-46_CD ,_, ####_CD ._.
Editor_NNP :_: G_NN ._.
Ausiello_NNP and_CC M_NN ._.
Lucertini_NNP -LSB-_-LRB- ##_CD -RSB-_-RRB- ROBINS_NNP ,_, G_NNP ._.
,_, AND_CC ZELIKOVSKY_NN ,_, A_DT ._.
Improved_VBN steiner_NN tree_NN approximation_NN in_IN graphs_NNS ._.
In_IN Proceedings_NNP of_IN the_DT 11th_JJ annual_JJ ACM-SIAM_NN SODA_NN -LRB-_-LRB- ####_CD -RRB-_-RRB- ,_, pp_NN ._.
770-779_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- A_DT ._.
Zelikovsky_NNP ._.
An_DT ##_NN /_: 6-approximation_JJ algorithm_NN for_IN the_DT network_NN Steiner_NNP problem_NN ._.
Algorithmica_NNP ,_, #_# -LRB-_-LRB- #_# -RRB-_-RRB- :_: 463-470_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- D_NN ._.
S_NN ._.
Hochbaum_NNP ._.
Efficient_JJ bounds_NNS for_IN the_DT stable_JJ set_NN ,_, vertex_NN cover_NN ,_, and_CC set_VBN packing_NN problems_NNS ,_, Discrete_NNP Applied_NNP Mathematics_NNP ,_, #_# :_: 243-254_CD ,_, 1983_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- TAKAHASHI_NN ,_, H_NN ._.
,_, AND_CC MATSUYAMA_NN ,_, A_DT ._.
An_DT approximate_JJ solution_NN for_IN the_DT steiner_NN problem_NN in_IN graphs_NNS ._.
Math_NNP ._.
Japonica_NNP ##_NN -LRB-_-LRB- ####_CD -RRB-_-RRB- ,_, 573-577_CD ._.
-LSB-_-LRB- ##_CD -RSB-_-RRB- VICKREY_NNP ,_, W_NNP ._.
Counterspeculation_NNP ,_, auctions_NNS and_CC competitive_JJ sealed_JJ tenders_NNS ._.
Journal_NNP of_IN Finance_NNP -LRB-_-LRB- ####_CD -RRB-_-RRB- ,_, 8-37_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- WANG_NNP ,_, W_NNP ._.
,_, AND_CC LI_NN ,_, X_NN ._.
-_: Y_NN ._.
Truthful_JJ low-cost_JJ unicast_NN in_IN selfish_JJ wireless_JJ networks_NNS ._.
In_IN 4th_JJ IEEE_NNP Transactions_NNS on_IN Mobile_NNP Computing_NNP -LRB-_-LRB- ####_CD -RRB-_-RRB- ,_, to_TO appear_VB ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- WANG_NNP ,_, W_NNP ._.
,_, LI_NNP ,_, X_NN ._.
-_: Y_NN ._.
,_, AND_CC SUN_NN ,_, Z_NN ._.
Design_NN multicast_JJ protocols_NNS for_IN non-cooperative_JJ networks_NNS ._.
IEEE_NNP INFOCOM_NNP ####_CD ,_, to_TO appear_VB ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- WANG_NNP ,_, W_NNP ._.
,_, LI_NNP ,_, X_NN ._.
-_: Y_NN ._.
,_, AND_CC WANG_NNP ,_, Y_NN ._.
Truthful_JJ multicast_NN in_IN selfish_JJ wireless_JJ networks_NNS ._.
ACM_NNP MobiCom_NNP ,_, ####_CD ._.
222_CD
