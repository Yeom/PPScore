Bidding_NN Algorithms_NNS for_IN a_DT Distributed_VBN Combinatorial_JJ Auction_NNP Benito_NNP Mendoza_NNP and_CC Jose_NNP M_NN ._.
Vidal_NNP Computer_NNP Science_NNP and_CC Engineering_NNP University_NNP of_IN South_NNP Carolina_NNP Columbia_NNP ,_, SC_NNP #####_CD mendoza2_NN @_IN engr_NN ._.
sc_NN ._.
edu_NN ,_, vidal_JJ @_IN sc_NN ._.
edu_NN ABSTRACT_NN Distributed_VBN allocation_NN and_CC multiagent_JJ coordination_NN problems_NNS can_MD be_VB solved_VBN through_IN combinatorial_JJ auctions_NNS ._.
However_RB ,_, most_JJS of_IN the_DT existing_VBG winner_NN determination_NN algorithms_NNS for_IN combinatorial_JJ auctions_NNS are_VBP centralized_VBN ._.
The_DT PAUSE_NN auction_NN is_VBZ one_CD of_IN a_DT few_JJ efforts_NNS to_TO release_VB the_DT auctioneer_NN from_IN having_VBG to_TO do_VB all_PDT the_DT work_NN -LRB-_-LRB- it_PRP might_MD even_RB be_VB possible_JJ to_TO get_VB rid_JJ of_IN the_DT auctioneer_NN -RRB-_-RRB- ._.
It_PRP is_VBZ an_DT increasing_VBG price_NN combinatorial_JJ auction_NN that_WDT naturally_RB distributes_VBZ the_DT problem_NN of_IN winner_NN determination_NN amongst_IN the_DT bidders_NNS in_IN such_JJ a_DT way_NN that_IN they_PRP have_VBP an_DT incentive_NN to_TO perform_VB the_DT calculation_NN ._.
It_PRP can_MD be_VB used_VBN when_WRB we_PRP wish_VBP to_TO distribute_VB the_DT computational_JJ load_NN among_IN the_DT bidders_NNS or_CC when_WRB the_DT bidders_NNS do_VBP not_RB wish_VB to_TO reveal_VB their_PRP$ true_JJ valuations_NNS unless_IN necessary_JJ ._.
PAUSE_NN establishes_VBZ the_DT rules_NNS the_DT bidders_NNS must_MD obey_VB ._.
However_RB ,_, it_PRP does_VBZ not_RB tell_VB us_PRP how_WRB the_DT bidders_NNS should_MD calculate_VB their_PRP$ bids_NNS ._.
We_PRP have_VBP developed_VBN a_DT couple_NN of_IN bidding_NN algorithms_NNS for_IN the_DT bidders_NNS in_IN a_DT PAUSE_NN auction_NN ._.
Our_PRP$ algorithms_NNS always_RB return_VBP the_DT set_NN of_IN bids_NNS that_WDT maximizes_VBZ the_DT bidder_NN ''_'' s_NNS utility_NN ._.
Since_IN the_DT problem_NN is_VBZ NP-Hard_JJ ,_, run_VB time_NN remains_VBZ exponential_JJ on_IN the_DT number_NN of_IN items_NNS ,_, but_CC it_PRP is_VBZ remarkably_RB better_JJR than_IN an_DT exhaustive_JJ search_NN ._.
In_IN this_DT paper_NN we_PRP present_VBP our_PRP$ bidding_NN algorithms_NNS ,_, discuss_VBP their_PRP$ virtues_NNS and_CC drawbacks_NNS ,_, and_CC compare_VB the_DT solutions_NNS obtained_VBN by_IN them_PRP to_TO the_DT revenue-maximizing_JJ solution_NN found_VBN by_IN a_DT centralized_JJ winner_NN determination_NN algorithm_NN ._.
Categories_NNS and_CC Subject_NNP Descriptors_NNS I_PRP ._.
#_# ._.
##_NN -LSB-_-LRB- Computing_NNP Methodologies_NNPS -RSB-_-RRB- :_: Distributed_VBN Artificial_NNP Intelligence-Intelligent_NNP Agents_NNPS ,_, Multiagent_NNP Systems_NNPS ._.
General_NNP Terms_NNS Algorithms_NNS ,_, Performance_NNP ._.
1_LS ._.
INTRODUCTION_NN Both_CC the_DT research_NN and_CC practice_NN of_IN combinatorial_JJ auctions_NNS have_VBP grown_VBN rapidly_RB in_IN the_DT past_JJ ten_CD years_NNS ._.
In_IN a_DT combinatorial_JJ auction_NN bidders_NNS can_MD place_VB bids_NNS on_IN combinations_NNS of_IN items_NNS ,_, called_VBN packages_NNS or_CC bidsets_NNS ,_, rather_RB than_IN just_RB individual_JJ items_NNS ._.
Once_RB the_DT bidders_NNS place_VBP their_PRP$ bids_NNS ,_, it_PRP is_VBZ necessary_JJ to_TO find_VB the_DT allocation_NN of_IN items_NNS to_TO bidders_NNS that_WDT maximizes_VBZ the_DT auctioneer_NN ''_'' s_NNS revenue_NN ._.
This_DT problem_NN ,_, known_VBN as_IN the_DT winner_NN determination_NN problem_NN ,_, is_VBZ a_DT combinatorial_JJ optimization_NN problem_NN and_CC is_VBZ NP-Hard_JJ -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
Nevertheless_RB ,_, several_JJ algorithms_NNS that_WDT have_VBP a_DT satisfactory_JJ performance_NN for_IN problem_NN sizes_NNS and_CC structures_NNS occurring_VBG in_IN practice_NN have_VBP been_VBN developed_VBN ._.
The_DT practical_JJ applications_NNS of_IN combinatorial_JJ auctions_NNS include_VBP :_: allocation_NN of_IN airport_NN takeoff_NN and_CC landing_NN time_NN slots_NNS ,_, procurement_NN of_IN freight_NN transportation_NN services_NNS ,_, procurement_NN of_IN public_JJ transport_NN services_NNS ,_, and_CC industrial_JJ procurement_NN -LSB-_-LRB- #_# -RSB-_-RRB- ._.
Because_IN of_IN their_PRP$ wide_JJ applicability_NN ,_, one_PRP can_MD not_RB hope_VB for_IN a_DT general-purpose_JJ winner_NN determination_NN algorithm_NN that_WDT can_MD efficiently_RB solve_VB every_DT instance_NN of_IN the_DT problem_NN ._.
Thus_RB ,_, several_JJ approaches_NNS and_CC algorithms_NNS have_VBP been_VBN proposed_VBN to_TO address_VB the_DT winner_NN determination_NN problem_NN ._.
However_RB ,_, most_JJS of_IN the_DT existing_VBG winner_NN determination_NN algorithms_NNS for_IN combinatorial_JJ auctions_NNS are_VBP centralized_VBN ,_, meaning_VBG that_IN they_PRP require_VBP all_DT agents_NNS to_TO send_VB their_PRP$ bids_NNS to_TO a_DT centralized_JJ auctioneer_NN who_WP then_RB determines_VBZ the_DT winners_NNS ._.
Examples_NNS of_IN these_DT algorithms_NNS are_VBP CASS_NNP -LSB-_-LRB- #_# -RSB-_-RRB- ,_, Bidtree_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- and_CC CABOB_NN -LSB-_-LRB- ##_CD -RSB-_-RRB- ._.
We_PRP believe_VBP that_IN distributed_VBN solutions_NNS to_TO the_DT winner_NN determination_NN problem_NN should_MD be_VB studied_VBN as_IN they_PRP offer_VBP a_DT better_JJR fit_NN for_IN some_DT applications_NNS as_IN when_WRB ,_, for_IN example_NN ,_, agents_NNS do_VBP not_RB want_VB to_TO reveal_VB their_PRP$ valuations_NNS to_TO the_DT auctioneer_NN ._.
The_DT PAUSE_NN -LRB-_-LRB- Progressive_JJ Adaptive_JJ User_NN Selection_NN Environment_NN -RRB-_-RRB- auction_NN -LSB-_-LRB- #_# ,_, #_# -RSB-_-RRB- is_VBZ one_CD of_IN a_DT few_JJ efforts_NNS to_TO distribute_VB the_DT problem_NN of_IN winner_NN determination_NN amongst_IN the_DT bidders_NNS ._.
PAUSE_NN establishes_VBZ the_DT rules_NNS the_DT participants_NNS have_VBP to_TO adhere_VB to_TO so_RB that_IN the_DT work_NN is_VBZ distributed_VBN amongst_IN them_PRP ._.
However_RB ,_, it_PRP is_VBZ not_RB concerned_VBN with_IN how_WRB the_DT bidders_NNS determine_VBP what_WP they_PRP should_MD bid_VB ._.
In_IN this_DT paper_NN we_PRP present_VBP two_CD algorithms_NNS ,_, pausebid_NN and_CC cachedpausebid_NN ,_, which_WDT enable_VBP agents_NNS in_IN a_DT PAUSE_NN auction_NN to_TO find_VB the_DT bidset_NN that_WDT maximizes_VBZ their_PRP$ utility_NN ._.
Our_PRP$ algorithms_NNS implement_VBP a_DT myopic_JJ utility_NN maximizing_VBG strategy_NN and_CC are_VBP guaranteed_VBN to_TO find_VB the_DT bidset_NN that_WDT maximizes_VBZ the_DT agent_NN ''_'' s_NNS utility_NN given_VBN the_DT outstanding_JJ best_JJS bids_NNS at_IN a_DT given_VBN time_NN ._.
pausebid_NN performs_VBZ a_DT branch_NN and_CC bound_VBD search_NN completely_RB from_IN scratch_NN every_DT time_NN that_IN it_PRP is_VBZ called_VBN ._.
cachedpausebid_NN is_VBZ a_DT caching-based_JJ algorithm_NN which_WDT explores_VBZ fewer_JJR nodes_NNS ,_, since_IN it_PRP caches_VBZ some_DT solutions_NNS ._.
694_CD 978-81-904262-7-5_CD -LRB-_-LRB- RPS_NN -RRB-_-RRB- c_NN ####_CD IFAAMAS_NN 2_CD ._.
THE_DT PAUSE_NN AUCTION_NN A_NN PAUSE_NN auction_NN for_IN m_NN items_NNS has_VBZ m_NN stages_NNS ._.
Stage_NN #_# consists_VBZ of_IN having_VBG simultaneous_JJ ascending_VBG price_NN open-cry_JJ auctions_NNS and_CC during_IN this_DT stage_NN the_DT bidders_NNS can_MD only_RB place_VB bids_NNS on_IN individual_JJ items_NNS ._.
At_IN the_DT end_NN of_IN this_DT state_NN we_PRP will_MD know_VB what_WP the_DT highest_JJS bid_NN for_IN each_DT individual_JJ item_NN is_VBZ and_CC who_WP placed_VBD that_IN bid_NN ._.
Each_DT successive_JJ stage_NN k_NN =_JJ #_# ,_, #_# ,_, ..._: ,_, m_NN consists_VBZ of_IN an_DT ascending_VBG price_NN auction_NN where_WRB the_DT bidders_NNS must_MD submit_VB bidsets_NNS that_WDT cover_VBP all_DT items_NNS but_CC each_DT one_CD of_IN the_DT bids_NNS must_MD be_VB for_IN k_NN items_NNS or_CC less_JJR ._.
The_DT bidders_NNS are_VBP allowed_VBN to_TO use_VB bids_NNS that_IN other_JJ agents_NNS have_VB placed_VBN in_IN previous_JJ rounds_NNS when_WRB building_VBG their_PRP$ bidsets_NNS ,_, thus_RB allowing_VBG them_PRP to_TO find_VB better_JJR solutions_NNS ._.
Also_RB ,_, any_DT new_JJ bidset_NN has_VBZ to_TO have_VB a_DT sum_NN of_IN bid_NN prices_NNS which_WDT is_VBZ bigger_JJR than_IN that_DT of_IN the_DT currently_RB winning_VBG bidset_NN ._.
At_IN the_DT end_NN of_IN each_DT stage_NN k_NN all_DT agents_NNS know_VBP the_DT best_JJS bid_NN for_IN every_DT subset_NN of_IN size_NN k_NN or_CC less_JJR ._.
Also_RB ,_, at_IN any_DT point_NN in_IN time_NN after_IN stage_NN 1_CD has_VBZ ended_VBN there_EX is_VBZ a_DT standing_NN bidset_NN whose_WP$ value_NN increases_VBZ monotonically_RB as_IN new_JJ bidsets_NNS are_VBP submitted_VBN ._.
Since_IN in_IN the_DT final_JJ round_NN all_DT agents_NNS consider_VBP all_DT possible_JJ bidsets_NNS ,_, we_PRP know_VBP that_IN the_DT final_JJ winning_VBG bidset_NN will_MD be_VB one_CD such_JJ that_IN no_DT agent_NN can_MD propose_VB a_DT better_JJR bidset_NN ._.
Note_VB ,_, however_RB ,_, that_IN this_DT bidset_NN is_VBZ not_RB guaranteed_VBN to_TO be_VB the_DT one_CD that_WDT maximizes_VBZ revenue_NN since_IN we_PRP are_VBP using_VBG an_DT ascending_VBG price_NN auction_NN so_IN the_DT winning_VBG bid_NN for_IN each_DT set_NN will_MD be_VB only_RB slightly_RB bigger_JJR than_IN the_DT second_JJ highest_JJS bid_NN for_IN the_DT particular_JJ set_NN of_IN items_NNS ._.
That_DT is_VBZ ,_, the_DT final_JJ prices_NNS will_MD not_RB be_VB the_DT same_JJ as_IN the_DT prices_NNS in_IN a_DT traditional_JJ combinatorial_JJ auction_NN where_WRB all_PDT the_DT bidders_NNS bid_VBD their_PRP$ true_JJ valuation_NN ._.
However_RB ,_, there_EX remains_VBZ the_DT open_JJ question_NN of_IN whether_IN the_DT final_JJ distribution_NN of_IN items_NNS to_TO bidders_NNS found_VBN in_IN a_DT PAUSE_NN auction_NN is_VBZ the_DT same_JJ as_IN the_DT revenue_NN maximizing_VBG solution_NN ._.
Our_PRP$ test_NN results_VBZ provide_VB an_DT answer_NN to_TO this_DT question_NN ._.
The_DT PAUSE_NN auction_NN makes_VBZ the_DT job_NN of_IN the_DT auctioneer_NN very_RB easy_JJ ._.
All_DT it_PRP has_VBZ to_TO do_VB is_VBZ to_TO make_VB sure_JJ that_IN each_DT new_JJ bidset_NN has_VBZ a_DT revenue_NN bigger_JJR than_IN the_DT current_JJ winning_VBG bidset_NN ,_, as_RB well_RB as_IN make_VB sure_JJ that_IN every_DT bid_NN in_IN an_DT agent_NN ''_'' s_NNS bidset_VBP that_DT is_VBZ not_RB his_PRP$ does_VBZ indeed_RB correspond_VBP to_TO some_DT other_JJ agents_NNS ''_'' previous_JJ bid_NN ._.
The_DT computational_JJ problem_NN shifts_NNS from_IN one_CD of_IN winner_NN determination_NN to_TO one_CD of_IN bid_NN generation_NN ._.
Each_DT agent_NN must_MD search_VB over_IN the_DT space_NN of_IN all_DT bidsets_NNS which_WDT contain_VBP at_IN least_JJS one_CD of_IN its_PRP$ bids_NNS ._.
The_DT search_NN is_VBZ made_VBN easier_JJR by_IN the_DT fact_NN that_IN the_DT agent_NN needs_VBZ to_TO consider_VB only_RB the_DT current_JJ best_JJS bids_NNS and_CC only_RB wants_VBZ bidsets_NNS where_WRB its_PRP$ own_JJ utility_NN is_VBZ higher_JJR than_IN in_IN the_DT current_JJ winning_VBG bidset_NN ._.
Each_DT agent_NN also_RB has_VBZ a_DT clear_JJ incentive_NN for_IN performing_VBG this_DT computation_NN ,_, namely_RB ,_, its_PRP$ utility_NN only_RB increases_VBZ with_IN each_DT bidset_NN it_PRP proposes_VBZ -LRB-_-LRB- of_IN course_NN ,_, it_PRP might_MD decrease_VB with_IN the_DT bidsets_NNS that_WDT others_NNS propose_VBP -RRB-_-RRB- ._.
Finally_RB ,_, the_DT PAUSE_NN auction_NN has_VBZ been_VBN shown_VBN to_TO be_VB envy-free_JJ in_IN that_DT at_IN the_DT conclusion_NN of_IN the_DT auction_NN no_DT bidder_NN would_MD prefer_VB to_TO exchange_VB his_PRP$ allocation_NN with_IN that_DT of_IN any_DT other_JJ bidder_NN -LSB-_-LRB- #_# -RSB-_-RRB- ._.
We_PRP can_MD even_RB envision_VB completely_RB eliminating_VBG the_DT auctioneer_NN and_CC ,_, instead_RB ,_, have_VBP every_DT agent_NN perform_VB the_DT task_NN of_IN the_DT auctioneer_NN ._.
That_DT is_VBZ ,_, all_DT bids_NNS are_VBP broadcast_VBN and_CC when_WRB an_DT agent_NN receives_VBZ a_DT bid_NN from_IN another_DT agent_NN it_PRP updates_NNS the_DT set_NN of_IN best_JJS bids_NNS and_CC determines_VBZ if_IN the_DT new_JJ bid_NN is_VBZ indeed_RB better_JJR than_IN the_DT current_JJ winning_VBG bid_NN ._.
The_DT agents_NNS would_MD have_VB an_DT incentive_NN to_TO perform_VB their_PRP$ computation_NN as_IN it_PRP will_MD increase_VB their_PRP$ expected_VBN utility_NN ._.
Also_RB ,_, any_DT lies_VBZ about_IN other_JJ agents_NNS ''_'' bids_NNS are_VBP easily_RB found_VBN out_RP by_IN keeping_VBG track_NN of_IN the_DT bids_NNS sent_VBN out_RP by_IN every_DT agent_NN -LRB-_-LRB- the_DT set_NN of_IN best_JJS bids_NNS -RRB-_-RRB- ._.
Namely_RB ,_, the_DT only_RB one_CD that_WDT can_MD increase_VB an_DT agent_NN ''_'' s_VBZ bid_NN value_NN is_VBZ the_DT agent_NN itself_PRP ._.
Anyone_NN claiming_VBG a_DT higher_JJR value_NN for_IN some_DT other_JJ agent_NN is_VBZ lying_VBG ._.
The_DT only_JJ thing_NN missing_VBG is_VBZ an_DT algorithm_NN that_WDT calculates_VBZ the_DT utility-maximizing_JJ bidset_NN for_IN each_DT agent_NN ._.
3_LS ._.
PROBLEM_NN FORMULATION_NN A_NN bid_NN b_NN is_VBZ composed_VBN of_IN three_CD elements_NNS bitems_NNS -LRB-_-LRB- the_DT set_NN of_IN items_NNS the_DT bid_NN is_VBZ over_IN -RRB-_-RRB- ,_, bagent_NN -LRB-_-LRB- the_DT agent_NN that_WDT placed_VBD the_DT bid_NN -RRB-_-RRB- ,_, and_CC bvalue_NN -LRB-_-LRB- the_DT value_NN or_CC price_NN of_IN the_DT bid_NN -RRB-_-RRB- ._.
The_DT agents_NNS maintain_VBP a_DT set_NN B_NN of_IN the_DT current_JJ best_JJS bids_NNS ,_, one_CD for_IN each_DT set_NN of_IN items_NNS of_IN size_NN k_NN ,_, where_WRB k_NN is_VBZ the_DT current_JJ stage_NN ._.
At_IN any_DT point_NN in_IN the_DT auction_NN ,_, after_IN the_DT first_JJ round_NN ,_, there_EX will_MD also_RB be_VB a_DT set_NN W_NN B_NN of_IN currently_RB winning_VBG bids_NNS ._.
This_DT is_VBZ the_DT set_NN of_IN bids_NNS that_WDT covers_VBZ all_PDT the_DT items_NNS and_CC currently_RB maximizes_VBZ the_DT revenue_NN ,_, where_WRB the_DT revenue_NN of_IN W_NN is_VBZ given_VBN by_IN r_NN -LRB-_-LRB- W_NN -RRB-_-RRB- =_JJ bW_NN bvalue_NN ._.
-LRB-_-LRB- #_# -RRB-_-RRB- Agent_NNP i_FW ''_'' s_VBZ value_NN function_NN is_VBZ given_VBN by_IN vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- where_WRB S_NN is_VBZ a_DT set_NN of_IN items_NNS ._.
Given_VBN an_DT agent_NN ''_'' s_NNS value_NN function_NN and_CC the_DT current_JJ winning_VBG bidset_NN W_NN we_PRP can_MD calculate_VB the_DT agent_NN ''_'' s_NNS utility_NN from_IN W_NN as_IN ui_NN -LRB-_-LRB- W_NN -RRB-_-RRB- =_JJ bW_NN |_NN bagent_NN =_JJ i_FW vi_LS -LRB-_-LRB- bitems_NNS -RRB-_-RRB- bvalue_NN ._.
-LRB-_-LRB- #_# -RRB-_-RRB- That_DT is_VBZ ,_, the_DT agent_NN ''_'' s_NNS utility_NN for_IN a_DT bidset_NN W_NN is_VBZ the_DT value_NN it_PRP receives_VBZ for_IN the_DT items_NNS it_PRP wins_VBZ in_IN W_NNP minus_CC the_DT price_NN it_PRP must_MD pay_VB for_IN those_DT items_NNS ._.
If_IN the_DT agent_NN is_VBZ not_RB winning_VBG any_DT items_NNS then_RB its_PRP$ utility_NN is_VBZ zero_CD ._.
The_DT goal_NN of_IN the_DT bidding_NN agents_NNS in_IN the_DT PAUSE_NN auction_NN is_VBZ to_TO maximize_VB their_PRP$ utility_NN ,_, subject_JJ to_TO the_DT constraint_NN that_IN their_PRP$ next_JJ set_NN of_IN bids_NNS must_MD have_VB a_DT total_JJ revenue_NN that_WDT is_VBZ at_IN least_JJS bigger_JJR than_IN the_DT current_JJ revenue_NN ,_, where_WRB is_VBZ the_DT smallest_JJS increment_NN allowed_VBN in_IN the_DT auction_NN ._.
Formally_RB ,_, given_VBN that_IN W_NN is_VBZ the_DT current_JJ winning_VBG bidset_NN ,_, agent_NN i_FW must_MD find_VB a_DT g_NN i_FW such_JJ that_IN r_NN -LRB-_-LRB- g_NN i_LS -RRB-_-RRB- r_NN -LRB-_-LRB- W_NN -RRB-_-RRB- +_CC and_CC g_NN i_FW =_JJ arg_NN max_NN g2B_NN ui_NN -LRB-_-LRB- g_NN -RRB-_-RRB- ,_, -LRB-_-LRB- #_# -RRB-_-RRB- where_WRB each_DT g_NN is_VBZ a_DT set_NN of_IN bids_NNS that_WDT covers_VBZ all_DT items_NNS and_CC bg_NN -LRB-_-LRB- b_NN B_NN -RRB-_-RRB- or_CC -LRB-_-LRB- bagent_NN =_JJ i_FW and_CC bvalue_FW >_JJR B_NN -LRB-_-LRB- bitems_NNS -RRB-_-RRB- and_CC size_NN -LRB-_-LRB- bitems_NNS -RRB-_-RRB- k_NN -RRB-_-RRB- ,_, and_CC where_WRB B_NN -LRB-_-LRB- items_NNS -RRB-_-RRB- is_VBZ the_DT value_NN of_IN the_DT bid_NN in_IN B_NN for_IN the_DT set_NN items_NNS -LRB-_-LRB- if_IN there_EX is_VBZ no_DT bid_NN for_IN those_DT items_NNS it_PRP returns_VBZ zero_CD -RRB-_-RRB- ._.
That_DT is_VBZ ,_, each_DT bid_NN b_NN in_IN g_NN must_MD satisfy_VB at_IN least_JJS one_CD of_IN the_DT two_CD following_JJ conditions_NNS ._.
#_# -RRB-_-RRB- b_NN is_VBZ already_RB in_IN B_NN ,_, #_# -RRB-_-RRB- b_NN is_VBZ a_DT bid_NN of_IN size_NN k_NN in_IN which_WDT the_DT agent_NN i_FW bids_NNS higher_JJR than_IN the_DT price_NN for_IN the_DT same_JJ items_NNS in_IN B_NN ._.
4_LS ._.
BIDDING_NN ALGORITHMS_NNS According_VBG to_TO the_DT PAUSE_NN auction_NN ,_, during_IN the_DT first_JJ stage_NN we_PRP have_VBP only_RB several_JJ English_JJ auctions_NNS ,_, with_IN the_DT bidders_NNS submitting_VBG bids_NNS on_IN individual_JJ items_NNS ._.
In_IN this_DT case_NN ,_, an_DT agent_NN ''_'' s_NNS dominant_JJ strategy_NN is_VBZ to_TO bid_VB higher_JJR than_IN the_DT current_JJ winning_VBG bid_NN until_IN it_PRP reaches_VBZ its_PRP$ valuation_NN for_IN that_DT particular_JJ item_NN ._.
Our_PRP$ algorithms_NNS focus_VBP on_IN the_DT subsequent_JJ stages_NNS :_: k_NN >_JJR #_# ._.
When_WRB k_NN >_JJR #_# ,_, agents_NNS have_VBP to_TO find_VB g_NN i_FW ._.
This_DT can_MD be_VB done_VBN by_IN performing_VBG a_DT complete_JJ search_NN on_IN B_NN ._.
However_RB ,_, this_DT approach_NN is_VBZ computationally_RB expensive_JJ since_IN it_PRP produces_VBZ a_DT large_JJ search_NN tree_NN ._.
Our_PRP$ algorithms_NNS represent_VBP alternative_JJ approaches_NNS to_TO overcome_VB this_DT expensive_JJ search_NN ._.
4_LS ._.
#_# The_DT PAUSEBID_NNP Algorithm_NNP In_IN the_DT pausebid_NN algorithm_NN -LRB-_-LRB- shown_VBN in_IN Figure_NNP #_# -RRB-_-RRB- we_PRP implement_VBP some_DT heuristics_NNS to_TO prune_VB the_DT search_NN tree_NN ._.
Given_VBN that_IN bidders_NNS want_VBP to_TO maximize_VB their_PRP$ utility_NN and_CC that_IN at_IN any_DT given_VBN point_NN there_EX are_VBP likely_RB only_RB a_DT few_JJ bids_NNS within_IN B_NN which_WDT The_DT Sixth_NNP Intl_NNP ._.
Joint_NNP Conf_NNP ._.
on_IN Autonomous_NNP Agents_NNPS and_CC Multi-Agent_NNP Systems_NNP -LRB-_-LRB- AAMAS_NNP ##_CD -RRB-_-RRB- ###_CD pausebid_NN -LRB-_-LRB- i_FW ,_, k_NN -RRB-_-RRB- 1_CD my-bids_NNS 2_CD their-bids_NNS 3_CD for_IN b_NN B_NN 4_CD do_VBP if_IN bagent_NN =_JJ i_FW or_CC vi_LS -LRB-_-LRB- bitems_NNS -RRB-_-RRB- >_JJR bvalue_NN 5_CD then_RB my-bids_JJ my-bids_NNS +_CC new_JJ Bid_NN -LRB-_-LRB- bitems_NNS ,_, i_FW ,_, vi_LS -LRB-_-LRB- bitems_NNS -RRB-_-RRB- -RRB-_-RRB- 6_CD else_RB their-bids_JJ their-bids_NNS +_CC b_NN 7_CD for_IN S_NN subsets_NNS of_IN k_NN or_CC fewer_JJR items_NNS such_JJ that_IN vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- >_JJR #_# and_CC bBbitems_NN =_JJ S_NN 8_CD do_VBP my-bids_JJ my-bids_NNS +_CC new_JJ Bid_NN -LRB-_-LRB- S_NN ,_, i_FW ,_, vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- -RRB-_-RRB- 9_CD bids_NNS my-bids_JJ +_CC their-bids_JJ 10_CD g_NN Global_JJ variable_JJ 11_CD u_NN ui_NN -LRB-_-LRB- W_NN -RRB-_-RRB- Global_JJ variable_JJ 12_CD pbsearch_NN -LRB-_-LRB- bids_NNS ,_, -RRB-_-RRB- 13_CD surplus_NN bg_NN |_NN bagent_NN =_JJ i_FW bvalue_FW B_NN -LRB-_-LRB- bitems_NNS -RRB-_-RRB- 14_CD if_IN surplus_NN =_JJ #_# 15_CD then_RB return_VB g_NN 16_CD my-payment_NN vi_LS -LRB-_-LRB- g_NN -RRB-_-RRB- u_NN 17_CD for_IN b_NN g_NN |_CD bagent_NN =_JJ i_FW 18_CD do_VBP if_IN my-payment_NN #_# 19_CD then_RB bvalue_NN B_NN -LRB-_-LRB- bitems_NNS -RRB-_-RRB- 20_CD else_JJ bvalue_NN B_NN -LRB-_-LRB- bitems_NNS -RRB-_-RRB- +_CC my-payment_JJ bvalue_NN B_NN -LRB-_-LRB- bitems_NNS -RRB-_-RRB- surplus_NN 21_CD return_NN g_NN Figure_NN #_# :_: The_DT pausebid_NN algorithm_NN which_WDT implements_VBZ a_DT branch_NN and_CC bound_VBD search_NN ._.
i_FW is_VBZ the_DT agent_NN and_CC k_NN is_VBZ the_DT current_JJ stage_NN of_IN the_DT auction_NN ,_, for_IN k_NN #_# ._.
the_DT agent_NN can_MD dominate_VB ,_, we_PRP start_VBP by_IN defining_VBG my-bids_NNS to_TO be_VB the_DT list_NN of_IN bids_NNS for_IN which_WDT the_DT agent_NN ''_'' s_NNS valuation_NN is_VBZ higher_JJR than_IN the_DT current_JJ best_JJS bid_NN ,_, as_IN given_VBN in_IN B_NN ._.
We_PRP set_VBD the_DT value_NN of_IN these_DT bids_NNS to_TO be_VB the_DT agent_NN ''_'' s_NNS true_JJ valuation_NN -LRB-_-LRB- but_CC we_PRP won_VBD ''_'' t_NN necessarily_RB be_VB bidding_VBG true_JJ valuation_NN ,_, as_IN we_PRP explain_VBP later_RB -RRB-_-RRB- ._.
Similarly_RB ,_, we_PRP set_VBD their-bids_NNS to_TO be_VB the_DT rest_NN of_IN the_DT bids_NNS from_IN B_NN ._.
Finally_RB ,_, the_DT agent_NN ''_'' s_NNS search_NN list_NN is_VBZ simply_RB the_DT concatenation_NN of_IN my-bids_NNS and_CC their-bids_NNS ._.
Note_VB that_IN the_DT agent_NN ''_'' s_NNS own_JJ bids_NNS are_VBP placed_VBN first_RB on_IN the_DT search_NN list_NN as_IN this_DT will_MD enable_VB us_PRP to_TO do_VB more_JJR pruning_NN -LRB-_-LRB- pausebid_NN lines_NNS #_# to_TO #_# -RRB-_-RRB- ._.
The_DT agent_NN can_MD now_RB perform_VB a_DT branch_NN and_CC bound_VBD search_NN on_IN the_DT branch-on-bids_NNS tree_NN produced_VBN by_IN these_DT bids_NNS ._.
This_DT branch_NN and_CC bound_VBD search_NN is_VBZ implemented_VBN by_IN pbsearch_NN -LRB-_-LRB- Figure_NN #_# -RRB-_-RRB- ._.
Our_PRP$ algorithm_NN not_RB only_RB implements_VBZ the_DT standard_JJ bound_VBN but_CC it_PRP also_RB implements_VBZ other_JJ pruning_NN techniques_NNS in_IN order_NN to_TO further_RBR reduce_VB the_DT size_NN of_IN the_DT search_NN tree_NN ._.
The_DT bound_VBN we_PRP use_VBP is_VBZ the_DT maximum_NN utility_NN that_IN the_DT agent_NN can_MD expect_VB to_TO receive_VB from_IN a_DT given_VBN set_NN of_IN bids_NNS ._.
We_PRP call_VBP it_PRP u_FW ._.
Initially_RB ,_, u_NN is_VBZ set_VBN to_TO ui_NN -LRB-_-LRB- W_NN -RRB-_-RRB- -LRB-_-LRB- pausebid_JJ line_NN ##_NN -RRB-_-RRB- since_IN that_DT is_VBZ the_DT utility_NN the_DT agent_NN currently_RB receives_VBZ and_CC any_DT solution_NN he_PRP proposes_VBZ should_MD give_VB him_PRP more_RBR utility_NN ._.
If_IN pbsearch_JJ ever_RB comes_VBZ across_IN a_DT partial_JJ solution_NN where_WRB the_DT maximum_NN utility_NN the_DT agent_NN can_MD expect_VB to_TO receive_VB is_VBZ less_JJR than_IN u_NN then_RB that_IN subtree_NN is_VBZ pruned_VBN -LRB-_-LRB- pbsearch_JJ line_NN ##_NN -RRB-_-RRB- ._.
Note_VB that_IN we_PRP can_MD determine_VB the_DT maximum_NN utility_NN only_RB after_IN the_DT algorithm_NN has_VBZ searched_VBN over_IN all_DT of_IN the_DT agent_NN ''_'' s_NNS own_JJ bids_NNS -LRB-_-LRB- which_WDT are_VBP first_RB on_IN the_DT list_NN -RRB-_-RRB- because_IN after_IN that_DT we_PRP know_VBP that_IN the_DT solution_NN will_MD not_RB include_VB any_DT more_JJR bids_NNS where_WRB the_DT agent_NN is_VBZ the_DT winner_NN thus_RB the_DT agent_NN ''_'' s_NNS utility_NN will_MD no_RB longer_RB increase_VB ._.
For_IN example_NN ,_, pbsearch_NN -LRB-_-LRB- bids_NNS ,_, g_NN -RRB-_-RRB- 1_CD if_IN bids_NNS =_JJ then_RB return_VB 2_CD b_NN first_JJ -LRB-_-LRB- bids_NNS -RRB-_-RRB- 3_CD bids_NNS bids_NNS b_NN 4_CD g_NN g_NN +_CC b_NN 5_CD Ig_NN items_NNS not_RB in_IN g_NN 6_CD if_IN g_NN does_VBZ not_RB contain_VB a_DT bid_NN from_IN i_FW 7_CD then_RB return_VB 8_CD if_IN g_NN includes_VBZ all_DT items_NNS 9_CD then_RB min-payment_NN max_NN -LRB-_-LRB- #_# ,_, r_NN -LRB-_-LRB- W_NN -RRB-_-RRB- +_CC -LRB-_-LRB- r_NN -LRB-_-LRB- g_NN -RRB-_-RRB- ri_NN -LRB-_-LRB- g_NN -RRB-_-RRB- -RRB-_-RRB- ,_, bg_NN |_NN bagent_NN =_JJ i_FW B_NN -LRB-_-LRB- bitems_NNS -RRB-_-RRB- -RRB-_-RRB- 10_CD max-utility_JJ vi_LS -LRB-_-LRB- g_NN -RRB-_-RRB- min-payment_NN 11_CD if_IN r_NN -LRB-_-LRB- g_NN -RRB-_-RRB- >_JJR r_NN -LRB-_-LRB- W_NN -RRB-_-RRB- and_CC max-utility_NN u_NN 12_CD then_RB g_NN g_NN 13_CD u_NN max-utility_NN 14_CD pbsearch_NN -LRB-_-LRB- bids_NNS ,_, g_NN b_NN -RRB-_-RRB- b_NN is_VBZ Out_IN 15_CD else_RB max-revenue_JJ r_NN -LRB-_-LRB- g_NN -RRB-_-RRB- +_CC max_NN -LRB-_-LRB- h_NN -LRB-_-LRB- Ig_NN -RRB-_-RRB- ,_, hi_UH -LRB-_-LRB- Ig_NN -RRB-_-RRB- -RRB-_-RRB- 16_CD if_IN max-revenue_JJ r_NN -LRB-_-LRB- W_NN -RRB-_-RRB- 17_CD then_RB pbsearch_NN -LRB-_-LRB- bids_NNS ,_, g_NN b_NN -RRB-_-RRB- b_NN is_VBZ Out_IN 18_CD elseif_NN bagent_NN =_JJ i_FW 19_CD then_RB min-payment_NN -LRB-_-LRB- r_NN -LRB-_-LRB- W_NN -RRB-_-RRB- +_CC -RRB-_-RRB- -LRB-_-LRB- r_NN -LRB-_-LRB- g_NN -RRB-_-RRB- ri_NN -LRB-_-LRB- g_NN -RRB-_-RRB- -RRB-_-RRB- h_NN -LRB-_-LRB- Ig_NN -RRB-_-RRB- 20_CD max-utility_NN vi_LS -LRB-_-LRB- g_NN -RRB-_-RRB- min-payment_NN 21_CD if_IN max-utility_JJ >_JJR u_FW 22_CD then_RB pbsearch_NN -LRB-_-LRB- -LCB-_-LRB- x_CC bids_NNS |_VBP xitems_JJ bitems_NN =_JJ -RCB-_-RRB- ,_, g_NN -RRB-_-RRB- b_NN is_VBZ In_IN 23_CD pbsearch_NN -LRB-_-LRB- bids_NNS ,_, g_NN b_NN -RRB-_-RRB- b_NN is_VBZ Out_IN 24_CD else_RB 25_CD pbsearch_NN -LRB-_-LRB- -LCB-_-LRB- x_CC bids_NNS |_VBP xitems_JJ bitems_NN =_JJ -RCB-_-RRB- ,_, g_NN -RRB-_-RRB- b_NN is_VBZ In_IN 26_CD pbsearch_NN -LRB-_-LRB- bids_NNS ,_, g_NN b_NN -RRB-_-RRB- b_NN is_VBZ Out_IN 27_CD return_NN Figure_NN #_# :_: The_DT pbsearch_NN recursive_JJ procedure_NN where_WRB bids_NNS is_VBZ the_DT set_NN of_IN available_JJ bids_NNS and_CC g_NN is_VBZ the_DT current_JJ partial_JJ solution_NN ._.
if_IN an_DT agent_NN has_VBZ only_RB one_CD bid_NN in_IN my-bids_NNS then_RB the_DT maximum_NN utility_NN he_PRP can_MD expect_VB is_VBZ equal_JJ to_TO his_PRP$ value_NN for_IN the_DT items_NNS in_IN that_DT bid_NN minus_CC the_DT minimum_JJ possible_JJ payment_NN we_PRP can_MD make_VB for_IN those_DT items_NNS and_CC still_RB come_VB up_RP with_IN a_DT set_NN of_IN bids_NNS that_WDT has_VBZ revenue_NN greater_JJR than_IN r_NN -LRB-_-LRB- W_NN -RRB-_-RRB- ._.
The_DT calculation_NN of_IN the_DT minimum_JJ payment_NN is_VBZ shown_VBN in_IN line_NN ##_NN for_IN the_DT partial_JJ solution_NN case_NN and_CC line_NN #_# for_IN the_DT case_NN where_WRB we_PRP have_VBP a_DT complete_JJ solution_NN in_IN pbsearch_NN ._.
Note_VB that_IN in_IN order_NN to_TO calculate_VB the_DT min-payment_NN for_IN the_DT partial_JJ solution_NN case_NN we_PRP need_VBP an_DT upper_JJ bound_VBN on_IN the_DT payments_NNS that_IN we_PRP must_MD make_VB for_IN each_DT item_NN ._.
This_DT upper_JJ bound_VBN is_VBZ provided_VBN by_IN h_NN -LRB-_-LRB- S_NN -RRB-_-RRB- =_JJ sS_NN max_NN bB_NN |_CD sbitems_NNS bvalue_JJ size_NN -LRB-_-LRB- bitems_NNS -RRB-_-RRB- ._.
-LRB-_-LRB- #_# -RRB-_-RRB- This_DT function_NN produces_VBZ a_DT bound_VBN identical_JJ to_TO the_DT one_CD used_VBN by_IN the_DT Bidtree_NNP algorithm-it_NN merely_RB assigns_VBZ to_TO each_DT individual_JJ item_NN in_IN S_NN a_DT value_NN equal_JJ to_TO the_DT maximum_NN bid_NN in_IN B_NN divided_VBN by_IN the_DT number_NN of_IN items_NNS in_IN that_DT bid_NN ._.
To_TO prune_VB the_DT branches_NNS that_WDT can_MD not_RB lead_VB to_TO a_DT solution_NN with_IN revenue_NN greater_JJR than_IN the_DT current_JJ W_NN ,_, the_DT algorithm_NN considers_VBZ both_CC the_DT values_NNS of_IN the_DT bids_NNS in_IN B_NN and_CC the_DT valuations_NNS of_IN the_DT 696_CD The_DT Sixth_NNP Intl_NNP ._.
Joint_NNP Conf_NNP ._.
on_IN Autonomous_NNP Agents_NNPS and_CC Multi-Agent_NNP Systems_NNP -LRB-_-LRB- AAMAS_NNP ##_CD -RRB-_-RRB- agent_NN ._.
Similarly_RB to_TO -LRB-_-LRB- #_# -RRB-_-RRB- we_PRP define_VBP hi_UH -LRB-_-LRB- S_NN ,_, k_NN -RRB-_-RRB- =_JJ sS_NN max_NN S_NN |_CD size_NN -LRB-_-LRB- S_NN -RRB-_-RRB- k_NN and_CC sS_NN and_CC vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- >_JJR #_# vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- size_NN -LRB-_-LRB- S_NN -RRB-_-RRB- -LRB-_-LRB- #_# -RRB-_-RRB- which_WDT assigns_VBZ to_TO each_DT individual_JJ item_NN s_NNS in_IN S_NN the_DT maximum_NN value_NN produced_VBN by_IN the_DT valuation_NN of_IN S_NN divided_VBN by_IN the_DT size_NN of_IN S_NN ,_, where_WRB S_NN is_VBZ a_DT set_NN for_IN which_WDT the_DT agent_NN has_VBZ a_DT valuation_NN greater_JJR than_IN zero_CD ,_, contains_VBZ s_NNS ,_, and_CC its_PRP$ size_NN is_VBZ less_RBR or_CC equal_JJ than_IN k_NN ._.
The_DT algorithm_NN uses_VBZ the_DT heuristics_NNS h_NN and_CC hi_UH -LRB-_-LRB- lines_NNS ##_NN and_CC ##_NN of_IN pbsearch_NN -RRB-_-RRB- ,_, to_TO prune_VB the_DT just_RB mentioned_VBN branches_NNS in_IN the_DT same_JJ way_NN an_DT A_NN algorithm_NN uses_VBZ its_PRP$ heuristic_NN ._.
A_DT final_JJ pruning_NN technique_NN implemented_VBN by_IN the_DT algorithm_NN is_VBZ ignoring_VBG any_DT branches_NNS where_WRB the_DT agent_NN has_VBZ no_DT bids_NNS in_IN the_DT current_JJ answer_NN g_NN and_CC no_DT more_JJR of_IN the_DT agent_NN ''_'' s_NNS bids_NNS are_VBP in_IN the_DT list_NN -LRB-_-LRB- pbsearch_NN lines_NNS #_# and_CC #_# -RRB-_-RRB- ._.
The_DT resulting_VBG g_NN found_VBN by_IN pbsearch_NN is_VBZ thus_RB the_DT set_NN of_IN bids_NNS that_WDT has_VBZ revenue_NN bigger_JJR than_IN r_NN -LRB-_-LRB- W_NN -RRB-_-RRB- and_CC maximizes_VBZ agent_NN i_FW ''_'' s_VBZ utility_NN ._.
However_RB ,_, agent_NN i_FW ''_'' s_VBZ bids_NNS in_IN g_NN are_VBP still_RB set_VBN to_TO his_PRP$ own_JJ valuation_NN and_CC not_RB to_TO the_DT lowest_JJS possible_JJ price_NN ._.
Lines_NNP ##_CD to_TO ##_CD in_IN pausebid_NN are_VBP responsible_JJ for_IN setting_VBG the_DT agent_NN ''_'' s_NNS payments_NNS so_IN that_IN it_PRP can_MD achieve_VB its_PRP$ maximum_NN utility_NN u_NN ._.
If_IN the_DT agent_NN has_VBZ only_RB one_CD bid_NN in_IN g_NN then_RB it_PRP is_VBZ simply_RB a_DT matter_NN of_IN reducing_VBG the_DT payment_NN of_IN that_DT bid_NN by_IN u_NN from_IN the_DT current_JJ maximum_NN of_IN the_DT agent_NN ''_'' s_NNS true_JJ valuation_NN ._.
However_RB ,_, if_IN the_DT agent_NN has_VBZ more_JJR than_IN one_CD bid_NN then_RB we_PRP face_VBP the_DT problem_NN of_IN how_WRB to_TO distribute_VB the_DT agent_NN ''_'' s_NNS payments_NNS among_IN these_DT bids_NNS ._.
There_EX are_VBP many_JJ ways_NNS of_IN distributing_VBG the_DT payments_NNS and_CC there_EX does_VBZ not_RB appear_VB to_TO be_VB a_DT dominant_JJ strategy_NN for_IN performing_VBG this_DT distribution_NN ._.
We_PRP have_VBP chosen_VBN to_TO distribute_VB the_DT payments_NNS in_IN proportion_NN to_TO the_DT agent_NN ''_'' s_NNS true_JJ valuation_NN for_IN each_DT set_NN of_IN items_NNS ._.
pausebid_NN assumes_VBZ that_IN the_DT set_NN of_IN best_JJS bids_NNS B_NN and_CC the_DT current_JJ best_JJS winning_VBG bidset_NN W_NN remains_VBZ constant_JJ during_IN its_PRP$ execution_NN ,_, and_CC it_PRP returns_VBZ the_DT agent_NN ''_'' s_NNS myopic_JJ utility-maximizing_JJ bidset_NN -LRB-_-LRB- if_IN there_EX is_VBZ one_CD -RRB-_-RRB- using_VBG a_DT branch_NN and_CC bound_VBD search_NN ._.
However_RB it_PRP repeats_VBZ the_DT whole_JJ search_NN at_IN every_DT stage_NN ._.
We_PRP can_MD minimize_VB this_DT problem_NN by_IN caching_VBG the_DT result_NN of_IN previous_JJ searches_NNS ._.
4_LS ._.
#_# The_DT CACHEDPAUSEBID_NNP Algorithm_NNP The_NNP cachedpausebid_NN algorithm_NN -LRB-_-LRB- shown_VBN in_IN Figure_NNP #_# -RRB-_-RRB- is_VBZ our_PRP$ second_JJ approach_NN to_TO solve_VB the_DT bidding_NN problem_NN in_IN the_DT PAUSE_NN auction_NN ._.
It_PRP is_VBZ based_VBN in_IN a_DT cache_NN table_NN called_VBN C-Table_JJ where_WRB we_PRP store_VBP some_DT solutions_NNS to_TO avoid_VB doing_VBG a_DT complete_JJ search_NN every_DT time_NN ._.
The_DT problem_NN is_VBZ the_DT same_JJ ;_: the_DT agent_NN i_FW has_VBZ to_TO find_VB g_NN i_FW ._.
We_PRP note_VBP that_IN g_NN i_FW is_VBZ a_DT bidset_NN that_WDT contains_VBZ at_IN least_JJS one_CD bid_NN of_IN the_DT agent_NN i_FW ._.
Let_VB S_NN be_VB a_DT set_NN of_IN items_NNS for_IN which_WDT the_DT agent_NN i_FW has_VBZ a_DT valuation_NN such_JJ that_IN vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- B_NN -LRB-_-LRB- S_NN -RRB-_-RRB- >_JJR #_# ,_, let_VB gS_NN i_FW be_VB a_DT bidset_NN over_IN S_NN such_JJ that_IN r_NN -LRB-_-LRB- gS_NN i_LS -RRB-_-RRB- r_NN -LRB-_-LRB- W_NN -RRB-_-RRB- +_CC and_CC gS_NN i_FW =_JJ arg_NN max_NN g2B_NN ui_NN -LRB-_-LRB- g_NN -RRB-_-RRB- ,_, -LRB-_-LRB- #_# -RRB-_-RRB- where_WRB each_DT g_NN is_VBZ a_DT set_NN of_IN bids_NNS that_WDT covers_VBZ all_DT items_NNS and_CC bg_NN -LRB-_-LRB- b_NN B_NN -RRB-_-RRB- or_CC -LRB-_-LRB- bagent_NN =_JJ i_FW and_CC bvalue_FW >_JJR B_NN -LRB-_-LRB- bitems_NNS -RRB-_-RRB- -RRB-_-RRB- and_CC -LRB-_-LRB- bgbitems_NN =_JJ S_NN and_CC bagent_NN =_JJ i_LS -RRB-_-RRB- ._.
That_DT is_VBZ ,_, gS_NN i_FW is_VBZ i_FW ''_'' s_VBZ best_JJS bidset_NN for_IN all_DT items_NNS which_WDT includes_VBZ a_DT bid_NN from_IN i_FW for_IN all_DT S_NN items_NNS ._.
In_IN the_DT PAUSE_NN auction_NN we_PRP can_MD not_RB bid_VB for_IN sets_NNS of_IN items_NNS with_IN size_NN greater_JJR than_IN k_NN ._.
So_RB ,_, if_IN we_PRP have_VBP for_IN each_DT set_NN of_IN items_NNS S_NN for_IN which_WDT vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- >_JJR #_# and_CC size_NN -LRB-_-LRB- S_NN -RRB-_-RRB- k_NN its_PRP$ corresponding_JJ gS_NN i_FW then_RB g_NN i_FW is_VBZ the_DT gS_NN i_FW that_WDT maximizes_VBZ the_DT agent_NN ''_'' s_NNS utility_NN ._.
That_DT is_VBZ g_NN i_FW =_JJ arg_NN max_NN -LCB-_-LRB- S_NN |_CD vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- >_JJR 0size_NN -LRB-_-LRB- S_NN -RRB-_-RRB- k_NN -RCB-_-RRB- ui_NN -LRB-_-LRB- gS_NN i_LS -RRB-_-RRB- ._.
-LRB-_-LRB- #_# -RRB-_-RRB- Each_DT agent_NN i_FW implements_VBZ a_DT hash_NN table_NN C-Table_JJ such_JJ that_IN C-Table_JJ -LSB-_-LRB- S_NN -RSB-_-RRB- =_JJ gS_NN for_IN all_DT S_NN which_WDT vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- B_NN -LRB-_-LRB- S_NN -RRB-_-RRB- >_JJR #_# ._.
We_PRP can_MD cachedpausebid_NN -LRB-_-LRB- i_FW ,_, k_NN ,_, k-changed_JJ -RRB-_-RRB- 1_CD for_IN each_DT S_NN in_IN C-Table_JJ 2_CD do_VBP if_IN vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- <_JJR B_NN -LRB-_-LRB- S_NN -RRB-_-RRB- 3_CD then_RB remove_VB S_NN from_IN C-Table_JJ 4_CD else_RB if_IN k-changed_JJ and_CC size_NN -LRB-_-LRB- S_NN -RRB-_-RRB- =_JJ k_NN 5_CD then_RB B_NN B_NN +_CC new_JJ Bid_NN -LRB-_-LRB- i_FW ,_, S_NN ,_, vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- -RRB-_-RRB- 6_CD g_NN 7_CD u_NN ui_NN -LRB-_-LRB- W_NN -RRB-_-RRB- 8_CD for_IN each_DT S_NN with_IN size_NN -LRB-_-LRB- S_NN -RRB-_-RRB- k_NN in_IN C-Table_JJ 9_CD do_VBP S_NN Items_NNS S_NN 10_CD gS_NN C-Table_JJ -LSB-_-LRB- S_NN -RSB-_-RRB- Global_JJ variable_JJ 11_CD min-payment_NN max_NN -LRB-_-LRB- r_NN -LRB-_-LRB- W_NN -RRB-_-RRB- +_CC ,_, bgS_NN B_NN -LRB-_-LRB- bitems_NNS -RRB-_-RRB- -RRB-_-RRB- 12_CD uS_NN r_NN -LRB-_-LRB- gS_NN -RRB-_-RRB- min-payment_NN Global_JJ variable_JJ 13_CD if_IN -LRB-_-LRB- k-changed_JJ and_CC size_NN -LRB-_-LRB- S_NN -RRB-_-RRB- =_JJ k_NN -RRB-_-RRB- or_CC -LRB-_-LRB- bB_NN bitems_NNS S_NN and_CC bagent_NN =_JJ i_LS -RRB-_-RRB- 14_CD then_RB B_NN -LCB-_-LRB- b_NN B_NN |_CD bitems_NNS S_NN -RCB-_-RRB- 15_CD bids_NNS B_NN +_CC -LCB-_-LRB- b_NN B_NN |_CD bitems_NNS S_NN and_CC b_NN /_: B_NN -RCB-_-RRB- 16_CD for_IN b_NN bids_NNS 17_CD do_VBP if_IN vi_LS -LRB-_-LRB- bitems_NNS -RRB-_-RRB- >_JJR bvalue_NN 18_CD then_RB bagent_JJ i_FW 19_CD bvalue_NN vi_LS -LRB-_-LRB- bitems_NNS -RRB-_-RRB- 20_CD if_IN k-changed_JJ and_CC size_NN -LRB-_-LRB- S_NN -RRB-_-RRB- =_JJ k_NN 21_CD then_RB n_NN size_NN -LRB-_-LRB- bids_NNS -RRB-_-RRB- 22_CD uS_NN #_# 23_CD else_JJ n_NN size_NN -LRB-_-LRB- B_NN -RRB-_-RRB- 24_CD g_NN +_CC new_JJ Bid_NN -LRB-_-LRB- S_NN ,_, i_FW ,_, vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- -RRB-_-RRB- 25_CD cpbsearch_NN -LRB-_-LRB- bids_NNS ,_, g_NN ,_, n_NN -RRB-_-RRB- 26_CD C-Table_JJ -LSB-_-LRB- S_NN -RSB-_-RRB- gS_NN 27_CD if_IN uS_NN >_JJR u_NN and_CC r_NN -LRB-_-LRB- gS_NN -RRB-_-RRB- r_NN -LRB-_-LRB- W_NN -RRB-_-RRB- +_CC 28_CD then_RB surplus_NN bgS_NNP |_CD bagent_NN =_JJ i_FW bvalue_FW B_NN -LRB-_-LRB- bitems_NNS -RRB-_-RRB- 29_CD if_IN surplus_NN >_JJR #_# 30_CD then_RB my-payment_JJ vi_LS -LRB-_-LRB- gS_NN -RRB-_-RRB- ui_NN -LRB-_-LRB- gS_NN -RRB-_-RRB- 31_CD for_IN b_NN gS_NN |_CD bagent_NN =_JJ i_FW 32_CD do_VBP if_IN my-payment_NN #_# 33_CD then_RB bvalue_NN B_NN -LRB-_-LRB- bitems_NNS -RRB-_-RRB- 34_CD else_JJ bvalue_NN B_NN -LRB-_-LRB- bitems_NNS -RRB-_-RRB- +_CC my-payment_JJ bvalue_NN B_NN -LRB-_-LRB- bitems_NNS -RRB-_-RRB- surplus_NN 35_CD u_NN ui_NN -LRB-_-LRB- gS_NN -RRB-_-RRB- 36_CD g_NN gS_NN 37_CD else_RB if_IN uS_NN #_# and_CC vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- <_JJR B_NN -LRB-_-LRB- S_NN -RRB-_-RRB- 38_CD then_RB remove_VB S_NN from_IN C-Table_JJ 39_CD return_NN g_NN Figure_NN #_# :_: The_DT cachedpausebid_JJ algorithm_NN that_WDT implements_VBZ a_DT caching_NN based_VBN search_NN to_TO find_VB a_DT bidset_NN that_WDT maximizes_VBZ the_DT utility_NN for_IN the_DT agent_NN i_FW ._.
k_NN is_VBZ the_DT current_JJ stage_NN of_IN the_DT auction_NN -LRB-_-LRB- for_IN k_NN #_# -RRB-_-RRB- ,_, and_CC k-changed_JJ is_VBZ a_DT boolean_NN that_WDT is_VBZ true_JJ right_RB after_IN the_DT auction_NN moved_VBD to_TO the_DT next_JJ stage_NN ._.
The_DT Sixth_NNP Intl_NNP ._.
Joint_NNP Conf_NNP ._.
on_IN Autonomous_NNP Agents_NNPS and_CC Multi-Agent_NNP Systems_NNP -LRB-_-LRB- AAMAS_NNP ##_CD -RRB-_-RRB- ###_CD cpbsearch_NN -LRB-_-LRB- bids_NNS ,_, g_NN ,_, n_NN -RRB-_-RRB- 1_CD if_IN bids_NNS =_JJ or_CC n_NN #_# then_RB return_VB 2_CD b_NN first_JJ -LRB-_-LRB- bids_NNS -RRB-_-RRB- 3_CD bids_NNS bids_NNS b_NN 4_CD g_NN g_NN +_CC b_NN 5_CD Ig_NN items_NNS not_RB in_IN g_NN 6_CD if_IN g_NN includes_VBZ all_DT items_NNS 7_CD then_RB min-payment_NN max_NN -LRB-_-LRB- #_# ,_, r_NN -LRB-_-LRB- W_NN -RRB-_-RRB- +_CC -LRB-_-LRB- r_NN -LRB-_-LRB- g_NN -RRB-_-RRB- ri_NN -LRB-_-LRB- g_NN -RRB-_-RRB- -RRB-_-RRB- ,_, bg_NN |_NN bagent_NN =_JJ i_FW B_NN -LRB-_-LRB- bitems_NNS -RRB-_-RRB- -RRB-_-RRB- 8_CD max-utility_NN vi_LS -LRB-_-LRB- g_NN -RRB-_-RRB- min-payment_NN 9_CD if_IN r_NN -LRB-_-LRB- g_NN -RRB-_-RRB- >_JJR r_NN -LRB-_-LRB- W_NN -RRB-_-RRB- and_CC max-utility_JJ uS_NN 10_CD then_RB gS_NN g_NN 11_CD uS_NN max-utility_NN 12_CD cpbsearch_NN -LRB-_-LRB- bids_NNS ,_, g_NN b_NN ,_, n_NN #_# -RRB-_-RRB- b_NN is_VBZ Out_IN 13_CD else_RB max-revenue_JJ r_NN -LRB-_-LRB- g_NN -RRB-_-RRB- +_CC max_NN -LRB-_-LRB- h_NN -LRB-_-LRB- Ig_NN -RRB-_-RRB- ,_, hi_UH -LRB-_-LRB- Ig_NN -RRB-_-RRB- -RRB-_-RRB- 14_CD if_IN max-revenue_JJ r_NN -LRB-_-LRB- W_NN -RRB-_-RRB- 15_CD then_RB cpbsearch_NN -LRB-_-LRB- bids_NNS ,_, g_NN b_NN ,_, n_NN #_# -RRB-_-RRB- b_NN is_VBZ Out_IN 16_CD elseif_NN bagent_NN =_JJ i_FW 17_CD then_RB min-payment_NN -LRB-_-LRB- r_NN -LRB-_-LRB- W_NN -RRB-_-RRB- +_CC -RRB-_-RRB- -LRB-_-LRB- r_NN -LRB-_-LRB- g_NN -RRB-_-RRB- ri_NN -LRB-_-LRB- g_NN -RRB-_-RRB- -RRB-_-RRB- h_NN -LRB-_-LRB- Ig_NN -RRB-_-RRB- 18_CD max-utility_NN vi_LS -LRB-_-LRB- g_NN -RRB-_-RRB- min-payment_NN 19_CD if_IN max-utility_JJ >_JJR uS_NN 20_CD then_RB cpbsearch_NN -LRB-_-LRB- -LCB-_-LRB- x_CC bids_NNS |_VBP xitems_JJ bitems_NN =_JJ -RCB-_-RRB- ,_, g_NN ,_, n_NN +_CC #_# -RRB-_-RRB- b_NN is_VBZ In_IN 21_CD cpbsearch_NN -LRB-_-LRB- bids_NNS ,_, g_NN b_NN ,_, n_NN #_# -RRB-_-RRB- b_NN is_VBZ Out_IN 22_CD else_RB 23_CD cpbsearch_NN -LRB-_-LRB- -LCB-_-LRB- x_CC bids_NNS |_VBP xitems_JJ bitems_NN =_JJ -RCB-_-RRB- ,_, g_NN ,_, n_NN +_CC #_# -RRB-_-RRB- b_NN is_VBZ In_IN 24_CD cpbsearch_NN -LRB-_-LRB- bids_NNS ,_, g_NN b_NN ,_, n_NN #_# -RRB-_-RRB- b_NN is_VBZ Out_IN 25_CD return_NN Figure_NN #_# :_: The_DT cpbsearch_NN recursive_JJ procedure_NN where_WRB bids_NNS is_VBZ the_DT set_NN of_IN available_JJ bids_NNS ,_, g_NN is_VBZ the_DT current_JJ partial_JJ solution_NN and_CC n_NN is_VBZ a_DT value_NN that_WDT indicates_VBZ how_WRB deep_JJ in_IN the_DT list_NN bids_VBZ the_DT algorithm_NN has_VBZ to_TO search_VB ._.
then_RB find_VB g_NN by_IN searching_VBG for_IN the_DT gS_NN ,_, stored_VBN in_IN C-Table_JJ -LSB-_-LRB- S_NN -RSB-_-RRB- ,_, that_WDT maximizes_VBZ the_DT agent_NN ''_'' s_NNS utility_NN ,_, considering_VBG only_RB the_DT set_NN of_IN items_NNS S_NN with_IN size_NN -LRB-_-LRB- S_NN -RRB-_-RRB- k_NN ._.
The_DT problem_NN remains_VBZ in_IN maintaining_VBG the_DT C-Table_JJ updated_VBN and_CC avoiding_VBG to_TO search_VB every_DT gS_NN every_DT time_NN ._.
cachedpausebid_NN deals_NNS with_IN this_DT and_CC other_JJ details_NNS ._.
Let_VB B_NNP be_VB the_DT set_NN of_IN bids_NNS that_WDT contains_VBZ the_DT new_JJ best_JJS bids_NNS ,_, that_DT is_VBZ ,_, B_NN contains_VBZ the_DT bids_NNS recently_RB added_VBD to_TO B_NN and_CC the_DT bids_NNS that_WDT have_VBP changed_VBN price_NN -LRB-_-LRB- always_RB higher_JJR -RRB-_-RRB- ,_, bidder_NN ,_, or_CC both_DT and_CC were_VBD already_RB in_IN B_NN ._.
Let_VB S_NN =_JJ Items_NNS S_NN be_VB the_DT complement_NN of_IN S_NN -LRB-_-LRB- the_DT set_NN of_IN items_NNS not_RB included_VBN in_IN S_NN -RRB-_-RRB- ._.
cachedpausebid_NN takes_VBZ three_CD parameters_NNS :_: i_LS the_DT agent_NN ,_, k_NN the_DT current_JJ stage_NN of_IN the_DT auction_NN ,_, and_CC k-changed_VBD a_DT boolean_NN that_WDT is_VBZ true_JJ right_RB after_IN the_DT auction_NN moved_VBD to_TO the_DT next_JJ stage_NN ._.
Initially_RB C-Table_JJ has_VBZ one_CD row_NN or_CC entry_NN for_IN each_DT set_VBN S_NN for_IN which_WDT vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- >_JJR #_# ._.
We_PRP start_VBP by_IN eliminating_VBG the_DT entries_NNS corresponding_VBG to_TO each_DT set_VBN S_NN for_IN which_WDT vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- <_JJR B_NN -LRB-_-LRB- S_NN -RRB-_-RRB- from_IN C-Table_JJ -LRB-_-LRB- line_NN #_# -RRB-_-RRB- ._.
Then_RB ,_, in_IN the_DT case_NN that_WDT k-changed_VBD is_VBZ true_JJ ,_, for_IN each_DT set_VBN S_NN with_IN size_NN -LRB-_-LRB- S_NN -RRB-_-RRB- =_JJ k_NN ,_, we_PRP add_VBP to_TO B_NN a_DT bid_NN for_IN that_DT set_VBN with_IN value_NN equal_JJ to_TO vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- and_CC bidder_NN agent_NN i_FW -LRB-_-LRB- line_NN #_# -RRB-_-RRB- ;_: this_DT a_DT bid_NN that_IN the_DT agent_NN is_VBZ now_RB allowed_VBN to_TO consider_VB ._.
We_PRP then_RB search_VB for_IN g_NN amongst_IN the_DT gS_NN stored_VBN in_IN C-Table_JJ ,_, for_IN this_DT we_PRP only_RB need_VBP to_TO consider_VB the_DT sets_NNS with_IN size_NN -LRB-_-LRB- S_NN -RRB-_-RRB- k_NN -LRB-_-LRB- line_NN #_# -RRB-_-RRB- ._.
But_CC how_WRB do_VBP we_PRP know_VB that_IN the_DT gS_NN in_IN C-Table_JJ -LSB-_-LRB- S_NN -RSB-_-RRB- is_VBZ still_RB the_DT best_JJS solution_NN for_IN S_NN ?_.
There_EX are_VBP only_RB two_CD cases_NNS when_WRB we_PRP are_VBP not_RB sure_JJ about_IN that_DT and_CC we_PRP need_VBP to_TO do_VB a_DT search_NN to_TO update_VB C-Table_JJ -LSB-_-LRB- S_NN -RSB-_-RRB- ._.
These_DT cases_NNS are_VBP :_: i_LS -RRB-_-RRB- When_WRB k-changed_JJ is_VBZ true_JJ and_CC size_NN -LRB-_-LRB- S_NN -RRB-_-RRB- k_NN ,_, since_IN there_EX was_VBD no_DT gS_NN stored_VBN in_IN C-Table_JJ for_IN this_DT S_NN ._.
ii_LS -RRB-_-RRB- When_WRB there_EX exists_VBZ at_IN least_JJS one_CD bid_NN in_IN B_NN for_IN the_DT set_NN of_IN items_NNS S_NN or_CC a_DT subset_NN of_IN it_PRP submitted_VBN by_IN an_DT agent_NN different_JJ than_IN i_FW ,_, since_IN it_PRP is_VBZ probable_JJ that_IN this_DT new_JJ bid_NN can_MD produce_VB a_DT solution_NN better_JJR than_IN the_DT one_CD stored_VBN in_IN C-Table_JJ -LSB-_-LRB- S_NN -RSB-_-RRB- ._.
We_PRP handle_VBP the_DT two_CD cases_NNS mentioned_VBN above_IN in_IN lines_NNS ##_CD to_TO ##_CD of_IN cachedpausebid_NN ._.
In_IN both_DT of_IN these_DT cases_NNS ,_, since_IN gS_NN must_MD contain_VB a_DT bid_NN for_IN S_NN we_PRP need_VBP to_TO find_VB a_DT bidset_NN that_WDT cover_VBP the_DT missing_VBG items_NNS ,_, that_DT is_VBZ S_NN ._.
Thus_RB ,_, our_PRP$ search_NN space_NN consists_VBZ of_IN all_PDT the_DT bids_NNS on_IN B_NN for_IN the_DT set_NN of_IN items_NNS S_NN or_CC for_IN a_DT subset_NN of_IN it_PRP ._.
We_PRP build_VBP the_DT list_NN bids_NNS that_WDT contains_VBZ only_RB those_DT bids_NNS ._.
However_RB ,_, we_PRP put_VBD the_DT bids_NNS from_IN B_NN at_IN the_DT beginning_NN of_IN bids_NNS -LRB-_-LRB- line_NN ##_NN -RRB-_-RRB- since_IN they_PRP are_VBP the_DT ones_NNS that_WDT have_VBP changed_VBN ._.
Then_RB ,_, we_PRP replace_VBP the_DT bids_NNS in_IN bids_NNS that_WDT have_VBP a_DT price_NN lower_JJR than_IN the_DT valuation_NN the_DT agent_NN i_FW has_VBZ for_IN those_DT same_JJ items_NNS with_IN a_DT bid_NN from_IN agent_NN i_FW for_IN those_DT items_NNS and_CC value_NN equal_JJ to_TO the_DT agent_NN ''_'' s_NNS valuation_NN -LRB-_-LRB- lines_NNS 16-19_CD -RRB-_-RRB- ._.
The_DT recursive_JJ procedure_NN cpbsearch_NN ,_, called_VBN in_IN line_NN ##_NN of_IN cachedpausebid_NN and_CC shown_VBN in_IN Figure_NNP #_# ,_, is_VBZ the_DT one_CD that_WDT finds_VBZ the_DT new_JJ gS_NN ._.
cpbsearch_NN is_VBZ a_DT slightly_RB modified_VBN version_NN of_IN our_PRP$ branch_NN and_CC bound_VBD search_NN implemented_VBN in_IN pbsearch_NN ._.
The_DT first_JJ modification_NN is_VBZ that_IN it_PRP has_VBZ a_DT third_JJ parameter_NN n_NN that_WDT indicates_VBZ how_WRB deep_JJ on_IN the_DT list_NN bids_NNS we_PRP want_VBP to_TO search_VB ,_, since_IN it_PRP stops_VBZ searching_VBG when_WRB n_NN less_RBR or_CC equal_JJ to_TO zero_CD and_CC not_RB only_RB when_WRB the_DT list_NN bids_NNS is_VBZ empty_JJ -LRB-_-LRB- line_NN #_# -RRB-_-RRB- ._.
Each_DT time_NN that_IN there_EX is_VBZ a_DT recursive_JJ call_NN of_IN cpbsearch_NN n_NN is_VBZ decreased_VBN by_IN one_CD when_WRB a_DT bid_NN from_IN bids_NNS is_VBZ discarded_VBN or_CC out_IN -LRB-_-LRB- lines_NNS ##_VBP ,_, ##_VBP ,_, ##_VBP ,_, and_CC ##_NN -RRB-_-RRB- and_CC n_NN remains_VBZ the_DT same_JJ otherwise_RB -LRB-_-LRB- lines_NNS ##_NN and_CC ##_NN -RRB-_-RRB- ._.
We_PRP set_VBD the_DT value_NN of_IN n_NN before_IN calling_VBG cpbsearch_NN ,_, to_TO be_VB the_DT size_NN of_IN the_DT list_NN bids_NNS -LRB-_-LRB- cachedpausebid_NN line_NN ##_NN -RRB-_-RRB- in_IN case_NN i_LS -RRB-_-RRB- ,_, since_IN we_PRP want_VBP cpbsearch_NN to_TO search_VB over_IN all_DT bids_NNS ;_: and_CC we_PRP set_VBD n_NN to_TO be_VB the_DT number_NN of_IN bids_NNS from_IN B_NN included_VBD in_IN bids_NNS -LRB-_-LRB- cachedpausebid_NN line_NN ##_NN -RRB-_-RRB- in_IN case_NN ii_LS -RRB-_-RRB- ,_, since_IN we_PRP know_VBP that_IN only_RB the_DT those_DT first_JJ n_NN bids_NNS in_IN bids_NNS changed_VBD and_CC can_MD affect_VB our_PRP$ current_JJ gS_NN ._.
Another_DT difference_NN with_IN pbsearch_NN is_VBZ that_IN the_DT bound_VBN in_IN cpbsearch_NN is_VBZ uS_NN which_WDT we_PRP set_VBD to_TO be_VB #_# -LRB-_-LRB- cachedpausebid_JJ line_NN 22_CD -RRB-_-RRB- when_WRB in_IN case_NN i_LS -RRB-_-RRB- and_CC r_NN -LRB-_-LRB- gS_NN -RRB-_-RRB- min-payment_NN -LRB-_-LRB- cachedpausebid_NN line_NN ##_NN -RRB-_-RRB- when_WRB in_IN case_NN ii_LS -RRB-_-RRB- ._.
We_PRP call_VBP cpbsearch_NN with_IN g_NN already_RB containing_VBG a_DT bid_NN for_IN S_NN ._.
After_IN cpbsearch_NN is_VBZ executed_VBN we_PRP are_VBP sure_JJ that_IN we_PRP have_VBP the_DT right_JJ gS_NN ,_, so_IN we_PRP store_VBP it_PRP in_IN the_DT corresponding_JJ C-Table_JJ -LSB-_-LRB- S_NN -RSB-_-RRB- -LRB-_-LRB- cachedpausebid_JJ line_NN ##_NN -RRB-_-RRB- ._.
When_WRB we_PRP reach_VBP line_NN ##_NN in_IN cachedpausebid_NN ,_, we_PRP are_VBP sure_JJ that_IN we_PRP have_VBP the_DT right_JJ gS_NN ._.
However_RB ,_, agent_NN i_FW ''_'' s_VBZ bids_NNS in_IN gS_NN are_VBP still_RB set_VBN to_TO his_PRP$ own_JJ valuation_NN and_CC not_RB to_TO the_DT lowest_JJS possible_JJ price_NN ._.
If_IN uS_NN is_VBZ greater_JJR than_IN the_DT current_JJ u_NN ,_, lines_NNS ##_VBP to_TO ##_VB in_IN cachedpausebid_NN are_VBP responsible_JJ for_IN setting_VBG the_DT agent_NN ''_'' s_NNS payments_NNS so_IN that_IN it_PRP can_MD achieve_VB its_PRP$ maximum_NN utility_NN uS_NN ._.
As_IN in_IN pausebid_NN ,_, we_PRP have_VBP chosen_VBN to_TO distribute_VB the_DT payments_NNS in_IN proportion_NN to_TO the_DT agent_NN ''_'' s_NNS true_JJ valuation_NN for_IN each_DT set_NN of_IN items_NNS ._.
In_IN the_DT case_NN that_WDT uS_VBZ less_JJR than_IN or_CC equal_JJ to_TO zero_CD and_CC the_DT valuation_NN that_IN the_DT agent_NN i_FW has_VBZ for_IN the_DT set_NN of_IN items_NNS S_NN is_VBZ lower_JJR than_IN the_DT current_JJ value_NN of_IN the_DT bid_NN in_IN B_NN for_IN the_DT same_JJ set_NN of_IN items_NNS ,_, we_PRP remove_VBP the_DT corresponding_JJ C-Table_JJ -LSB-_-LRB- S_NN -RSB-_-RRB- since_IN we_PRP know_VBP that_DT is_VBZ not_RB worthwhile_JJ to_TO keep_VB it_PRP in_IN the_DT cache_NN table_NN -LRB-_-LRB- cachedpausebid_NN line_NN ##_NN -RRB-_-RRB- ._.
The_DT cachedpausebid_NN function_NN is_VBZ called_VBN when_WRB k_NN >_JJR #_# and_CC returns_VBZ the_DT agent_NN ''_'' s_NNS myopic_JJ utility-maximizing_JJ bidset_NN ,_, if_IN there_EX is_VBZ one_CD ._.
It_PRP assumes_VBZ that_IN W_NN and_CC B_NN remains_VBZ constant_JJ during_IN its_PRP$ execution_NN ._.
698_CD The_DT Sixth_NNP Intl_NNP ._.
Joint_NNP Conf_NNP ._.
on_IN Autonomous_NNP Agents_NNPS and_CC Multi-Agent_NNP Systems_NNP -LRB-_-LRB- AAMAS_NNP ##_CD -RRB-_-RRB- generatevalues_NNS -LRB-_-LRB- i_FW ,_, items_NNS -RRB-_-RRB- 1_CD for_IN x_NN items_NNS 2_CD do_VBP vi_LS -LRB-_-LRB- x_NN -RRB-_-RRB- =_JJ expd_NN -LRB-_-LRB- ._.
##_NN -RRB-_-RRB- 3_CD for_IN n_NN #_# ..._: -LRB-_-LRB- num-bids_JJ items_NNS -RRB-_-RRB- 4_CD do_VBP s1_NN ,_, s2_NN Two_CD random_JJ sets_NNS of_IN items_NNS with_IN values_NNS ._.
5_CD vi_LS -LRB-_-LRB- s1_NN s2_NN -RRB-_-RRB- =_JJ vi_LS -LRB-_-LRB- s1_NN -RRB-_-RRB- +_CC vi_LS -LRB-_-LRB- s2_NN -RRB-_-RRB- +_CC expd_NN -LRB-_-LRB- ._.
##_NN -RRB-_-RRB- Figure_NN #_# :_: Algorithm_NN for_IN the_DT generation_NN of_IN random_JJ value_NN functions_NNS ._.
expd_NN -LRB-_-LRB- x_NN -RRB-_-RRB- returns_VBZ a_DT random_JJ number_NN taken_VBN from_IN an_DT exponential_JJ distribution_NN with_IN mean_NN 1_CD /_: x_NN ._.
0_CD 20_CD 40_CD 60_CD 80_CD 100_CD 2_CD #_# #_# #_# #_# #_# #_# #_# ##_CD Number_NN of_IN Items_NNS CachedPauseBid_NN 3_CD #_# #_# #_# #_# #_# 3_CD #_# 3_CD 3_CD PauseBid_NN +_CC +_CC +_CC +_CC +_CC +_CC +_CC +_CC +_CC +_CC Figure_NNP #_# :_: Average_JJ percentage_NN of_IN convergence_NN -LRB-_-LRB- y-axis_NN -RRB-_-RRB- ,_, which_WDT is_VBZ the_DT percentage_NN of_IN times_NNS that_WDT our_PRP$ algorithms_NNS converge_VBP to_TO the_DT revenue-maximizing_JJ solution_NN ,_, as_IN function_NN of_IN the_DT number_NN of_IN items_NNS in_IN the_DT auction_NN ._.
5_CD ._.
TEST_NN AND_CC COMPARISON_NN We_PRP have_VBP implemented_VBN both_DT algorithms_NNS and_CC performed_VBD a_DT series_NN of_IN experiments_NNS in_IN order_NN to_TO determine_VB how_WRB their_PRP$ solution_NN compares_VBZ to_TO the_DT revenue-maximizing_JJ solution_NN and_CC how_WRB their_PRP$ times_NNS compare_VBP with_IN each_DT other_JJ ._.
In_IN order_NN to_TO do_VB our_PRP$ tests_NNS we_PRP had_VBD to_TO generate_VB value_NN functions_NNS for_IN the_DT agents1_NN ._.
The_DT algorithm_NN we_PRP used_VBD is_VBZ shown_VBN in_IN Figure_NNP #_# ._.
The_DT type_NN of_IN valuations_NNS it_PRP generates_VBZ correspond_VBP to_TO domains_NNS where_WRB a_DT set_NN of_IN agents_NNS must_MD perform_VB a_DT set_NN of_IN tasks_NNS but_CC there_EX are_VBP cost_NN savings_NNS for_IN particular_JJ agents_NNS if_IN they_PRP can_MD bundle_VB together_RB certain_JJ subsets_NNS of_IN tasks_NNS ._.
For_IN example_NN ,_, imagine_VBP a_DT set_NN of_IN robots_NNS which_WDT must_MD pick_VB up_RP and_CC deliver_VB items_NNS to_TO different_JJ locations_NNS ._.
Since_IN each_DT robot_NN is_VBZ at_IN a_DT different_JJ location_NN and_CC has_VBZ different_JJ abilities_NNS ,_, each_DT one_CD will_MD have_VB different_JJ preferences_NNS over_IN how_WRB to_TO bundle_VB ._.
Their_PRP$ costs_NNS for_IN the_DT item_NN bundles_NNS are_VBP subadditive_JJ ,_, which_WDT means_VBZ that_IN their_PRP$ preferences_NNS are_VBP superadditive_JJ ._.
The_DT first_JJ experiment_NN we_PRP performed_VBD simply_RB ensured_VBN the_DT proper_JJ 1_CD Note_NN that_IN we_PRP could_MD not_RB use_VB CATS_NNP -LSB-_-LRB- #_# -RSB-_-RRB- because_IN it_PRP generates_VBZ sets_NNS of_IN bids_NNS for_IN an_DT indeterminate_JJ number_NN of_IN agents_NNS ._.
It_PRP is_VBZ as_IN if_IN you_PRP were_VBD told_VBN the_DT set_NN of_IN bids_NNS placed_VBN in_IN a_DT combinatorial_JJ auction_NN but_CC not_RB who_WP placed_VBD each_DT bid_NN or_CC even_RB how_WRB many_JJ people_NNS placed_VBN bids_NNS ,_, and_CC then_RB asked_VBD to_TO determine_VB the_DT value_NN function_NN of_IN every_DT participant_NN in_IN the_DT auction_NN ._.
0_CD 20_CD 40_CD 60_CD 80_CD 100_CD 2_CD #_# #_# #_# #_# #_# #_# #_# ##_CD Number_NN of_IN Items_NNS CachedPauseBid_NN 3_CD 3_CD 3_CD #_# 3_CD #_# #_# #_# #_# 3_CD PauseBid_NN +_CC +_CC +_CC +_CC +_CC +_CC +_CC +_CC +_CC +_CC Figure_NNP #_# :_: Average_JJ percentage_NN of_IN revenue_NN from_IN our_PRP$ algorithms_NNS relative_JJ to_TO maximum_NN revenue_NN -LRB-_-LRB- y-axis_NN -RRB-_-RRB- as_IN function_NN of_IN the_DT number_NN of_IN items_NNS in_IN the_DT auction_NN ._.
functioning_VBG of_IN our_PRP$ algorithms_NNS ._.
We_PRP then_RB compared_VBD the_DT solutions_NNS found_VBN by_IN both_DT of_IN them_PRP to_TO the_DT revenue-maximizing_JJ solution_NN as_IN found_VBN by_IN CASS_NNP when_WRB given_VBN a_DT set_NN of_IN bids_NNS that_WDT corresponds_VBZ to_TO the_DT agents_NNS ''_'' true_JJ valuation_NN ._.
That_DT is_VBZ ,_, for_IN each_DT agent_NN i_FW and_CC each_DT set_NN of_IN items_NNS S_NN for_IN which_WDT vi_LS -LRB-_-LRB- S_NN -RRB-_-RRB- >_JJR #_# we_PRP generated_VBD a_DT bid_NN ._.
This_DT set_NN of_IN bids_NNS was_VBD fed_VBN to_TO CASS_NNS which_WDT implements_VBZ a_DT centralized_JJ winner_NN determination_NN algorithm_NN to_TO find_VB the_DT solution_NN which_WDT maximizes_VBZ revenue_NN ._.
Note_VB ,_, however_RB ,_, that_IN the_DT revenue_NN from_IN the_DT PAUSE_NN auction_NN on_IN all_PDT the_DT auctions_NNS is_VBZ always_RB smaller_JJR than_IN the_DT revenue_NN of_IN the_DT revenue-maximizing_JJ solution_NN when_WRB the_DT agents_NNS bid_VBD their_PRP$ true_JJ valuations_NNS ._.
Since_IN PAUSE_NN uses_VBZ English_NNP auctions_NNS the_DT final_JJ prices_NNS -LRB-_-LRB- roughly_RB -RRB-_-RRB- represent_VBP the_DT second-highest_JJ valuation_NN ,_, plus_CC ,_, for_IN that_DT set_NN of_IN items_NNS ._.
We_PRP fixed_VBD the_DT number_NN of_IN agents_NNS to_TO be_VB #_# and_CC we_PRP experimented_VBD with_IN different_JJ number_NN of_IN items_NNS ,_, namely_RB from_IN #_# to_TO 10_CD ._.
We_PRP ran_VBD both_CC algorithms_NNS ###_CD times_NNS for_IN each_DT combination_NN ._.
When_WRB we_PRP compared_VBD the_DT solutions_NNS of_IN our_PRP$ algorithms_NNS to_TO the_DT revenue-maximizing_JJ solution_NN ,_, we_PRP realized_VBD that_IN they_PRP do_VBP not_RB always_RB find_VB the_DT same_JJ distribution_NN of_IN items_NNS as_IN the_DT revenue-maximizing_JJ solution_NN -LRB-_-LRB- as_IN shown_VBN in_IN Figure_NNP #_# -RRB-_-RRB- ._.
The_DT cases_NNS where_WRB our_PRP$ algorithms_NNS failed_VBD to_TO arrive_VB at_IN the_DT distribution_NN of_IN the_DT revenue-maximizing_JJ solution_NN are_VBP those_DT where_WRB there_EX was_VBD a_DT large_JJ gap_NN between_IN the_DT first_JJ and_CC second_JJ valuation_NN for_IN a_DT set_NN -LRB-_-LRB- or_CC sets_NNS -RRB-_-RRB- of_IN items_NNS ._.
If_IN the_DT revenue-maximizing_JJ solution_NN contains_VBZ the_DT bid_NN -LRB-_-LRB- or_CC bids_NNS -RRB-_-RRB- using_VBG these_DT higher_JJR valuation_NN then_RB it_PRP is_VBZ impossible_JJ for_IN the_DT PAUSE_NN auction_NN to_TO find_VB this_DT solution_NN because_IN that_DT bid_NN -LRB-_-LRB- those_DT bids_NNS -RRB-_-RRB- is_VBZ never_RB placed_VBN ._.
For_IN example_NN ,_, if_IN agent_NN i_FW has_VBZ vi_LS -LRB-_-LRB- #_# -RRB-_-RRB- =_JJ ####_CD and_CC the_DT second_JJ highest_JJS valuation_NN for_IN -LRB-_-LRB- #_# -RRB-_-RRB- is_VBZ only_RB ##_RB then_RB i_FW only_RB needs_VBZ to_TO place_VB a_DT bid_NN of_IN ##_NN in_IN order_NN to_TO win_VB that_IN item_NN ._.
If_IN the_DT revenue-maximizing_JJ solution_NN requires_VBZ that_IN #_# be_VB sold_VBN for_IN ####_CD then_RB that_IN solution_NN will_MD never_RB be_VB found_VBN because_IN that_DT bid_NN will_MD never_RB be_VB placed_VBN ._.
We_PRP also_RB found_VBD that_IN average_JJ percentage_NN of_IN times_NNS that_WDT our_PRP$ algorithms_NNS converges_VBZ to_TO the_DT revenue-maximizing_JJ solution_NN decreases_VBZ as_IN the_DT number_NN of_IN items_NNS increases_NNS ._.
For_IN #_# items_NNS is_VBZ almost_RB ###_CD %_NN but_CC decreases_VBZ a_DT little_JJ bit_NN less_JJR than_IN #_# percent_NN as_IN the_DT items_NNS increase_VBP ,_, so_IN that_IN this_DT average_JJ percentage_NN of_IN convergence_NN is_VBZ around_IN ##_CD %_NN for_IN ##_CD items_NNS ._.
In_IN a_DT few_JJ instances_NNS our_PRP$ algorithms_NNS find_VBP different_JJ solutions_NNS this_DT is_VBZ due_JJ to_TO the_DT different_JJ The_DT Sixth_NNP Intl_NNP ._.
Joint_NNP Conf_NNP ._.
on_IN Autonomous_NNP Agents_NNPS and_CC Multi-Agent_NNP Systems_NNP -LRB-_-LRB- AAMAS_NNP ##_CD -RRB-_-RRB- ###_CD 1_CD 10_CD 100_CD 1000_CD 10000_CD 2_CD #_# #_# #_# #_# #_# #_# #_# ##_CD Number_NN of_IN Items_NNS CachedPauseBid_NN 3_CD 3_CD 3_CD 3_CD 3_CD 3_CD 3_CD 3_CD 3_CD PauseBid_NN +_CC +_CC +_CC +_CC +_CC +_CC +_CC +_CC +_CC +_CC Figure_NNP #_# :_: Average_JJ number_NN of_IN expanded_VBN nodes_NNS -LRB-_-LRB- y-axis_NN -RRB-_-RRB- as_IN function_NN of_IN items_NNS in_IN the_DT auction_NN ._.
ordering_VBG of_IN the_DT bids_NNS in_IN the_DT bids_NNS list_NN which_WDT makes_VBZ them_PRP search_VB in_IN different_JJ order_NN ._.
We_PRP know_VBP that_IN the_DT revenue_NN generated_VBN by_IN the_DT PAUSE_NN auction_NN is_VBZ generally_RB lower_JJR than_IN the_DT revenue_NN of_IN the_DT revenuemaximizing_VBG solution_NN ,_, but_CC how_WRB much_RB lower_JJR ?_.
To_TO answer_VB this_DT question_NN we_PRP calculated_VBD percentage_NN representing_VBG the_DT proportion_NN of_IN the_DT revenue_NN given_VBN by_IN our_PRP$ algorithms_NNS relative_JJ to_TO the_DT revenue_NN given_VBN by_IN CASS_NNP ._.
We_PRP found_VBD that_IN the_DT percentage_NN of_IN revenue_NN of_IN our_PRP$ algorithms_NNS increases_NNS in_IN average_JJ #_# ._.
#_# %_NN as_IN the_DT number_NN of_IN items_NNS increases_NNS ,_, as_IN shown_VBN in_IN Figure_NNP #_# ._.
However_RB ,_, we_PRP found_VBD that_IN cachedpausebid_NN generates_VBZ a_DT higher_JJR revenue_NN than_IN pausebid_NN -LRB-_-LRB- #_# ._.
#_# %_NN higher_JJR in_IN average_NN -RRB-_-RRB- except_IN for_IN auctions_NNS with_IN #_# items_NNS where_WRB both_DT have_VBP about_IN the_DT same_JJ percentage_NN ._.
Again_RB ,_, this_DT difference_NN is_VBZ produced_VBN by_IN the_DT order_NN of_IN the_DT search_NN ._.
In_IN the_DT case_NN of_IN #_# items_NNS both_CC algorithms_NNS produce_VBP in_IN average_NN a_DT revenue_NN proportion_NN of_IN ##_NN ._.
#_# %_NN ,_, while_IN in_IN the_DT other_JJ extreme_JJ -LRB-_-LRB- ##_JJ items_NNS -RRB-_-RRB- ,_, cachedpausebid_NN produced_VBD in_IN average_NN a_DT revenue_NN proportion_NN of_IN ##_NN ._.
#_# %_NN while_IN pausebid_NN produced_VBN in_IN average_NN a_DT revenue_NN proportion_NN of_IN ##_NN ._.
#_# %_NN ._.
The_DT scalability_NN of_IN our_PRP$ algorithms_NNS can_MD be_VB determined_VBN by_IN counting_VBG the_DT number_NN of_IN nodes_NNS expanded_VBN in_IN the_DT search_NN tree_NN ._.
For_IN this_DT we_PRP count_VBP the_DT number_NN of_IN times_NNS that_WDT pbsearch_VBP gets_VBZ invoked_VBN for_IN each_DT time_NN that_WDT pausebid_NN is_VBZ called_VBN and_CC the_DT number_NN of_IN times_NNS that_WDT fastpausebidsearch_VBP gets_VBZ invoked_VBN for_IN each_DT time_NN that_IN cachedpausebid_NN ,_, respectively_RB for_IN each_DT of_IN our_PRP$ algorithms_NNS ._.
As_IN expected_VBN since_IN this_DT is_VBZ an_DT NP-Hard_JJ problem_NN ,_, the_DT number_NN of_IN expanded_VBN nodes_NNS does_VBZ grow_VB exponentially_RB with_IN the_DT number_NN of_IN items_NNS -LRB-_-LRB- as_IN shown_VBN in_IN Figure_NNP #_# -RRB-_-RRB- ._.
However_RB ,_, we_PRP found_VBD that_IN cachedpausebid_NN outperforms_VBZ pausebid_NN ,_, since_IN it_PRP expands_VBZ in_IN average_JJ less_JJR than_IN half_PDT the_DT number_NN of_IN nodes_NNS ._.
For_IN example_NN ,_, the_DT average_JJ number_NN of_IN nodes_NNS expanded_VBN when_WRB 2_CD items_NNS is_VBZ zero_CD for_IN cachedpausebid_NN while_IN for_IN pausebid_NN is_VBZ 2_CD ;_: and_CC in_IN the_DT other_JJ extreme_JJ -LRB-_-LRB- ##_JJ items_NNS -RRB-_-RRB- cachedpausebid_NN expands_VBZ in_IN average_NN only_RB ###_CD nodes_NNS while_IN pausebid_NN expands_VBZ in_IN average_JJ ####_CD nodes_NNS ,_, a_DT difference_NN of_IN more_JJR than_IN ####_CD nodes_NNS ._.
Although_IN the_DT number_NN of_IN nodes_NNS expanded_VBN by_IN our_PRP$ algorithms_NNS increases_VBZ as_IN function_NN of_IN the_DT number_NN of_IN items_NNS ,_, the_DT actual_JJ number_NN of_IN nodes_NNS is_VBZ a_DT much_RB smaller_JJR than_IN the_DT worst-case_JJ scenario_NN of_IN nn_NN where_WRB n_NN is_VBZ the_DT number_NN of_IN items_NNS ._.
For_IN example_NN ,_, for_IN ##_CD items_NNS we_PRP expand_VBP slightly_RB more_JJR than_IN ###_CD nodes_NNS for_IN the_DT case_NN of_IN pausebid_NN and_CC less_JJR than_IN that_DT for_IN the_DT case_NN of_IN cachedpause0_NN ._.
#_# 1_CD 10_CD 100_CD 1000_CD 2_CD #_# #_# #_# #_# #_# #_# #_# ##_CD Number_NN of_IN Items_NNS CachedPauseBid_NN 3_CD 3_CD 3_CD 3_CD 3_CD 3_CD 3_CD 3_CD 3_CD 3_CD PauseBid_NN +_CC +_CC +_CC +_CC +_CC +_CC +_CC +_CC +_CC +_CC Figure_NNP #_# :_: Average_JJ time_NN in_IN seconds_NNS that_WDT takes_VBZ to_TO finish_VB an_DT auction_NN -LRB-_-LRB- y-axis_NN -RRB-_-RRB- as_IN function_NN of_IN the_DT number_NN of_IN items_NNS in_IN the_DT auction_NN ._.
bid_NN which_WDT are_VBP much_RB smaller_JJR numbers_NNS than_IN ####_CD ._.
Notice_NNP also_RB that_IN our_PRP$ value_NN generation_NN algorithm_NN -LRB-_-LRB- Figure_NN #_# -RRB-_-RRB- generates_VBZ a_DT number_NN of_IN bids_NNS that_WDT is_VBZ exponential_JJ on_IN the_DT number_NN of_IN items_NNS ,_, as_IN might_MD be_VB expected_VBN in_IN many_JJ situations_NNS ._.
As_IN such_JJ ,_, these_DT results_NNS do_VBP not_RB support_VB the_DT conclusion_NN that_IN time_NN grows_VBZ exponentially_RB with_IN the_DT number_NN of_IN items_NNS when_WRB the_DT number_NN of_IN bids_NNS is_VBZ independent_JJ of_IN the_DT number_NN of_IN items_NNS ._.
We_PRP expect_VBP that_IN both_CC algorithms_NNS will_MD grow_VB exponentially_RB as_IN a_DT function_NN the_DT number_NN of_IN bids_NNS ,_, but_CC stay_VBP roughly_RB constant_JJ as_IN the_DT number_NN of_IN items_NNS grows_VBZ ._.
We_PRP wanted_VBD to_TO make_VB sure_JJ that_IN less_JJR expanded_VBN nodes_NNS does_VBZ indeed_RB correspond_VBP to_TO faster_RBR execution_NN ,_, especially_RB since_IN our_PRP$ algorithms_NNS execute_VBP different_JJ operations_NNS ._.
We_PRP thus_RB ran_VBD the_DT same_JJ experiment_NN with_IN all_PDT the_DT agents_NNS in_IN the_DT same_JJ machine_NN ,_, an_DT Intel_NNP Centrino_NNP #_# ._.
#_# GHz_NNP laptop_NN PC_NN with_IN #_# GB_NN of_IN RAM_NNP and_CC a_DT ####_CD RMP_NNP ##_CD GB_NNP hard_JJ drive_NN ,_, and_CC calculated_VBN the_DT average_JJ time_NN that_WDT takes_VBZ to_TO finish_VB an_DT auction_NN for_IN each_DT algorithm_NN ._.
As_IN shown_VBN in_IN Figure_NNP #_# ,_, cachedpausebid_NN is_VBZ faster_RBR than_IN pausebid_NN ,_, the_DT difference_NN in_IN execution_NN speed_NN is_VBZ even_RB more_RBR clear_JJ as_IN the_DT number_NN of_IN items_NNS increases_NNS ._.
6_CD ._.
RELATED_JJ WORK_VBP A_DT lot_NN of_IN research_NN has_VBZ been_VBN done_VBN on_IN various_JJ aspects_NNS of_IN combinatorial_JJ auctions_NNS ._.
We_PRP recommend_VBP -LSB-_-LRB- #_# -RSB-_-RRB- for_IN a_DT good_JJ review_NN ._.
However_RB ,_, the_DT study_NN of_IN distributed_VBN winner_NN determination_NN algorithms_NNS for_IN combinatorial_JJ auctions_NNS is_VBZ still_RB relatively_RB new_JJ ._.
One_CD approach_NN is_VBZ given_VBN by_IN the_DT algorithms_NNS for_IN distributing_VBG the_DT winner_NN determination_NN problem_NN in_IN combinatorial_JJ auctions_NNS presented_VBN in_IN -LSB-_-LRB- #_# -RSB-_-RRB- ,_, but_CC these_DT algorithms_NNS assume_VBP the_DT computational_JJ entities_NNS are_VBP the_DT items_NNS being_VBG sold_VBN and_CC thus_RB end_VB up_RP with_IN a_DT different_JJ type_NN of_IN distribution_NN ._.
The_DT VSA_NNP algorithm_NN -LSB-_-LRB- #_# -RSB-_-RRB- is_VBZ another_DT way_NN of_IN performing_VBG distributed_VBN winner_NN determination_NN in_IN combinatorial_JJ auction_NN but_CC it_PRP assumes_VBZ the_DT bids_NNS themselves_PRP perform_VBP the_DT computation_NN ._.
This_DT algorithm_NN also_RB fails_VBZ to_TO converge_VB to_TO a_DT solution_NN for_IN most_JJS cases_NNS ._.
In_IN -LSB-_-LRB- #_# -RSB-_-RRB- the_DT authors_NNS present_VBP a_DT distributed_VBN mechanism_NN for_IN calculating_VBG VCG_NNP payments_NNS in_IN a_DT mechanism_NN design_NN problem_NN ._.
Their_PRP$ mechanism_NN roughly_RB amounts_VBZ to_TO having_VBG each_DT agent_NN calculate_VBP the_DT payments_NNS for_IN two_CD other_JJ agents_NNS and_CC give_VB these_DT to_TO a_DT secure_JJ 700_CD The_DT Sixth_NNP Intl_NNP ._.
Joint_NNP Conf_NNP ._.
on_IN Autonomous_NNP Agents_NNPS and_CC Multi-Agent_NNP Systems_NNP -LRB-_-LRB- AAMAS_NNP ##_CD -RRB-_-RRB- central_JJ server_NN which_WDT then_RB checks_NNS to_TO make_VB sure_JJ results_NNS from_IN all_DT pairs_NNS agree_VBP ,_, otherwise_RB a_DT re-calculation_NN is_VBZ ordered_VBN ._.
This_DT general_JJ idea_NN ,_, which_WDT they_PRP call_VBP the_DT redundancy_NN principle_NN ,_, could_MD also_RB be_VB applied_VBN to_TO our_PRP$ problem_NN but_CC it_PRP requires_VBZ the_DT existence_NN of_IN a_DT secure_JJ center_NN agent_NN that_WDT everyone_NN trusts_NNS ._.
Another_DT interesting_JJ approach_NN is_VBZ given_VBN in_IN -LSB-_-LRB- #_# -RSB-_-RRB- where_WRB the_DT bidding_NN agents_NNS prioritize_VBP their_PRP$ bids_NNS ,_, thus_RB reducing_VBG the_DT set_NN of_IN bids_NNS that_IN the_DT centralized_JJ winner_NN determination_NN algorithm_NN must_MD consider_VB ,_, making_VBG that_IN problem_NN easier_JJR ._.
Finally_RB ,_, in_IN the_DT computation_NN procuring_VBG clock_NN auction_NN -LSB-_-LRB- #_# -RSB-_-RRB- the_DT agents_NNS are_VBP given_VBN an_DT everincreasing_JJ percentage_NN of_IN the_DT surplus_NN achieved_VBN by_IN their_PRP$ proposed_VBN solution_NN over_IN the_DT current_JJ best_JJS ._.
As_IN such_JJ ,_, it_PRP assumes_VBZ the_DT agents_NNS are_VBP impartial_JJ computational_JJ entities_NNS ,_, not_RB the_DT set_NN of_IN possible_JJ buyers_NNS as_IN assumed_VBN by_IN the_DT PAUSE_NN auction_NN ._.
7_CD ._.
CONCLUSIONS_NNS We_PRP believe_VBP that_IN distributed_VBN solutions_NNS to_TO the_DT winner_NN determination_NN problem_NN should_MD be_VB studied_VBN as_IN they_PRP offer_VBP a_DT better_JJR fit_NN for_IN some_DT applications_NNS as_IN when_WRB ,_, for_IN example_NN ,_, agents_NNS do_VBP not_RB want_VB to_TO reveal_VB their_PRP$ valuations_NNS to_TO the_DT auctioneer_NN or_CC when_WRB we_PRP wish_VBP to_TO distribute_VB the_DT computational_JJ load_NN among_IN the_DT bidders_NNS ._.
The_DT PAUSE_NN auction_NN is_VBZ one_CD of_IN a_DT few_JJ approaches_NNS to_TO decentralize_VB the_DT winner_NN determination_NN problem_NN in_IN combinatorial_JJ auctions_NNS ._.
With_IN this_DT auction_NN ,_, we_PRP can_MD even_RB envision_VB completely_RB eliminating_VBG the_DT auctioneer_NN and_CC ,_, instead_RB ,_, have_VBP every_DT agent_NN performe_NN the_DT task_NN of_IN the_DT auctioneer_NN ._.
However_RB ,_, while_IN PAUSE_NN establishes_VBZ the_DT rules_NNS the_DT bidders_NNS must_MD obey_VB ,_, it_PRP does_VBZ not_RB tell_VB us_PRP how_WRB the_DT bidders_NNS should_MD calculate_VB their_PRP$ bids_NNS ._.
We_PRP have_VBP presented_VBN two_CD algorithms_NNS ,_, pausebid_NN and_CC cachedpausebid_NN ,_, that_IN bidder_NN agents_NNS can_MD use_VB to_TO engage_VB in_IN a_DT PAUSE_NN auction_NN ._.
Both_DT algorithms_NNS implement_VBP a_DT myopic_JJ utility_NN maximizing_VBG strategy_NN that_WDT is_VBZ guaranteed_VBN to_TO find_VB the_DT bidset_NN that_WDT maximizes_VBZ the_DT agent_NN ''_'' s_NNS utility_NN given_VBN the_DT set_NN of_IN outstanding_JJ best_JJS bids_NNS at_IN any_DT given_VBN time_NN ,_, without_IN considering_VBG possible_JJ future_JJ bids_NNS ._.
Both_DT algorithms_NNS find_VBP ,_, most_JJS of_IN the_DT time_NN ,_, the_DT same_JJ distribution_NN of_IN items_NNS as_IN the_DT revenue-maximizing_JJ solution_NN ._.
The_DT cases_NNS where_WRB our_PRP$ algorithms_NNS failed_VBD to_TO arrive_VB at_IN that_DT distribution_NN are_VBP those_DT where_WRB there_EX was_VBD a_DT large_JJ gap_NN between_IN the_DT first_JJ and_CC second_JJ valuation_NN for_IN a_DT set_NN -LRB-_-LRB- or_CC sets_NNS -RRB-_-RRB- of_IN items_NNS ._.
As_IN it_PRP is_VBZ an_DT NP-Hard_JJ problem_NN ,_, the_DT running_VBG time_NN of_IN our_PRP$ algorithms_NNS remains_VBZ exponential_JJ but_CC it_PRP is_VBZ significantly_RB better_JJR than_IN a_DT full_JJ search_NN ._.
pausebid_NN performs_VBZ a_DT branch_NN and_CC bound_VBD search_NN completely_RB from_IN scratch_NN each_DT time_NN it_PRP is_VBZ invoked_VBN ._.
cachedpausebid_NN caches_NNS partial_JJ solutions_NNS and_CC performs_VBZ a_DT branch_NN and_CC bound_VBD search_NN only_RB on_IN the_DT few_JJ portions_NNS affected_VBN by_IN the_DT changes_NNS on_IN the_DT bids_NNS between_IN consecutive_JJ times_NNS ._.
cachedpausebid_NN has_VBZ a_DT better_JJR performance_NN since_IN it_PRP explores_VBZ fewer_JJR nodes_NNS -LRB-_-LRB- less_JJR than_IN half_NN -RRB-_-RRB- and_CC it_PRP is_VBZ faster_RBR ._.
As_IN expected_VBN the_DT revenue_NN generated_VBN by_IN a_DT PAUSE_NN auction_NN is_VBZ lower_JJR than_IN the_DT revenue_NN of_IN a_DT revenue-maximizing_JJ solution_NN found_VBN by_IN a_DT centralized_JJ winner_NN determination_NN algorithm_NN ,_, however_RB we_PRP found_VBD that_IN cachedpausebid_NN generates_VBZ in_IN average_JJ #_# ._.
#_# %_NN higher_JJR revenue_NN than_IN pausebid_NN ._.
We_PRP also_RB found_VBD that_IN the_DT revenue_NN generated_VBN by_IN our_PRP$ algorithms_NNS increases_VBZ as_IN function_NN of_IN the_DT number_NN of_IN items_NNS in_IN the_DT auction_NN ._.
Our_PRP$ algorithms_NNS have_VBP shown_VBN that_IN it_PRP is_VBZ feasible_JJ to_TO implement_VB the_DT complex_NN coordination_NN constraints_NNS supported_VBN by_IN combinatorial_JJ auctions_NNS without_IN having_VBG to_TO resort_VB to_TO a_DT centralized_JJ winner_NN determination_NN algorithm_NN ._.
Moreover_RB ,_, because_IN of_IN the_DT design_NN of_IN the_DT PAUSE_NN auction_NN ,_, the_DT agents_NNS in_IN the_DT auction_NN also_RB have_VBP an_DT incentive_NN to_TO perform_VB the_DT required_VBN computation_NN ._.
Our_PRP$ bidding_NN algorithms_NNS can_MD be_VB used_VBN by_IN any_DT multiagent_JJ system_NN that_WDT would_MD use_VB combinatorial_JJ auctions_NNS for_IN coordination_NN but_CC would_MD rather_RB not_RB implement_VB a_DT centralized_JJ auctioneer_NN ._.
8_CD ._.
REFERENCES_NNS -LSB-_-LRB- #_# -RSB-_-RRB- P_NN ._.
J_NN ._.
Brewer_NNP ._.
Decentralized_JJ computation_NN procurement_NN and_CC computational_JJ robustness_NN in_IN a_DT smart_JJ market_NN ._.
Economic_NNP Theory_NNP ,_, ##_CD -LRB-_-LRB- #_# -RRB-_-RRB- :_: 41-92_CD ,_, January_NNP ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- P_NN ._.
Cramton_NNP ,_, Y_NN ._.
Shoham_NNP ,_, and_CC R_NN ._.
Steinberg_NNP ,_, editors_NNS ._.
Combinatorial_JJ Auctions_NNS ._.
MIT_NNP Press_NNP ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- Y_NN ._.
Fujishima_NNP ,_, K_NNP ._.
Leyton-Brown_NNP ,_, and_CC Y_NN ._.
Shoham_NNP ._.
Taming_VBG the_DT computational_JJ complexity_NN of_IN combinatorial_JJ auctions_NNS :_: Optimal_JJ and_CC approximate_JJ approaches_NNS ._.
In_IN Proceedings_NNP of_IN the_DT Sixteenth_NNP International_NNP Joint_NNP Conference_NNP on_IN Artificial_NNP Intelligence_NNP ,_, pages_NNS 548-553_CD ._.
Morgan_NNP Kaufmann_NNP Publishers_NNPS Inc_NNP ._.
,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- F_NN ._.
Kelly_NNP and_CC R_NN ._.
Stenberg_NNP ._.
A_DT combinatorial_JJ auction_NN with_IN multiple_JJ winners_NNS for_IN universal_JJ service_NN ._.
Management_NNP Science_NNP ,_, ##_CD -LRB-_-LRB- #_# -RRB-_-RRB- :_: 586-596_CD ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- A_DT ._.
Land_NNP ,_, S_NN ._.
Powell_NNP ,_, and_CC R_NN ._.
Steinberg_NNP ._.
PAUSE_NN :_: A_DT computationally_RB tractable_JJ combinatorial_JJ auction_NN ._.
In_IN Cramton_NNP et_FW al_FW ._.
-LSB-_-LRB- #_# -RSB-_-RRB- ,_, chapter_NN #_# ,_, pages_NNS 139-157_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- K_NNP ._.
Leyton-Brown_NNP ,_, M_NN ._.
Pearson_NNP ,_, and_CC Y_NN ._.
Shoham_NNP ._.
Towards_IN a_DT universal_JJ test_NN suite_NN for_IN combinatorial_JJ auction_NN algorithms_NNS ._.
In_IN Proceedings_NNP of_IN the_DT 2nd_JJ ACM_NN conference_NN on_IN Electronic_JJ commerce_NN ,_, pages_NNS 66-76_CD ._.
ACM_NNP Press_NNP ,_, ####_CD ._.
http_NN :_: /_: /_: cats_NNS ._.
stanford_NN ._.
edu_NN ._.
-LSB-_-LRB- #_# -RSB-_-RRB- M_NN ._.
V_NN ._.
Narumanchi_NNP and_CC J_NNP ._.
M_NN ._.
Vidal_NNP ._.
Algorithms_NNS for_IN distributed_VBN winner_NN determination_NN in_IN combinatorial_JJ auctions_NNS ._.
In_IN LNAI_NN volume_NN of_IN AMEC_NNP /_: TADA_NNP ._.
Springer_NNP ,_, 2006_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- S_NN ._.
Park_NNP and_CC M_NN ._.
H_NN ._.
Rothkopf_NNP ._.
Auctions_NNS with_IN endogenously_RB determined_VBN allowable_JJ combinations_NNS ._.
Technical_NNP report_NN ,_, Rutgets_NNP Center_NNP for_IN Operations_NNP Research_NNP ,_, January_NNP ####_CD ._.
RRR_NN 3-2001_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- D_NN ._.
C_NN ._.
Parkes_NN and_CC J_NN ._.
Shneidman_NNP ._.
Distributed_VBN implementations_NNS of_IN vickrey-clarke-groves_NNS auctions_NNS ._.
In_IN Proceedings_NNP of_IN the_DT Third_NNP International_NNP Joint_NNP Conference_NNP on_IN Autonomous_NNP Agents_NNPS and_CC MultiAgent_NNP Systems_NNPS ,_, pages_NNS 261-268_CD ._.
ACM_NNP ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- M_NN ._.
H_NN ._.
Rothkopf_NNP ,_, A_NNP ._.
Pekec_NNP ,_, and_CC R_NN ._.
M_NN ._.
Harstad_NNP ._.
Computationally_RB manageable_JJ combinational_JJ auctions_NNS ._.
Management_NNP Science_NNP ,_, ##_CD -LRB-_-LRB- #_# -RRB-_-RRB- :_: 1131-1147_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- T_NN ._.
Sandholm_NNP ._.
An_DT algorithm_NN for_IN winner_NN determination_NN in_IN combinatorial_JJ auctions_NNS ._.
Artificial_JJ Intelligence_NNP ,_, 135_CD -LRB-_-LRB- 1-2_CD -RRB-_-RRB- :_: 1-54_CD ,_, February_NNP ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- T_NN ._.
Sandholm_NNP ,_, S_NN ._.
Suri_NNP ,_, A_NNP ._.
Gilpin_NNP ,_, and_CC D_NN ._.
Levine_NNP ._.
CABOB_NNP :_: a_DT fast_JJ optimal_JJ algorithm_NN for_IN winner_NN determination_NN in_IN combinatorial_JJ auctions_NNS ._.
Management_NNP Science_NNP ,_, ##_CD -LRB-_-LRB- #_# -RRB-_-RRB- :_: 374-391_CD ,_, ####_CD ._.
The_DT Sixth_NNP Intl_NNP ._.
Joint_NNP Conf_NNP ._.
on_IN Autonomous_NNP Agents_NNPS and_CC Multi-Agent_NNP Systems_NNP -LRB-_-LRB- AAMAS_NNP ##_CD -RRB-_-RRB- ###_CD
