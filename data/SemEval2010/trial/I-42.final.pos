A_DT Complete_JJ Distributed_VBN Constraint_NN Optimization_NN Method_NN For_IN Non-Traditional_JJ Pseudotree_NN Arrangements_NNS James_NNP Atlas_NNP Computer_NNP and_CC Information_NNP Sciences_NNP University_NNP of_IN Delaware_NNP Newark_NNP ,_, DE_NN #####_CD atlas_NNS @_IN cis_NN ._.
udel_NN ._.
edu_NN Keith_NNP Decker_NNP Computer_NNP and_CC Information_NNP Sciences_NNP University_NNP of_IN Delaware_NNP Newark_NNP ,_, DE_NN #####_CD decker_NN @_IN cis_NN ._.
udel_NN ._.
edu_NN ABSTRACT_NN Distributed_VBN Constraint_NNP Optimization_NNP -LRB-_-LRB- DCOP_NNP -RRB-_-RRB- is_VBZ a_DT general_JJ framework_NN that_WDT can_MD model_VB complex_JJ problems_NNS in_IN multi-agent_JJ systems_NNS ._.
Several_JJ current_JJ algorithms_NNS that_WDT solve_VBP general_JJ DCOP_NN instances_NNS ,_, including_VBG ADOPT_NNP and_CC DPOP_NNP ,_, arrange_VBP agents_NNS into_IN a_DT traditional_JJ pseudotree_NN structure_NN ._.
We_PRP introduce_VBP an_DT extension_NN to_TO the_DT DPOP_NN algorithm_NN that_WDT handles_VBZ an_DT extended_JJ set_NN of_IN pseudotree_NN arrangements_NNS ._.
Our_PRP$ algorithm_NN correctly_RB solves_VBZ DCOP_NN instances_NNS for_IN pseudotrees_NNS that_WDT include_VBP edges_NNS between_IN nodes_NNS in_IN separate_JJ branches_NNS ._.
The_DT algorithm_NN also_RB solves_VBZ instances_NNS with_IN traditional_JJ pseudotree_NN arrangements_NNS using_VBG the_DT same_JJ procedure_NN as_IN DPOP_NN ._.
We_PRP compare_VBP our_PRP$ algorithm_NN with_IN DPOP_NN using_VBG several_JJ metrics_NNS including_VBG the_DT induced_VBN width_NN of_IN the_DT pseudotrees_NNS ,_, the_DT maximum_NN dimensionality_NN of_IN messages_NNS and_CC computation_NN ,_, and_CC the_DT maximum_NN sequential_JJ path_NN cost_NN through_IN the_DT algorithm_NN ._.
We_PRP prove_VBP that_IN for_IN some_DT problem_NN instances_NNS it_PRP is_VBZ not_RB possible_JJ to_TO generate_VB a_DT traditional_JJ pseudotree_NN using_VBG edge-traversal_JJ heuristics_NNS that_WDT will_MD outperform_VB a_DT cross-edged_JJ pseudotree_NN ._.
We_PRP use_VBP multiple_JJ heuristics_NNS to_TO generate_VB pseudotrees_NNS and_CC choose_VB the_DT best_JJS pseudotree_NN in_IN linear_JJ space-time_NN complexity_NN ._.
For_IN some_DT problem_NN instances_NNS we_PRP observe_VBP significant_JJ improvements_NNS in_IN message_NN and_CC computation_NN sizes_NNS compared_VBN to_TO DPOP_NN ._.
Categories_NNS and_CC Subject_NNP Descriptors_NNS I_PRP ._.
#_# ._.
##_NN -LSB-_-LRB- Artificial_NNP Intelligence_NNP -RSB-_-RRB- :_: Distributed_VBN Artificial_NNP Intelligence-Multiagent_NNP Systems_NNP General_NNP Terms_NNS Algorithms_NNS 1_CD ._.
INTRODUCTION_NNP Many_JJ historical_JJ problems_NNS in_IN the_DT AI_NNP community_NN can_MD be_VB transformed_VBN into_IN Constraint_NN Satisfaction_NN Problems_NNS -LRB-_-LRB- CSP_NN -RRB-_-RRB- ._.
With_IN the_DT advent_NN of_IN distributed_VBN AI_NNP ,_, multi-agent_JJ systems_NNS became_VBD a_DT popular_JJ way_NN to_TO model_VB the_DT complex_JJ interactions_NNS and_CC coordination_NN required_VBN to_TO solve_VB distributed_VBN problems_NNS ._.
CSPs_NNS were_VBD originally_RB extended_VBN to_TO distributed_VBN agent_NN environments_NNS in_IN -LSB-_-LRB- #_# -RSB-_-RRB- ._.
Early_JJ domains_NNS for_IN distributed_VBN constraint_NN satisfaction_NN problems_NNS -LRB-_-LRB- DisCSP_NN -RRB-_-RRB- included_VBD job_NN shop_NN scheduling_NN -LSB-_-LRB- #_# -RSB-_-RRB- and_CC resource_NN allocation_NN -LSB-_-LRB- #_# -RSB-_-RRB- ._.
Many_JJ domains_NNS for_IN agent_NN systems_NNS ,_, especially_RB teamwork_NN coordination_NN ,_, distributed_VBN scheduling_NN ,_, and_CC sensor_NN networks_NNS ,_, involve_VBP overly_RB constrained_VBN problems_NNS that_WDT are_VBP difficult_JJ or_CC impossible_JJ to_TO satisfy_VB for_IN every_DT constraint_NN ._.
Recent_JJ approaches_NNS to_TO solving_VBG problems_NNS in_IN these_DT domains_NNS rely_VBP on_IN optimization_NN techniques_NNS that_WDT map_VBP constraints_NNS into_IN multi-valued_JJ utility_NN functions_NNS ._.
Instead_RB of_IN finding_VBG an_DT assignment_NN that_IN satisfies_VBZ all_DT constraints_NNS ,_, these_DT approaches_NNS find_VBP an_DT assignment_NN that_WDT produces_VBZ a_DT high_JJ level_NN of_IN global_JJ utility_NN ._.
This_DT extension_NN to_TO the_DT original_JJ DisCSP_NN approach_NN has_VBZ become_VBN popular_JJ in_IN multi-agent_JJ systems_NNS ,_, and_CC has_VBZ been_VBN labeled_VBN the_DT Distributed_VBN Constraint_NN Optimization_NN Problem_NNP -LRB-_-LRB- DCOP_NNP -RRB-_-RRB- -LSB-_-LRB- #_# -RSB-_-RRB- ._.
Current_JJ algorithms_NNS that_WDT solve_VBP complete_JJ DCOPs_NNS use_VBP two_CD main_JJ approaches_NNS :_: search_NN and_CC dynamic_JJ programming_NN ._.
Search_VB based_VBN algorithms_NNS that_WDT originated_VBP from_IN DisCSP_NN typically_RB use_VBP some_DT form_NN of_IN backtracking_VBG -LSB-_-LRB- ##_CD -RSB-_-RRB- or_CC bounds_NNS propagation_NN ,_, as_IN in_IN ADOPT_NNP -LSB-_-LRB- #_# -RSB-_-RRB- ._.
Dynamic_NNP programming_NN based_VBN algorithms_NNS include_VBP DPOP_NN and_CC its_PRP$ extensions_NNS -LSB-_-LRB- #_# ,_, #_# ,_, #_# -RSB-_-RRB- ._.
To_TO date_NN ,_, both_CC categories_NNS of_IN algorithms_NNS arrange_VBP agents_NNS into_IN a_DT traditional_JJ pseudotree_NN to_TO solve_VB the_DT problem_NN ._.
It_PRP has_VBZ been_VBN shown_VBN in_IN -LSB-_-LRB- #_# -RSB-_-RRB- that_IN any_DT constraint_NN graph_NN can_MD be_VB mapped_VBN into_IN a_DT traditional_JJ pseudotree_NN ._.
However_RB ,_, it_PRP was_VBD also_RB shown_VBN that_IN finding_VBG the_DT optimal_JJ pseudotree_NN was_VBD NP-Hard_JJ ._.
We_PRP began_VBD to_TO investigate_VB the_DT performance_NN of_IN traditional_JJ pseudotrees_NNS generated_VBN by_IN current_JJ edge-traversal_JJ heuristics_NNS ._.
We_PRP found_VBD that_IN these_DT heuristics_NNS often_RB produced_VBD little_JJ parallelism_NN as_IN the_DT pseudotrees_NNS tended_VBD to_TO have_VB high_JJ depth_NN and_CC low_JJ branching_VBG factors_NNS ._.
We_PRP suspected_VBD that_IN there_EX could_MD be_VB other_JJ ways_NNS to_TO arrange_VB the_DT pseudotrees_NNS that_WDT would_MD provide_VB increased_VBN parallelism_NN and_CC smaller_JJR message_NN sizes_NNS ._.
After_IN exploring_VBG these_DT other_JJ arrangements_NNS we_PRP found_VBD that_IN cross-edged_JJ pseudotrees_NNS provide_VBP shorter_JJR depths_NNS and_CC higher_JJR branching_VBG factors_NNS than_IN the_DT traditional_JJ pseudotrees_NNS ._.
Our_PRP$ hypothesis_NN was_VBD that_IN these_DT crossedged_VBN pseudotrees_NNS would_MD outperform_VB traditional_JJ pseudotrees_NNS for_IN some_DT problem_NN types_NNS ._.
In_IN this_DT paper_NN we_PRP introduce_VBP an_DT extension_NN to_TO the_DT DPOP_NN algorithm_NN that_WDT handles_VBZ an_DT extended_JJ set_NN of_IN pseudotree_NN arrangements_NNS which_WDT include_VBP cross-edged_JJ pseudotrees_NNS ._.
We_PRP begin_VBP with_IN a_DT definition_NN of_IN 741_CD 978-81-904262-7-5_CD -LRB-_-LRB- RPS_NN -RRB-_-RRB- c_NN ####_CD IFAAMAS_NNP DCOP_NNP ,_, traditional_JJ pseudotrees_NNS ,_, and_CC cross-edged_JJ pseudotrees_NNS ._.
We_PRP then_RB provide_VBP a_DT summary_NN of_IN the_DT original_JJ DPOP_NN algorithm_NN and_CC introduce_VB our_PRP$ DCPOP_NNP algorithm_NN ._.
We_PRP discuss_VBP the_DT complexity_NN of_IN our_PRP$ algorithm_NN as_RB well_RB as_IN the_DT impact_NN of_IN pseudotree_NN generation_NN heuristics_NNS ._.
We_PRP then_RB show_VBP that_IN our_PRP$ Distributed_VBN Cross-edged_JJ Pseudotree_NNP Optimization_NNP Procedure_NNP -LRB-_-LRB- DCPOP_NNP -RRB-_-RRB- performs_VBZ significantly_RB better_RBR in_IN practice_NN than_IN the_DT original_JJ DPOP_NN algorithm_NN for_IN some_DT problem_NN instances_NNS ._.
We_PRP conclude_VBP with_IN a_DT selection_NN of_IN ideas_NNS for_IN future_JJ work_NN and_CC extensions_NNS for_IN DCPOP_NN ._.
2_LS ._.
PROBLEM_NN DEFINITION_NN DCOP_NN has_VBZ been_VBN formalized_VBN in_IN slightly_RB different_JJ ways_NNS in_IN recent_JJ literature_NN ,_, so_IN we_PRP will_MD adopt_VB the_DT definition_NN as_IN presented_VBN in_IN -LSB-_-LRB- #_# -RSB-_-RRB- ._.
A_DT Distributed_VBN Constraint_NN Optimization_NN Problem_NNP with_IN n_NN nodes_NNS and_CC m_NN constraints_NNS consists_VBZ of_IN the_DT tuple_NN where_WRB :_: X_NN =_JJ -LCB-_-LRB- x1_NN ,_, ._. ._.
,_, xn_NN -RCB-_-RRB- is_VBZ a_DT set_NN of_IN variables_NNS ,_, each_DT one_CD assigned_VBN to_TO a_DT unique_JJ agent_NN D_NN =_JJ -LCB-_-LRB- d1_NN ,_, ._. ._.
,_, dn_NN -RCB-_-RRB- is_VBZ a_DT set_NN of_IN finite_JJ domains_NNS for_IN each_DT variable_JJ U_NN =_JJ -LCB-_-LRB- u1_NN ,_, ._. ._.
,_, um_NN -RCB-_-RRB- is_VBZ a_DT set_NN of_IN utility_NN functions_NNS such_JJ that_IN each_DT function_NN involves_VBZ a_DT subset_NN of_IN variables_NNS in_IN X_NN and_CC defines_VBZ a_DT utility_NN for_IN each_DT combination_NN of_IN values_NNS among_IN these_DT variables_NNS An_DT optimal_JJ solution_NN to_TO a_DT DCOP_NN instance_NN consists_VBZ of_IN an_DT assignment_NN of_IN values_NNS in_IN D_NN to_TO X_NN such_JJ that_IN the_DT sum_NN of_IN utilities_NNS in_IN U_NNP is_VBZ maximal_JJ ._.
Problem_NNP domains_NNS that_WDT require_VBP minimum_JJ cost_NN instead_RB of_IN maximum_NN utility_NN can_MD map_VB costs_NNS into_IN negative_JJ utilities_NNS ._.
The_DT utility_NN functions_VBZ represent_VB soft_JJ constraints_NNS but_CC can_MD also_RB represent_VB hard_JJ constraints_NNS by_IN using_VBG arbitrarily_RB large_JJ negative_JJ values_NNS ._.
For_IN this_DT paper_NN we_PRP only_RB consider_VBP binary_JJ utility_NN functions_NNS involving_VBG two_CD variables_NNS ._.
Higher_JJR order_NN utility_NN functions_NNS can_MD be_VB modeled_VBN with_IN minor_JJ changes_NNS to_TO the_DT algorithm_NN ,_, but_CC they_PRP also_RB substantially_RB increase_VB the_DT complexity_NN ._.
2_LS ._.
#_# Traditional_JJ Pseudotrees_NNS Pseudotrees_NNS are_VBP a_DT common_JJ structure_NN used_VBN in_IN search_NN procedures_NNS to_TO allow_VB parallel_NN processing_NN of_IN independent_JJ branches_NNS ._.
As_IN defined_VBN in_IN -LSB-_-LRB- #_# -RSB-_-RRB- ,_, a_DT pseudotree_NN is_VBZ an_DT arrangement_NN of_IN a_DT graph_NN G_NN into_IN a_DT rooted_JJ tree_NN T_NN such_JJ that_IN vertices_NNS in_IN G_NN that_WDT share_VBP an_DT edge_NN are_VBP in_IN the_DT same_JJ branch_NN in_IN T_NN ._.
A_DT back-edge_NN is_VBZ an_DT edge_NN between_IN a_DT node_NN X_NN and_CC any_DT node_NN which_WDT lies_VBZ on_IN the_DT path_NN from_IN X_NN to_TO the_DT root_NN -LRB-_-LRB- excluding_VBG X_NN ''_'' s_NNS parent_NN -RRB-_-RRB- ._.
Figure_NNP #_# shows_VBZ a_DT pseudotree_NN with_IN four_CD nodes_NNS ,_, three_CD edges_NNS -LRB-_-LRB- A-B_NN ,_, B-C_NN ,_, BD_NN -RRB-_-RRB- ,_, and_CC one_CD back-edge_NN -LRB-_-LRB- A-C_NN -RRB-_-RRB- ._.
Also_RB defined_VBN in_IN -LSB-_-LRB- #_# -RSB-_-RRB- are_VBP four_CD types_NNS of_IN relationships_NNS between_IN nodes_NNS exist_VBP in_IN a_DT pseudotree_NN :_: P_NN -LRB-_-LRB- X_NN -RRB-_-RRB- -_: the_DT parent_NN of_IN a_DT node_NN X_NN :_: the_DT single_JJ node_NN higher_JJR in_IN the_DT pseudotree_NN that_WDT is_VBZ connected_VBN to_TO X_NN directly_RB through_IN a_DT tree_NN edge_NN C_NN -LRB-_-LRB- X_NN -RRB-_-RRB- -_: the_DT children_NNS of_IN a_DT node_NN X_NN :_: the_DT set_NN of_IN nodes_NNS lower_JJR in_IN the_DT pseudotree_NN that_WDT are_VBP connected_VBN to_TO X_NN directly_RB through_IN tree_NN edges_VBZ PP_NN -LRB-_-LRB- X_NN -RRB-_-RRB- -_: the_DT pseudo-parents_NNS of_IN a_DT node_NN X_NN :_: the_DT set_NN of_IN nodes_NNS higher_JJR in_IN the_DT pseudotree_NN that_WDT are_VBP connected_VBN to_TO X_NN directly_RB through_IN back-edges_NNS -LRB-_-LRB- In_IN Figure_NNP #_# ,_, A_NN =_JJ PP_NN -LRB-_-LRB- C_NN -RRB-_-RRB- -RRB-_-RRB- PC_NN -LRB-_-LRB- X_NN -RRB-_-RRB- -_: the_DT pseudo-children_NN of_IN a_DT node_NN X_NN :_: the_DT set_NN of_IN nodes_NNS lower_JJR in_IN the_DT pseudotree_NN that_WDT are_VBP connected_VBN to_TO X_NN directly_RB through_IN back-edges_NNS -LRB-_-LRB- In_IN Figure_NNP #_# ,_, C_NN =_JJ PC_NN -LRB-_-LRB- A_NN -RRB-_-RRB- -RRB-_-RRB- Figure_NNP #_# :_: A_DT traditional_JJ pseudotree_NN ._.
Solid_JJ line_NN edges_NNS represent_VBP parent-child_JJ relationships_NNS and_CC the_DT dashed_VBN line_NN represents_VBZ a_DT pseudo-parent-pseudo-child_JJ relationship_NN ._.
Figure_NNP #_# :_: A_DT cross-edged_JJ pseudotree_NN ._.
Solid_JJ line_NN edges_NNS represent_VBP parent-child_JJ relationships_NNS ,_, the_DT dashed_VBN line_NN represents_VBZ a_DT pseudoparent-pseudo-child_JJ relationship_NN ,_, and_CC the_DT dotted_VBN line_NN represents_VBZ a_DT branch-parent-branch-child_JJ relationship_NN ._.
The_DT bolded_VBN node_NN ,_, B_NN ,_, is_VBZ the_DT merge_VBP point_NN for_IN node_NN E_NN ._.
2_LS ._.
#_# Cross-edged_JJ Pseudotrees_NNPS We_PRP define_VBP a_DT cross-edge_NN as_IN an_DT edge_NN from_IN node_NN X_NN to_TO a_DT node_NN Y_NN that_WDT is_VBZ above_IN X_NN but_CC not_RB in_IN the_DT path_NN from_IN X_NN to_TO the_DT root_NN ._.
A_DT cross-edged_JJ pseudotree_NN is_VBZ a_DT traditional_JJ pseudotree_NN with_IN the_DT addition_NN of_IN cross-edges_NNS ._.
Figure_NNP #_# shows_VBZ a_DT cross-edged_JJ pseudotree_NN with_IN a_DT cross-edge_NN -LRB-_-LRB- D-E_NN -RRB-_-RRB- ._.
In_IN a_DT cross-edged_JJ pseudotree_NN we_PRP designate_VBP certain_JJ edges_NNS as_IN primary_JJ ._.
The_DT set_NN of_IN primary_JJ edges_NNS defines_VBZ a_DT spanning_VBG tree_NN of_IN the_DT nodes_NNS ._.
The_DT parent_NN ,_, child_NN ,_, pseudo-parent_NN ,_, and_CC pseudo-child_JJ relationships_NNS from_IN the_DT traditional_JJ pseudotree_NN are_VBP now_RB defined_VBN in_IN the_DT context_NN of_IN this_DT primary_JJ edge_NN spanning_VBG tree_NN ._.
This_DT definition_NN also_RB yields_VBZ two_CD additional_JJ types_NNS of_IN relationships_NNS that_WDT may_MD exist_VB between_IN nodes_NNS :_: BP_NN -LRB-_-LRB- X_NN -RRB-_-RRB- -_: the_DT branch-parents_NNS of_IN a_DT node_NN X_NN :_: the_DT set_NN of_IN nodes_NNS higher_JJR in_IN the_DT pseudotree_NN that_WDT are_VBP connected_VBN to_TO X_NN but_CC are_VBP not_RB in_IN the_DT primary_JJ path_NN from_IN X_NN to_TO the_DT root_NN -LRB-_-LRB- In_IN Figure_NNP #_# ,_, D_NN =_JJ BP_NN -LRB-_-LRB- E_NN -RRB-_-RRB- -RRB-_-RRB- BC_NN -LRB-_-LRB- X_NN -RRB-_-RRB- -_: the_DT branch-children_NN of_IN a_DT node_NN X_NN :_: the_DT set_NN of_IN nodes_NNS lower_JJR in_IN the_DT pseudotree_NN that_WDT are_VBP connected_VBN to_TO X_NN but_CC are_VBP not_RB in_IN any_DT primary_JJ path_NN from_IN X_NN to_TO any_DT leaf_NN node_NN -LRB-_-LRB- In_IN Figure_NNP #_# ,_, E_NN =_JJ BC_NN -LRB-_-LRB- D_NN -RRB-_-RRB- -RRB-_-RRB- 2_CD ._.
#_# Pseudotree_NNP Generation_NNP 742_CD The_DT Sixth_NNP Intl_NNP ._.
Joint_NNP Conf_NNP ._.
on_IN Autonomous_NNP Agents_NNPS and_CC Multi-Agent_NNP Systems_NNP -LRB-_-LRB- AAMAS_NNP ##_CD -RRB-_-RRB- Current_JJ algorithms_NNS usually_RB have_VBP a_DT pre-execution_JJ phase_NN to_TO generate_VB a_DT traditional_JJ pseudotree_NN from_IN a_DT general_JJ DCOP_NN instance_NN ._.
Our_PRP$ DCPOP_NN algorithm_NN generates_VBZ a_DT cross-edged_JJ pseudotree_NN in_IN the_DT same_JJ fashion_NN ._.
First_RB ,_, the_DT DCOP_NN instance_NN translates_VBZ directly_RB into_IN a_DT graph_NN with_IN X_NN as_IN the_DT set_NN of_IN vertices_NNS and_CC an_DT edge_NN for_IN each_DT pair_NN of_IN variables_NNS represented_VBN in_IN U_NNP ._.
Next_RB ,_, various_JJ heuristics_NNS are_VBP used_VBN to_TO arrange_VB this_DT graph_NN into_IN a_DT pseudotree_NN ._.
One_CD common_JJ heuristic_NN is_VBZ to_TO perform_VB a_DT guided_VBN depth-first_NN search_NN -LRB-_-LRB- DFS_NN -RRB-_-RRB- as_IN the_DT resulting_VBG traversal_NN is_VBZ a_DT pseudotree_NN ,_, and_CC a_DT DFS_NN can_MD easily_RB be_VB performed_VBN in_IN a_DT distributed_VBN fashion_NN ._.
We_PRP define_VBP an_DT edge-traversal_JJ based_VBN method_NN as_IN any_DT method_NN that_WDT produces_VBZ a_DT pseudotree_NN in_IN which_WDT all_DT parent_NN /_: child_NN pairs_NNS share_VBP an_DT edge_NN in_IN the_DT original_JJ graph_NN ._.
This_DT includes_VBZ DFS_NN ,_, breadth-first_JJ search_NN ,_, and_CC best-first_JJS search_NN based_VBN traversals_NNS ._.
Our_PRP$ heuristics_NNS that_WDT generate_VBP cross-edged_JJ pseudotrees_NNS use_VBP a_DT distributed_VBN best-first_JJS search_NN traversal_NN ._.
3_LS ._.
DPOP_NNP ALGORITHM_NNP The_NNP original_JJ DPOP_NN algorithm_NN operates_VBZ in_IN three_CD main_JJ phases_NNS ._.
The_DT first_JJ phase_NN generates_VBZ a_DT traditional_JJ pseudotree_NN from_IN the_DT DCOP_NN instance_NN using_VBG a_DT distributed_VBN algorithm_NN ._.
The_DT second_JJ phase_NN joins_VBZ utility_NN hypercubes_NNS from_IN children_NNS and_CC the_DT local_JJ node_NN and_CC propagates_VBZ them_PRP towards_IN the_DT root_NN ._.
The_DT third_JJ phase_NN chooses_VBZ an_DT assignment_NN for_IN each_DT domain_NN in_IN a_DT top_JJ down_IN fashion_NN beginning_NN with_IN the_DT agent_NN at_IN the_DT root_NN node_NN ._.
The_DT complexity_NN of_IN DPOP_NN depends_VBZ on_IN the_DT size_NN of_IN the_DT largest_JJS computation_NN and_CC utility_NN message_NN during_IN phase_NN two_CD ._.
It_PRP has_VBZ been_VBN shown_VBN that_IN this_DT size_NN directly_RB corresponds_VBZ to_TO the_DT induced_VBN width_NN of_IN the_DT pseudotree_NN generated_VBN in_IN phase_NN one_CD -LSB-_-LRB- #_# -RSB-_-RRB- ._.
DPOP_NN uses_VBZ polynomial_JJ time_NN heuristics_NNS to_TO generate_VB the_DT pseudotree_NN since_IN finding_VBG the_DT minimum_NN induced_VBD width_NN pseudotree_NN is_VBZ NP-hard_NN ._.
Several_JJ distributed_VBN edgetraversal_JJ heuristics_NNS have_VBP been_VBN developed_VBN to_TO find_VB low_JJ width_NN pseudotrees_NNS -LSB-_-LRB- #_# -RSB-_-RRB- ._.
At_IN the_DT end_NN of_IN the_DT first_JJ phase_NN ,_, each_DT agent_NN knows_VBZ its_PRP$ parent_NN ,_, children_NNS ,_, pseudo-parents_NNS ,_, and_CC pseudo-children_NN ._.
3_LS ._.
#_# Utility_NN Propagation_NN Agents_NNS located_JJ at_IN leaf_NN nodes_NNS in_IN the_DT pseudotree_NN begin_VB the_DT process_NN by_IN calculating_VBG a_DT local_JJ utility_NN hypercube_NN ._.
This_DT hypercube_NN at_IN node_NN X_NN contains_VBZ summed_VBN utilities_NNS for_IN each_DT combination_NN of_IN values_NNS in_IN the_DT domains_NNS for_IN P_NN -LRB-_-LRB- X_NN -RRB-_-RRB- and_CC PP_NN -LRB-_-LRB- X_NN -RRB-_-RRB- ._.
This_DT hypercube_NN has_VBZ dimensional_JJ size_NN equal_JJ to_TO the_DT number_NN of_IN pseudo-parents_NNS plus_CC one_CD ._.
A_DT message_NN containing_VBG this_DT hypercube_NN is_VBZ sent_VBN to_TO P_NN -LRB-_-LRB- X_NN -RRB-_-RRB- ._.
Agents_NNS located_JJ at_IN non-leaf_JJ nodes_NNS wait_VB for_IN all_DT messages_NNS from_IN children_NNS to_TO arrive_VB ._.
Once_RB the_DT agent_NN at_IN node_NN Y_NN has_VBZ all_DT utility_NN messages_NNS ,_, it_PRP calculates_VBZ its_PRP$ local_JJ utility_NN hypercube_NN which_WDT includes_VBZ domains_NNS for_IN P_NN -LRB-_-LRB- Y_NN -RRB-_-RRB- ,_, PP_NN -LRB-_-LRB- Y_NN -RRB-_-RRB- ,_, and_CC Y_NN ._.
The_DT local_JJ utility_NN hypercube_NN is_VBZ then_RB joined_VBN with_IN all_DT of_IN the_DT hypercubes_NNS from_IN the_DT child_NN messages_NNS ._.
At_IN this_DT point_NN all_DT utilities_NNS involving_VBG node_NN Y_NN are_VBP known_VBN ,_, and_CC the_DT domain_NN for_IN Y_NN may_MD be_VB safely_RB eliminated_VBN from_IN the_DT joined_VBN hypercube_NN ._.
This_DT elimination_NN process_NN chooses_VBZ the_DT best_JJS utility_NN over_IN the_DT domain_NN of_IN Y_NN for_IN each_DT combination_NN of_IN the_DT remaining_VBG domains_NNS ._.
A_DT message_NN containing_VBG this_DT hypercube_NN is_VBZ now_RB sent_VBN to_TO P_NN -LRB-_-LRB- Y_NN -RRB-_-RRB- ._.
The_DT dimensional_JJ size_NN of_IN this_DT hypercube_NN depends_VBZ on_IN the_DT number_NN of_IN overlapping_VBG domains_NNS in_IN received_VBN messages_NNS and_CC the_DT local_JJ utility_NN hypercube_NN ._.
This_DT dynamic_JJ programming_NN based_VBN propagation_NN phase_NN continues_VBZ until_IN the_DT agent_NN at_IN the_DT root_NN node_NN of_IN the_DT pseudotree_NN has_VBZ received_VBN all_DT messages_NNS from_IN its_PRP$ children_NNS ._.
3_LS ._.
#_# Value_NNP Propagation_NN Value_NN propagation_NN begins_VBZ when_WRB the_DT agent_NN at_IN the_DT root_NN node_NN Z_NN has_VBZ received_VBN all_DT messages_NNS from_IN its_PRP$ children_NNS ._.
Since_IN Z_NN has_VBZ no_DT parents_NNS or_CC pseudo-parents_NNS ,_, it_PRP simply_RB combines_VBZ the_DT utility_NN hypercubes_NNS received_VBN from_IN its_PRP$ children_NNS ._.
The_DT combined_JJ hypercube_NN contains_VBZ only_RB values_NNS for_IN the_DT domain_NN for_IN Z_NN ._.
At_IN this_DT point_NN the_DT agent_NN at_IN node_NN Z_NN simply_RB chooses_VBZ the_DT assignment_NN for_IN its_PRP$ domain_NN that_WDT has_VBZ the_DT best_JJS utility_NN ._.
A_DT value_NN propagation_NN message_NN with_IN this_DT assignment_NN is_VBZ sent_VBN to_TO each_DT node_NN in_IN C_NN -LRB-_-LRB- Z_NN -RRB-_-RRB- ._.
Each_DT other_JJ node_NN then_RB receives_VBZ a_DT value_NN propagation_NN message_NN from_IN its_PRP$ parent_NN and_CC chooses_VBZ the_DT assignment_NN for_IN its_PRP$ domain_NN that_WDT has_VBZ the_DT best_JJS utility_NN given_VBN the_DT assignments_NNS received_VBN in_IN the_DT message_NN ._.
The_DT node_NN adds_VBZ its_PRP$ domain_NN assignment_NN to_TO the_DT assignments_NNS it_PRP received_VBD and_CC passes_VBZ the_DT set_NN of_IN assignments_NNS to_TO its_PRP$ children_NNS ._.
The_DT algorithm_NN is_VBZ complete_JJ when_WRB all_DT nodes_NNS have_VBP chosen_VBN an_DT assignment_NN for_IN their_PRP$ domain_NN ._.
4_LS ._.
DCPOP_NNP ALGORITHM_NNP Our_PRP$ extension_NN to_TO the_DT original_JJ DPOP_NN algorithm_NN ,_, shown_VBN in_IN Algorithm_NNP #_# ,_, shares_NNS the_DT same_JJ three_CD phases_NNS ._.
The_DT first_JJ phase_NN generates_VBZ the_DT cross-edged_JJ pseudotree_NN for_IN the_DT DCOP_NN instance_NN ._.
The_DT second_JJ phase_NN merges_VBZ branches_NNS and_CC propagates_VBZ the_DT utility_NN hypercubes_NNS ._.
The_DT third_JJ phase_NN chooses_VBZ assignments_NNS for_IN domains_NNS at_IN branch_NN merge_VBP points_NNS and_CC in_IN a_DT top_JJ down_IN fashion_NN ,_, beginning_VBG with_IN the_DT agent_NN at_IN the_DT root_NN node_NN ._.
For_IN the_DT first_JJ phase_NN we_PRP generate_VBP a_DT pseudotree_NN using_VBG several_JJ distributed_VBN heuristics_NNS and_CC select_VB the_DT one_CD with_IN lowest_JJS overall_JJ complexity_NN ._.
The_DT complexity_NN of_IN the_DT computation_NN and_CC utility_NN message_NN size_NN in_IN DCPOP_NN does_VBZ not_RB directly_RB correspond_VBP to_TO the_DT induced_VBN width_NN of_IN the_DT cross-edged_JJ pseudotree_NN ._.
Instead_RB ,_, we_PRP use_VBP a_DT polynomial_JJ time_NN method_NN for_IN calculating_VBG the_DT maximum_NN computation_NN and_CC utility_NN message_NN size_NN for_IN a_DT given_VBN cross-edged_JJ pseudotree_NN ._.
A_DT description_NN of_IN this_DT method_NN and_CC the_DT pseudotree_NN selection_NN process_NN appears_VBZ in_IN Section_NN #_# ._.
At_IN the_DT end_NN of_IN the_DT first_JJ phase_NN ,_, each_DT agent_NN knows_VBZ its_PRP$ parent_NN ,_, children_NNS ,_, pseudo-parents_NNS ,_, pseudo-children_NN ,_, branch-parents_NNS ,_, and_CC branch-children_NN ._.
4_LS ._.
#_# Merging_VBG Branches_NNS and_CC Utility_NN Propagation_NN In_IN the_DT original_JJ DPOP_NN algorithm_NN a_DT node_NN X_NN only_RB had_VBD utility_NN functions_NNS involving_VBG its_PRP$ parent_NN and_CC its_PRP$ pseudo-parents_NNS ._.
In_IN DCPOP_NN ,_, a_DT node_NN X_NN is_VBZ allowed_VBN to_TO have_VB a_DT utility_NN function_NN involving_VBG a_DT branch-parent_JJ ._.
The_DT concept_NN of_IN a_DT branch_NN can_MD be_VB seen_VBN in_IN Figure_NNP #_# with_IN node_NN E_NN representing_VBG our_PRP$ node_NN X_NN ._.
The_DT two_CD distinct_JJ paths_NNS from_IN node_NN E_NN to_TO node_NN B_NN are_VBP called_VBN branches_NNS of_IN E_NN ._.
The_DT single_JJ node_NN where_WRB all_DT branches_NNS of_IN E_NN meet_VBP is_VBZ node_NN B_NN ,_, which_WDT is_VBZ called_VBN the_DT merge_VBP point_NN of_IN E_NN ._.
Agents_NNS with_IN nodes_NNS that_WDT have_VBP branch-parents_NNS begin_VB by_IN sending_VBG a_DT utility_NN propagation_NN message_NN to_TO each_DT branch-parent_NN ._.
This_DT message_NN includes_VBZ a_DT two_CD dimensional_JJ utility_NN hypercube_NN with_IN domains_NNS for_IN the_DT node_NN X_NN and_CC the_DT branch-parent_JJ BP_NN -LRB-_-LRB- X_NN -RRB-_-RRB- ._.
It_PRP also_RB includes_VBZ a_DT branch_NN information_NN structure_NN which_WDT contains_VBZ the_DT origination_NN node_NN of_IN the_DT branch_NN ,_, X_NN ,_, the_DT total_JJ number_NN of_IN branches_NNS originating_VBG from_IN X_NN ,_, and_CC the_DT number_NN of_IN branches_NNS originating_VBG from_IN X_NN that_WDT are_VBP merged_VBN into_IN a_DT single_JJ representation_NN by_IN this_DT branch_NN information_NN structure_NN -LRB-_-LRB- this_DT number_NN starts_VBZ at_IN #_# -RRB-_-RRB- ._.
Intuitively_RB when_WRB the_DT number_NN of_IN merged_JJ branches_NNS equals_VBZ the_DT total_JJ number_NN of_IN originating_VBG branches_NNS ,_, the_DT algorithm_NN has_VBZ reached_VBN the_DT merge_VBP point_NN for_IN X_NN ._.
In_IN Figure_NNP #_# ,_, node_NN E_NN sends_VBZ a_DT utility_NN propagation_NN message_NN to_TO its_PRP$ branch-parent_JJ ,_, node_NN D_NN ._.
This_DT message_NN has_VBZ dimensions_NNS for_IN the_DT domains_NNS of_IN E_NN and_CC D_NN ,_, and_CC includes_VBZ branch_NN information_NN with_IN an_DT origin_NN of_IN E_NN ,_, #_# total_JJ branches_NNS ,_, and_CC #_# merged_VBD branch_NN ._.
As_IN in_IN the_DT original_JJ DPOP_NN utility_NN propagation_NN phase_NN ,_, an_DT agent_NN at_IN leaf_NN node_NN X_NN sends_VBZ a_DT utility_NN propagation_NN message_NN to_TO its_PRP$ parent_NN ._.
In_IN DCPOP_NN this_DT message_NN contains_VBZ dimensions_NNS for_IN the_DT domains_NNS of_IN P_NN -LRB-_-LRB- X_NN -RRB-_-RRB- and_CC PP_NN -LRB-_-LRB- X_NN -RRB-_-RRB- ._.
If_IN node_NN X_NN also_RB has_VBZ branch-parents_NNS ,_, then_RB the_DT utility_NN propagation_NN message_NN also_RB contains_VBZ a_DT dimension_NN for_IN the_DT domain_NN of_IN X_NN ,_, and_CC will_MD include_VB a_DT branch_NN information_NN structure_NN ._.
In_IN Figure_NNP #_# ,_, node_NN E_NN sends_VBZ a_DT utility_NN propagation_NN message_NN to_TO its_PRP$ parent_NN ,_, node_NN C_NN ._.
This_DT message_NN has_VBZ dimensions_NNS for_IN the_DT domains_NNS of_IN E_NN and_CC C_NN ,_, and_CC includes_VBZ branch_NN information_NN with_IN an_DT origin_NN of_IN E_NN ,_, #_# total_JJ branches_NNS ,_, and_CC #_# merged_VBD branch_NN ._.
When_WRB a_DT node_NN Y_NN receives_VBZ utility_NN propagation_NN messages_NNS from_IN all_DT of_IN The_DT Sixth_NNP Intl_NNP ._.
Joint_NNP Conf_NNP ._.
on_IN Autonomous_NNP Agents_NNPS and_CC Multi-Agent_NNP Systems_NNP -LRB-_-LRB- AAMAS_NNP ##_CD -RRB-_-RRB- ###_CD its_PRP$ children_NNS and_CC branch-children_NNS ,_, it_PRP merges_VBZ any_DT branches_NNS with_IN the_DT same_JJ origination_NN node_NN X_NN ._.
The_DT merged_JJ branch_NN information_NN structure_NN accumulates_VBZ the_DT number_NN of_IN merged_JJ branches_NNS for_IN X_NN ._.
If_IN the_DT cumulative_JJ total_JJ number_NN of_IN merged_JJ branches_NNS equals_VBZ the_DT total_JJ number_NN of_IN branches_NNS ,_, then_RB Y_NN is_VBZ the_DT merge_VBP point_NN for_IN X_NN ._.
This_DT means_VBZ that_IN the_DT utility_NN hypercubes_NNS present_JJ at_IN Y_NN contain_VBP all_DT information_NN about_IN the_DT valuations_NNS for_IN utility_NN functions_NNS involving_VBG node_NN X_NN ._.
In_IN addition_NN to_TO the_DT typical_JJ elimination_NN of_IN the_DT domain_NN of_IN Y_NN from_IN the_DT utility_NN hypercubes_NNS ,_, we_PRP can_MD now_RB safely_RB eliminate_VB the_DT domain_NN of_IN X_NN from_IN the_DT utility_NN hypercubes_NNS ._.
To_TO illustrate_VB this_DT process_NN ,_, we_PRP will_MD examine_VB what_WP happens_VBZ in_IN the_DT second_JJ phase_NN for_IN node_NN B_NN in_IN Figure_NNP #_# ._.
In_IN the_DT second_JJ phase_NN Node_NN B_NN receives_VBZ two_CD utility_NN propagation_NN messages_NNS ._.
The_DT first_JJ comes_VBZ from_IN node_NN C_NN and_CC includes_VBZ dimensions_NNS for_IN domains_NNS E_NN ,_, B_NN ,_, and_CC A_NN ._.
It_PRP also_RB has_VBZ a_DT branch_NN information_NN structure_NN with_IN origin_NN of_IN E_NN ,_, #_# total_JJ branches_NNS ,_, and_CC #_# merged_VBD branch_NN ._.
The_DT second_JJ comes_VBZ from_IN node_NN D_NN and_CC includes_VBZ dimensions_NNS for_IN domains_NNS E_NN and_CC B_NN ._.
It_PRP also_RB has_VBZ a_DT branch_NN information_NN structure_NN with_IN origin_NN of_IN E_NN ,_, #_# total_JJ branches_NNS ,_, and_CC #_# merged_VBD branch_NN ._.
Node_NN B_NN then_RB merges_VBZ the_DT branch_NN information_NN structures_NNS from_IN both_DT messages_NNS because_IN they_PRP have_VBP the_DT same_JJ origination_NN ,_, node_NN E_NN ._.
Since_IN the_DT number_NN of_IN merged_JJ branches_NNS originating_VBG from_IN E_NN is_VBZ now_RB #_# and_CC the_DT total_JJ branches_NNS originating_VBG from_IN E_NN is_VBZ #_# ,_, node_NN B_NN now_RB eliminates_VBZ the_DT dimensions_NNS for_IN domain_NN E_NN ._.
Node_NN B_NN also_RB eliminates_VBZ the_DT dimension_NN for_IN its_PRP$ own_JJ domain_NN ,_, leaving_VBG only_RB information_NN about_IN domain_NN A_NN ._.
Node_NN B_NN then_RB sends_VBZ a_DT utility_NN propagation_NN message_NN to_TO node_NN A_NN ,_, containing_VBG only_RB one_CD dimension_NN for_IN the_DT domain_NN of_IN A_NN ._.
Although_IN not_RB possible_JJ in_IN DPOP_NN ,_, this_DT method_NN of_IN utility_NN propagation_NN and_CC dimension_NN elimination_NN may_MD produce_VB hypercubes_NNS at_IN node_NN Y_NN that_WDT do_VBP not_RB share_VB any_DT domains_NNS ._.
In_IN DCPOP_NN we_PRP do_VBP not_RB join_VB domain_NN independent_JJ hypercubes_NNS ,_, but_CC instead_RB may_MD send_VB multiple_JJ hypercubes_NNS in_IN the_DT utility_NN propagation_NN message_NN sent_VBN to_TO the_DT parent_NN of_IN Y_NN ._.
This_DT lazy_JJ approach_NN to_TO joins_VBZ helps_VBZ to_TO reduce_VB message_NN sizes_NNS ._.
4_LS ._.
#_# Value_NNP Propagation_NN As_IN in_IN DPOP_NN ,_, value_NN propagation_NN begins_VBZ when_WRB the_DT agent_NN at_IN the_DT root_NN node_NN Z_NN has_VBZ received_VBN all_DT messages_NNS from_IN its_PRP$ children_NNS ._.
At_IN this_DT point_NN the_DT agent_NN at_IN node_NN Z_NN chooses_VBZ the_DT assignment_NN for_IN its_PRP$ domain_NN that_WDT has_VBZ the_DT best_JJS utility_NN ._.
If_IN Z_NN is_VBZ the_DT merge_VBP point_NN for_IN the_DT branches_NNS of_IN some_DT node_NN X_NN ,_, Z_NN will_MD also_RB choose_VB the_DT assignment_NN for_IN the_DT domain_NN of_IN X_NN ._.
Thus_RB any_DT node_NN that_WDT is_VBZ a_DT merge_VBP point_NN will_MD choose_VB assignments_NNS for_IN a_DT domain_NN other_JJ than_IN its_PRP$ own_JJ ._.
These_DT assignments_NNS are_VBP then_RB passed_VBN down_RP the_DT primary_JJ edge_NN hierarchy_NN ._.
If_IN node_NN X_NN in_IN the_DT hierarchy_NN has_VBZ branch-parents_NNS ,_, then_RB the_DT value_NN assignment_NN message_NN from_IN P_NN -LRB-_-LRB- X_NN -RRB-_-RRB- will_MD contain_VB an_DT assignment_NN for_IN the_DT domain_NN of_IN X_NN ._.
Every_DT node_NN in_IN the_DT hierarchy_NN adds_VBZ any_DT assignments_NNS it_PRP has_VBZ chosen_VBN to_TO the_DT ones_NNS it_PRP received_VBD and_CC passes_VBZ the_DT set_NN of_IN assignments_NNS to_TO its_PRP$ children_NNS ._.
The_DT algorithm_NN is_VBZ complete_JJ when_WRB all_DT nodes_NNS have_VBP chosen_VBN or_CC received_VBN an_DT assignment_NN for_IN their_PRP$ domain_NN ._.
4_LS ._.
#_# Proof_NNP of_IN Correctness_NNPS We_PRP will_MD prove_VB the_DT correctness_NN of_IN DCPOP_NN by_IN first_JJ noting_VBG that_IN DCPOP_NN fully_RB extends_VBZ DPOP_NN and_CC then_RB examining_VBG the_DT two_CD cases_NNS for_IN value_NN assignment_NN in_IN DCPOP_NN ._.
Given_VBN a_DT traditional_JJ pseudotree_NN as_IN input_NN ,_, the_DT DCPOP_NNP algorithm_NN execution_NN is_VBZ identical_JJ to_TO DPOP_NN ._.
Using_VBG a_DT traditional_JJ pseudotree_NN arrangement_NN no_DT nodes_NNS have_VBP branch-parents_NNS or_CC branch-children_JJ since_IN all_DT edges_NNS are_VBP either_CC back-edges_NNS or_CC tree_NN edges_NNS ._.
Thus_RB the_DT DCPOP_NN algorithm_NN using_VBG a_DT traditional_JJ pseudotree_NN sends_VBZ only_RB utility_NN propagation_NN messages_NNS that_WDT contain_VBP domains_NNS belonging_VBG to_TO the_DT parent_NN or_CC pseudo-parents_NNS of_IN a_DT node_NN ._.
Since_IN no_DT node_NN has_VBZ any_DT branch-parents_NNS ,_, no_DT branches_NNS exist_VBP ,_, and_CC thus_RB no_DT node_NN serves_VBZ as_IN a_DT merge_VBP point_NN for_IN any_DT other_JJ node_NN ._.
Thus_RB all_DT value_NN propagation_NN assignments_NNS are_VBP chosen_VBN at_IN the_DT node_NN of_IN the_DT assignment_NN domain_NN ._.
For_IN DCPOP_JJ execution_NN with_IN cross-edged_JJ pseudotrees_NNS ,_, some_DT nodes_NNS serve_VBP as_IN merge_VBP points_NNS ._.
We_PRP note_VBP that_IN any_DT node_NN X_NN that_WDT is_VBZ not_RB a_DT merge_VBP point_NN assigns_VBZ its_PRP$ value_NN exactly_RB as_IN in_IN DPOP_NN ._.
The_DT local_JJ utility_NN hypercube_NN at_IN X_NN contains_VBZ domains_NNS for_IN X_NN ,_, P_NN -LRB-_-LRB- X_NN -RRB-_-RRB- ,_, PP_NN -LRB-_-LRB- X_NN -RRB-_-RRB- ,_, and_CC BC_NN -LRB-_-LRB- X_NN -RRB-_-RRB- ._.
As_IN in_IN DPOP_NNP the_DT value_NN assignment_NN message_NN received_VBD at_IN X_NN includes_VBZ the_DT values_NNS assigned_VBN to_TO P_NN -LRB-_-LRB- X_NN -RRB-_-RRB- and_CC PP_NN -LRB-_-LRB- X_NN -RRB-_-RRB- ._.
Also_RB ,_, since_IN X_NN is_VBZ not_RB a_DT merge_VBP point_NN ,_, all_DT assignments_NNS to_TO BC_NNP -LRB-_-LRB- X_NNP -RRB-_-RRB- must_MD have_VB been_VBN calculated_VBN at_IN merge_VBP points_NNS higher_JJR in_IN the_DT tree_NN and_CC are_VBP in_IN the_DT value_NN assignment_NN message_NN from_IN P_NN -LRB-_-LRB- X_NN -RRB-_-RRB- ._.
Thus_RB after_IN eliminating_VBG domains_NNS for_IN which_WDT assignments_NNS are_VBP known_VBN ,_, only_RB the_DT domain_NN of_IN X_NN is_VBZ left_VBN ._.
The_DT agent_NN at_IN node_NN X_NN can_MD now_RB correctly_RB choose_VB the_DT assignment_NN with_IN maximum_JJ utility_NN for_IN its_PRP$ own_JJ domain_NN ._.
If_IN node_NN X_NN is_VBZ a_DT merge_VBP point_NN for_IN some_DT branch-child_JJ Y_NN ,_, we_PRP know_VBP that_IN X_NN must_MD be_VB a_DT node_NN along_IN the_DT path_NN from_IN Y_NN to_TO the_DT root_NN ,_, and_CC from_IN P_NN -LRB-_-LRB- Y_NN -RRB-_-RRB- and_CC all_DT BP_NN -LRB-_-LRB- Y_NN -RRB-_-RRB- to_TO the_DT root_NN ._.
From_IN the_DT algorithm_NN ,_, we_PRP know_VBP that_IN Y_NN necessarily_RB has_VBZ all_DT information_NN from_IN C_NN -LRB-_-LRB- Y_NN -RRB-_-RRB- ,_, PC_NN -LRB-_-LRB- Y_NN -RRB-_-RRB- ,_, and_CC BC_NN -LRB-_-LRB- Y_NN -RRB-_-RRB- since_IN it_PRP waits_VBZ for_IN their_PRP$ messages_NNS ._.
Node_NN X_NN has_VBZ information_NN about_IN all_DT nodes_NNS below_IN it_PRP in_IN the_DT tree_NN ,_, which_WDT would_MD include_VB Y_NN ,_, P_NN -LRB-_-LRB- Y_NN -RRB-_-RRB- ,_, BP_NN -LRB-_-LRB- Y_NN -RRB-_-RRB- ,_, and_CC those_DT PP_NN -LRB-_-LRB- Y_NN -RRB-_-RRB- that_WDT are_VBP below_IN X_NN in_IN the_DT tree_NN ._.
For_IN any_DT PP_NN -LRB-_-LRB- Y_NN -RRB-_-RRB- above_IN X_NN in_IN the_DT tree_NN ,_, X_NN receives_VBZ the_DT assignment_NN for_IN the_DT domain_NN of_IN PP_NN -LRB-_-LRB- Y_NN -RRB-_-RRB- in_IN the_DT value_NN assignment_NN message_NN from_IN P_NN -LRB-_-LRB- X_NN -RRB-_-RRB- ._.
Thus_RB X_NN has_VBZ utility_NN information_NN about_IN all_DT of_IN the_DT utility_NN functions_NNS of_IN which_WDT Y_NN is_VBZ a_DT part_NN ._.
By_IN eliminating_VBG domains_NNS included_VBN in_IN the_DT value_NN assignment_NN message_NN ,_, node_NN X_NN is_VBZ left_VBN with_IN a_DT local_JJ utility_NN hypercube_NN with_IN domains_NNS for_IN X_NN and_CC Y_NN ._.
The_DT agent_NN at_IN node_NN X_NN can_MD now_RB correctly_RB choose_VB the_DT assignments_NNS with_IN maximum_JJ utility_NN for_IN the_DT domains_NNS of_IN X_NN and_CC Y_NN ._.
4_LS ._.
#_# Complexity_NNP Analysis_NN The_DT first_JJ phase_NN of_IN DCPOP_NN sends_VBZ one_CD message_NN to_TO each_DT P_NN -LRB-_-LRB- X_NN -RRB-_-RRB- ,_, PP_NN -LRB-_-LRB- X_NN -RRB-_-RRB- ,_, and_CC BP_NN -LRB-_-LRB- X_NN -RRB-_-RRB- ._.
The_DT second_JJ phase_NN sends_VBZ one_CD value_NN assignment_NN message_NN to_TO each_DT C_NN -LRB-_-LRB- X_NN -RRB-_-RRB- ._.
Thus_RB ,_, DCPOP_NN produces_VBZ a_DT linear_JJ number_NN of_IN messages_NNS with_IN respect_NN to_TO the_DT number_NN of_IN edges_NNS -LRB-_-LRB- utility_NN functions_NNS -RRB-_-RRB- in_IN the_DT cross-edged_JJ pseudotree_NN and_CC the_DT original_JJ DCOP_NN instance_NN ._.
The_DT actual_JJ complexity_NN of_IN DCPOP_NN depends_VBZ on_IN two_CD additional_JJ measurements_NNS :_: message_NN size_NN and_CC computation_NN size_NN ._.
Message_NN size_NN and_CC computation_NN size_NN in_IN DCPOP_NN depend_VBP on_IN the_DT number_NN of_IN overlapping_VBG branches_NNS as_RB well_RB as_IN the_DT number_NN of_IN overlapping_VBG back-edges_NNS ._.
It_PRP was_VBD shown_VBN in_IN -LSB-_-LRB- #_# -RSB-_-RRB- that_IN the_DT number_NN of_IN overlapping_VBG back-edges_NNS is_VBZ equal_JJ to_TO the_DT induced_VBN width_NN of_IN the_DT pseudotree_NN ._.
In_IN a_DT poorly_RB constructed_VBN cross-edged_JJ pseudotree_NN ,_, the_DT number_NN of_IN overlapping_VBG branches_NNS at_IN node_NN X_NN can_MD be_VB as_RB large_JJ as_IN the_DT total_JJ number_NN of_IN descendants_NNS of_IN X_NN ._.
Thus_RB ,_, the_DT total_JJ message_NN size_NN in_IN DCPOP_NN in_IN a_DT poorly_RB constructed_VBN instance_NN can_MD be_VB space-exponential_JJ in_IN the_DT total_JJ number_NN of_IN nodes_NNS in_IN the_DT graph_NN ._.
However_RB ,_, in_IN practice_NN a_DT well_RB constructed_VBN cross-edged_JJ pseudotree_NN can_MD achieve_VB much_RB better_JJR results_NNS ._.
Later_RB we_PRP address_VBP the_DT issue_NN of_IN choosing_VBG well_RB constructed_VBN crossedged_VBN pseudotrees_NNS from_IN a_DT set_NN ._.
We_PRP introduce_VBP an_DT additional_JJ measurement_NN of_IN the_DT maximum_NN sequential_JJ path_NN cost_NN through_IN the_DT algorithm_NN ._.
This_DT measurement_NN directly_RB relates_VBZ to_TO the_DT maximum_NN amount_NN of_IN parallelism_NN achievable_JJ by_IN the_DT algorithm_NN ._.
To_TO take_VB this_DT measurement_NN we_PRP first_RB store_VBP the_DT total_JJ computation_NN size_NN for_IN each_DT node_NN during_IN phase_NN two_CD and_CC three_CD ._.
This_DT computation_NN size_NN represents_VBZ the_DT number_NN of_IN individual_JJ accesses_NNS to_TO a_DT value_NN in_IN a_DT hypercube_NN at_IN each_DT node_NN ._.
For_IN example_NN ,_, a_DT join_VB between_IN two_CD domains_NNS of_IN size_NN #_# costs_NNS #_# #_# =_SYM ##_CD ._.
Two_CD directed_VBN acyclic_JJ graphs_NNS -LRB-_-LRB- DAG_NN -RRB-_-RRB- can_MD then_RB be_VB drawn_VBN ;_: one_CD with_IN the_DT utility_NN propagation_NN messages_NNS as_IN edges_NNS and_CC the_DT phase_NN two_CD costs_NNS at_IN nodes_NNS ,_, and_CC the_DT other_JJ with_IN value_NN assignment_NN messages_NNS and_CC the_DT phase_NN three_CD costs_NNS at_IN nodes_NNS ._.
The_DT maximum_NN sequential_JJ path_NN cost_NN is_VBZ equal_JJ to_TO the_DT sum_NN of_IN the_DT longest_JJS path_NN on_IN each_DT DAG_NN from_IN the_DT root_NN to_TO any_DT leaf_NN node_NN ._.
5_CD ._.
HEURISTICS_NN In_IN our_PRP$ assessment_NN of_IN complexity_NN in_IN DCPOP_NN we_PRP focused_VBD on_IN the_DT worst_JJS case_NN possibly_RB produced_VBN by_IN the_DT algorithm_NN ._.
We_PRP acknowledge_VBP 744_CD The_DT Sixth_NNP Intl_NNP ._.
Joint_NNP Conf_NNP ._.
on_IN Autonomous_NNP Agents_NNPS and_CC Multi-Agent_NNP Systems_NNP -LRB-_-LRB- AAMAS_NNP ##_CD -RRB-_-RRB- Algorithm_NNP #_# DCPOP_NNP Algorithm_NNP 1_CD :_: DCPOP_NN -LRB-_-LRB- X_NN ;_: D_NN ;_: U_NNP -RRB-_-RRB- Each_DT agent_NN Xi_NN executes_VBZ :_: Phase_NN #_# :_: pseudotree_NN creation_NN 2_CD :_: elect_VB leader_NN from_IN all_DT Xj_NN X_NN 3_CD :_: elected_VBN leader_NN initiates_VBZ pseudotree_NN creation_NN 4_CD :_: afterwards_RB ,_, Xi_NN knows_VBZ P_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- ,_, PP_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- ,_, BP_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- ,_, C_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- ,_, BC_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- and_CC PC_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- Phase_NN #_# :_: UTIL_NN message_NN propagation_NN 5_CD :_: if_IN |_CD BP_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- |_CD >_JJR #_# then_RB 6_CD :_: BRANCHXi_NNS |_VBP BP_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- |_NN +_CC #_# 7_CD :_: for_IN all_DT Xk_NN BP_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- do_VBP 8_CD :_: UTILXi_NNS -LRB-_-LRB- Xk_NN -RRB-_-RRB- Compute_NN utils_NNS -LRB-_-LRB- Xi_NN ,_, Xk_NN -RRB-_-RRB- 9_CD :_: Send_VB message_NN -LRB-_-LRB- Xk_NN ,_, UTILXi_NN -LRB-_-LRB- Xk_NN -RRB-_-RRB- ,_, BRANCHXi_NN -RRB-_-RRB- 10_CD :_: if_IN |_NN C_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- |_NN =_JJ #_# -LRB-_-LRB- i_FW ._.
e_LS ._.
Xi_NN is_VBZ a_DT leaf_NN node_NN -RRB-_-RRB- then_RB 11_CD :_: UTILXi_NNS -LRB-_-LRB- P_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- -RRB-_-RRB- Compute_NNP utils_NNS -LRB-_-LRB- P_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- ,_, PP_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- -RRB-_-RRB- for_IN all_DT PP_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- 12_CD :_: Send_VB message_NN -LRB-_-LRB- P_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- ,_, UTILXi_NN -LRB-_-LRB- P_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- -RRB-_-RRB- ,_, BRANCHXi_NN -RRB-_-RRB- 13_CD :_: Send_VB message_NN -LRB-_-LRB- PP_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- ,_, empty_JJ UTIL_NNP ,_, empty_JJ BRANCH_NN -RRB-_-RRB- to_TO all_DT PP_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- 14_CD :_: activate_VB UTIL_NNP Message_NN handler_NN -LRB-_-LRB- -RRB-_-RRB- Phase_NN #_# :_: VALUE_NN message_NN propagation_NN 15_CD :_: activate_VB VALUE_NNP Message_NN handler_NN -LRB-_-LRB- -RRB-_-RRB- END_NNP ALGORITHM_NNP UTIL_NNP Message_NN handler_NN -LRB-_-LRB- Xk_NN ,_, UTILXk_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- ,_, BRANCHXk_NN -RRB-_-RRB- 16_CD :_: store_NN UTILXk_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- ,_, BRANCHXk_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- 17_CD :_: if_IN UTIL_NN messages_NNS from_IN all_DT children_NNS and_CC branch_NN children_NNS arrived_VBD then_RB 18_CD :_: for_IN all_DT Bj_NNP BRANCH_NNP -LRB-_-LRB- Xi_NN -RRB-_-RRB- do_VBP 19_CD :_: if_IN Bj_NNP is_VBZ merged_VBN then_RB 20_CD :_: join_VB all_DT hypercubes_NNS where_WRB Bj_NNP UTIL_NNP -LRB-_-LRB- Xi_NN -RRB-_-RRB- 21_CD :_: eliminate_VB Bj_NNP from_IN the_DT joined_VBN hypercube_NN 22_CD :_: if_IN P_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- =_JJ =_JJ null_NN -LRB-_-LRB- that_WDT means_VBZ Xi_NN is_VBZ the_DT root_NN -RRB-_-RRB- then_RB 23_CD :_: v_LS i_FW Choose_VB optimal_JJ -LRB-_-LRB- null_JJ -RRB-_-RRB- 24_CD :_: Send_VB VALUE_NN -LRB-_-LRB- Xi_NN ,_, v_LS i_LS -RRB-_-RRB- to_TO all_DT C_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- 25_CD :_: else_RB 26_CD :_: UTILXi_NNS -LRB-_-LRB- P_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- -RRB-_-RRB- Compute_NNP utils_NNS -LRB-_-LRB- P_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- ,_, PP_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- -RRB-_-RRB- 27_CD :_: Send_VB message_NN -LRB-_-LRB- P_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- ,_, UTILXi_NN -LRB-_-LRB- P_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- -RRB-_-RRB- ,_, BRANCHXi_NN -LRB-_-LRB- P_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- -RRB-_-RRB- -RRB-_-RRB- VALUE_NNP Message_NN handler_NN -LRB-_-LRB- VALUEXi_NNP ,_, P_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- -RRB-_-RRB- 28_CD :_: add_VB all_DT Xk_NN v_LS k_NN VALUEXi_NNS ,_, P_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- to_TO agent_NN view_NN 29_CD :_: Xi_NN v_LS i_FW =_JJ Choose_VB optimal_JJ -LRB-_-LRB- agent_NN view_NN -RRB-_-RRB- 30_CD :_: Send_VB VALUEXl_NN ,_, Xi_NN to_TO all_DT Xl_NN C_NN -LRB-_-LRB- Xi_NN -RRB-_-RRB- that_WDT in_IN real_JJ world_NN problems_NNS the_DT generation_NN of_IN the_DT pseudotree_NN has_VBZ a_DT significant_JJ impact_NN on_IN the_DT actual_JJ performance_NN ._.
The_DT problem_NN of_IN finding_VBG the_DT best_JJS pseudotree_NN for_IN a_DT given_VBN DCOP_NN instance_NN is_VBZ NP-Hard_NN ._.
Thus_RB a_DT heuristic_NN is_VBZ used_VBN for_IN generation_NN ,_, and_CC the_DT performance_NN of_IN the_DT algorithm_NN depends_VBZ on_IN the_DT pseudotree_NN found_VBN by_IN the_DT heuristic_NN ._.
Some_DT previous_JJ research_NN focused_VBD on_IN finding_VBG heuristics_NNS to_TO generate_VB good_JJ pseudotrees_NNS -LSB-_-LRB- #_# -RSB-_-RRB- ._.
While_IN we_PRP have_VBP developed_VBN some_DT heuristics_NNS that_WDT generate_VBP good_JJ cross-edged_JJ pseudotrees_NNS for_IN use_NN with_IN DCPOP_NN ,_, our_PRP$ focus_NN has_VBZ been_VBN to_TO use_VB multiple_JJ heuristics_NNS and_CC then_RB select_VB the_DT best_JJS pseudotree_NN from_IN the_DT generated_VBN pseudotrees_NNS ._.
We_PRP consider_VBP only_RB heuristics_NNS that_WDT run_VBP in_IN polynomial_JJ time_NN with_IN respect_NN to_TO the_DT number_NN of_IN nodes_NNS in_IN the_DT original_JJ DCOP_NN instance_NN ._.
The_DT actual_JJ DCPOP_NN algorithm_NN has_VBZ worst_JJS case_NN exponential_JJ complexity_NN ,_, but_CC we_PRP can_MD calculate_VB the_DT maximum_NN message_NN size_NN ,_, computation_NN size_NN ,_, and_CC sequential_JJ path_NN cost_NN for_IN a_DT given_VBN cross-edged_JJ pseudotree_NN in_IN linear_JJ space-time_NN complexity_NN ._.
To_TO do_VB this_DT ,_, we_PRP simply_RB run_VB the_DT algorithm_NN without_IN attempting_VBG to_TO calculate_VB any_DT of_IN the_DT local_JJ utility_NN hypercubes_NNS or_CC optimal_JJ value_NN assignments_NNS ._.
Instead_RB ,_, messages_NNS include_VBP dimensional_JJ and_CC branch_NN information_NN but_CC no_DT utility_NN hypercubes_NNS ._.
After_IN each_DT heuristic_NN completes_VBZ its_PRP$ generation_NN of_IN a_DT pseudotree_NN ,_, we_PRP execute_VBP the_DT measurement_NN procedure_NN and_CC propagate_VB the_DT measurement_NN information_NN up_IN to_TO the_DT chosen_VBN root_NN in_IN that_DT pseudotree_NN ._.
The_DT root_NN then_RB broadcasts_VBZ the_DT total_JJ complexity_NN for_IN that_DT heuristic_NN to_TO all_DT nodes_NNS ._.
After_IN all_DT heuristics_NNS have_VBP had_VBN a_DT chance_NN to_TO complete_VB ,_, every_DT node_NN knows_VBZ which_WDT heuristic_NN produced_VBD the_DT best_JJS pseudotree_NN ._.
Each_DT node_NN then_RB proceeds_VBZ to_TO begin_VB the_DT DCPOP_NN algorithm_NN using_VBG its_PRP$ knowledge_NN of_IN the_DT pseudotree_NN generated_VBN by_IN the_DT best_JJS heuristic_NN ._.
The_DT heuristics_NNS used_VBN to_TO generate_VB traditional_JJ pseudotrees_NNS perform_VBP a_DT distributed_VBN DFS_NN traversal_NN ._.
The_DT general_JJ distributed_VBN algorithm_NN uses_VBZ a_DT token_JJ passing_VBG mechanism_NN and_CC a_DT linear_JJ number_NN of_IN messages_NNS ._.
Improved_VBN DFS_NN based_VBN heuristics_NNS use_VBP a_DT special_JJ procedure_NN to_TO choose_VB the_DT root_NN node_NN ,_, and_CC also_RB provide_VBP an_DT ordering_VBG function_NN over_IN the_DT neighbors_NNS of_IN a_DT node_NN to_TO determine_VB the_DT order_NN of_IN path_NN recursion_NN ._.
The_DT DFS_NN based_VBN heuristics_NNS used_VBN in_IN our_PRP$ experiments_NNS come_VBP from_IN the_DT work_NN done_VBN in_IN -LSB-_-LRB- #_# ,_, 8_CD -RSB-_-RRB- ._.
5_CD ._.
#_# The_DT best-first_JJ cross-edged_JJ pseudotree_NN heuristic_NN The_DT heuristics_NNS used_VBN to_TO generate_VB cross-edged_JJ pseudotrees_NNS perform_VBP a_DT best-first_JJ traversal_NN ._.
A_DT general_JJ distributed_VBN best-first_JJ algorithm_NN for_IN node_NN expansion_NN is_VBZ presented_VBN in_IN Algorithm_NNP #_# ._.
An_DT evaluation_NN function_NN at_IN each_DT node_NN provides_VBZ the_DT values_NNS that_WDT are_VBP used_VBN to_TO determine_VB the_DT next_JJ best_JJS node_NN to_TO expand_VB ._.
Note_VB that_IN in_IN this_DT algorithm_NN each_DT node_NN only_RB exchanges_NNS its_PRP$ best_JJS value_NN with_IN its_PRP$ neighbors_NNS ._.
In_IN our_PRP$ experiments_NNS we_PRP used_VBD several_JJ evaluation_NN functions_NNS that_WDT took_VBD as_RB arguments_NNS an_DT ordered_VBN list_NN of_IN ancestors_NNS and_CC a_DT node_NN ,_, which_WDT contains_VBZ a_DT list_NN of_IN neighbors_NNS -LRB-_-LRB- with_IN each_DT neighbor_NN ''_'' s_NNS placement_NN depth_NN in_IN the_DT tree_NN if_IN it_PRP was_VBD placed_VBN -RRB-_-RRB- ._.
From_IN these_DT we_PRP can_MD calculate_VB branchparents_NNS ,_, branch-children_NN ,_, and_CC unknown_JJ relationships_NNS for_IN a_DT potential_JJ node_NN placement_NN ._.
The_DT best_JJS overall_JJ function_NN calculated_VBN the_DT value_NN as_IN ancestors_NNS -LRB-_-LRB- branchparents_NNS +_CC branchchildren_NNS -RRB-_-RRB- with_IN the_DT number_NN of_IN unknown_JJ relationships_NNS being_VBG a_DT tiebreak_NN ._.
After_IN completion_NN each_DT node_NN has_VBZ knowledge_NN of_IN its_PRP$ parent_NN and_CC ancestors_NNS ,_, so_IN it_PRP can_MD easily_RB determine_VB which_WDT connected_JJ nodes_NNS are_VBP pseudo-parents_NNS ,_, branchparents_NNS ,_, pseudo-children_NN ,_, and_CC branch-children_NN ._.
The_DT complexity_NN of_IN the_DT best-first_JJ traversal_NN depends_VBZ on_IN the_DT complexity_NN of_IN the_DT evaluation_NN function_NN ._.
Assuming_VBG a_DT complexity_NN of_IN O_NN -LRB-_-LRB- V_NN -RRB-_-RRB- for_IN the_DT evaluation_NN function_NN ,_, which_WDT is_VBZ the_DT case_NN for_IN our_PRP$ best_JJS overall_JJ function_NN ,_, the_DT best-first_JJ traversal_NN is_VBZ O_NN -LRB-_-LRB- V_NN E_NN -RRB-_-RRB- which_WDT is_VBZ at_IN worst_JJS O_NN -LRB-_-LRB- n3_NN -RRB-_-RRB- ._.
For_IN each_DT v_LS V_NN we_PRP perform_VBP a_DT place_NN operation_NN ,_, and_CC find_VB the_DT next_JJ node_NN to_TO place_NN using_VBG the_DT getBestNeighbor_NN operation_NN ._.
The_DT place_NN operation_NN is_VBZ at_IN most_JJS O_NN -LRB-_-LRB- V_NN -RRB-_-RRB- because_IN of_IN the_DT sent_VBN messages_NNS ._.
Finding_VBG the_DT next_JJ node_NN uses_VBZ recursion_NN and_CC traverses_VBZ only_RB already_RB placed_VBN The_DT Sixth_NNP Intl_NNP ._.
Joint_NNP Conf_NNP ._.
on_IN Autonomous_NNP Agents_NNPS and_CC Multi-Agent_NNP Systems_NNP -LRB-_-LRB- AAMAS_NNP ##_CD -RRB-_-RRB- ###_CD Algorithm_NNP #_# Distributed_VBN Best-First_NNP Search_VB Algorithm_NN root_NN electedleader_NN next_JJ -LRB-_-LRB- root_NN ,_, -RRB-_-RRB- place_NN -LRB-_-LRB- node_NN ,_, parent_NN -RRB-_-RRB- node_NN ._.
parent_NN parent_NN node_NN ._.
ancestors_NNS parent_NN ._.
ancestors_NNS parent_NN send_VBP placement_NN message_NN -LRB-_-LRB- node_NN ,_, node_NN ._.
ancestors_NNS -RRB-_-RRB- to_TO all_DT neighbors_NNS of_IN node_NN next_JJ -LRB-_-LRB- current_JJ ,_, previous_JJ -RRB-_-RRB- if_IN current_JJ is_VBZ not_RB placed_VBN then_RB place_NN -LRB-_-LRB- current_JJ ,_, previous_JJ -RRB-_-RRB- next_JJ -LRB-_-LRB- current_JJ ,_, -RRB-_-RRB- else_RB best_JJS getBestNeighbor_NN -LRB-_-LRB- current_JJ ,_, previous_JJ -RRB-_-RRB- if_IN best_JJS =_JJ then_RB if_IN previous_JJ =_JJ then_RB terminate_VB ,_, all_DT nodes_NNS are_VBP placed_VBN next_JJ -LRB-_-LRB- previous_JJ ,_, -RRB-_-RRB- else_RB next_JJ -LRB-_-LRB- best_RB ,_, current_JJ -RRB-_-RRB- getBestNeighbor_NN -LRB-_-LRB- current_JJ ,_, previous_JJ -RRB-_-RRB- best_JJS ;_: score_NN #_# for_IN all_DT n_NN current_JJ ._.
neighbors_NNS do_VBP if_IN n_NN !_.
=_JJ previous_JJ then_RB if_IN n_NN is_VBZ placed_VBN then_RB nscore_VBP getBestNeighbor_NN -LRB-_-LRB- n_NN ,_, current_JJ -RRB-_-RRB- else_RB nscore_RB evaluate_VB -LRB-_-LRB- current_JJ ,_, n_NN -RRB-_-RRB- if_IN nscore_NN >_JJR score_NN then_RB score_VBP nscore_NN best_JJS n_NN return_NN best_RB ,_, score_NN nodes_NNS ,_, so_IN it_PRP has_VBZ O_NN -LRB-_-LRB- V_NN -RRB-_-RRB- recursions_NNS ._.
Each_DT recursion_NN performs_VBZ a_DT recursive_JJ getBestNeighbor_NN operation_NN that_WDT traverses_VBZ all_DT placed_VBN nodes_NNS and_CC their_PRP$ neighbors_NNS ._.
This_DT operation_NN is_VBZ O_NN -LRB-_-LRB- V_NN E_NN -RRB-_-RRB- ,_, but_CC results_VBZ can_MD be_VB cached_VBN using_VBG only_RB O_NN -LRB-_-LRB- V_NN -RRB-_-RRB- space_NN at_IN each_DT node_NN ._.
Thus_RB we_PRP have_VBP O_NN -LRB-_-LRB- V_NN -LRB-_-LRB- V_NN +_CC V_NN +_CC V_NN E_NN -RRB-_-RRB- -RRB-_-RRB- =_JJ O_NN -LRB-_-LRB- V_NN #_# E_NN -RRB-_-RRB- ._.
If_IN we_PRP are_VBP smart_JJ about_IN evaluating_VBG local_JJ changes_NNS when_WRB each_DT node_NN receives_VBZ placement_NN messages_NNS from_IN its_PRP$ neighbors_NNS and_CC cache_NN the_DT results_NNS the_DT getBestNeighbor_NN operation_NN is_VBZ only_RB O_NN -LRB-_-LRB- E_NN -RRB-_-RRB- ._.
This_DT increases_VBZ the_DT complexity_NN of_IN the_DT place_NN operation_NN ,_, but_CC for_IN all_DT placements_NNS the_DT total_JJ complexity_NN is_VBZ only_RB O_NN -LRB-_-LRB- V_NN E_NN -RRB-_-RRB- ._.
Thus_RB we_PRP have_VBP an_DT overall_JJ complexity_NN of_IN O_NN -LRB-_-LRB- V_NN E_NN +_CC V_NN -LRB-_-LRB- V_NN +_CC E_NN -RRB-_-RRB- -RRB-_-RRB- =_JJ O_NN -LRB-_-LRB- V_NN E_NN -RRB-_-RRB- ._.
6_CD ._.
COMPARISON_NNP OF_IN COMPLEXITY_NNP IN_IN DPOP_NNP AND_CC DCPOP_NNP We_PRP have_VBP already_RB shown_VBN that_IN given_VBN the_DT same_JJ input_NN ,_, DCPOP_NN performs_VBZ the_DT same_JJ as_IN DPOP_NN ._.
We_PRP also_RB have_VBP shown_VBN that_IN we_PRP can_MD accurately_RB predict_VB performance_NN of_IN a_DT given_VBN pseudotree_NN in_IN linear_JJ spacetime_NN complexity_NN ._.
If_IN we_PRP use_VBP a_DT constant_JJ number_NN of_IN heuristics_NNS to_TO generate_VB the_DT set_NN of_IN pseudotrees_NNS ,_, we_PRP can_MD choose_VB the_DT best_JJS pseudotree_NN in_IN linear_JJ space-time_NN complexity_NN ._.
We_PRP will_MD now_RB show_VB that_IN there_EX exists_VBZ a_DT DCOP_NN instance_NN for_IN which_WDT a_DT cross-edged_JJ pseudotree_NN outperforms_VBZ all_DT possible_JJ traditional_JJ pseudotrees_NNS -LRB-_-LRB- based_VBN on_IN edge-traversal_JJ heuristics_NNS -RRB-_-RRB- ._.
In_IN Figure_NNP #_# -LRB-_-LRB- a_DT -RRB-_-RRB- we_PRP have_VBP a_DT DCOP_NN instance_NN with_IN six_CD nodes_NNS ._.
This_DT is_VBZ a_DT bipartite_JJ graph_NN with_IN each_DT partition_NN fully_RB connected_VBN to_TO the_DT other_JJ -LRB-_-LRB- a_DT -RRB-_-RRB- -LRB-_-LRB- b_NN -RRB-_-RRB- -LRB-_-LRB- c_NN -RRB-_-RRB- Figure_NN #_# :_: -LRB-_-LRB- a_LS -RRB-_-RRB- The_DT DCOP_NN instance_NN -LRB-_-LRB- b_NN -RRB-_-RRB- A_DT traditional_JJ pseudotree_NN arrangement_NN for_IN the_DT DCOP_NN instance_NN -LRB-_-LRB- c_NN -RRB-_-RRB- A_DT cross-edged_JJ pseudotree_NN arrangement_NN for_IN the_DT DCOP_NN instance_NN partition_NN ._.
In_IN Figure_NNP #_# -LRB-_-LRB- b_NN -RRB-_-RRB- we_PRP see_VBP a_DT traditional_JJ pseudotree_NN arrangement_NN for_IN this_DT DCOP_NN instance_NN ._.
It_PRP is_VBZ easy_JJ to_TO see_VB that_IN any_DT edgetraversal_NN based_VBN heuristic_NN can_MD not_RB expand_VB two_CD nodes_NNS from_IN the_DT same_JJ partition_NN in_IN succession_NN ._.
We_PRP also_RB see_VBP that_IN no_DT node_NN can_MD have_VB more_JJR than_IN one_CD child_NN because_IN any_DT such_JJ arrangement_NN would_MD be_VB an_DT invalid_JJ pseudotree_NN ._.
Thus_RB any_DT traditional_JJ pseudotree_NN arrangement_NN for_IN this_DT DCOP_NN instance_NN must_MD take_VB the_DT form_NN of_IN Figure_NNP #_# -LRB-_-LRB- b_NN -RRB-_-RRB- ._.
We_PRP can_MD see_VB that_IN the_DT back-edges_NNS F-B_NN and_CC F-A_NN overlap_VBP node_NN C_NN ._.
Node_NN C_NN also_RB has_VBZ a_DT parent_NN E_NN ,_, and_CC a_DT back-edge_JJ with_IN D_NN ._.
Using_VBG the_DT original_JJ DPOP_NN algorithm_NN -LRB-_-LRB- or_CC DCPOP_NN since_IN they_PRP are_VBP identical_JJ in_IN this_DT case_NN -RRB-_-RRB- ,_, we_PRP find_VBP that_IN the_DT computation_NN at_IN node_NN C_NN involves_VBZ five_CD domains_NNS :_: A_NN ,_, B_NN ,_, C_NN ,_, D_NN ,_, and_CC E_NN ._.
In_IN contrast_NN ,_, the_DT cross-edged_JJ pseudotree_NN arrangement_NN in_IN Figure_NNP #_# -LRB-_-LRB- c_NN -RRB-_-RRB- requires_VBZ only_RB a_DT maximum_NN of_IN four_CD domains_NNS in_IN any_DT computation_NN during_IN DCPOP_NN ._.
Since_IN node_NN A_NN is_VBZ the_DT merge_VBP point_NN for_IN branches_NNS from_IN both_DT B_NN and_CC C_NN ,_, we_PRP can_MD see_VB that_IN each_DT of_IN the_DT nodes_NNS D_NN ,_, E_NN ,_, and_CC F_NN have_VBP two_CD overlapping_VBG branches_NNS ._.
In_IN addition_NN each_DT of_IN these_DT nodes_NNS has_VBZ node_NN A_NN as_IN its_PRP$ parent_NN ._.
Using_VBG the_DT DCPOP_NN algorithm_NN we_PRP find_VBP that_IN the_DT computation_NN at_IN node_NN D_NN -LRB-_-LRB- or_CC E_NN or_CC F_NN -RRB-_-RRB- involves_VBZ four_CD domains_NNS :_: A_NN ,_, B_NN ,_, C_NN ,_, and_CC D_NN -LRB-_-LRB- or_CC E_NN or_CC F_NN -RRB-_-RRB- ._.
Since_IN no_DT better_JJR traditional_JJ pseudotree_NN arrangement_NN can_MD be_VB created_VBN using_VBG an_DT edge-traversal_JJ heuristic_NN ,_, we_PRP have_VBP shown_VBN that_IN DCPOP_NN can_MD outperform_VB DPOP_NN even_RB if_IN we_PRP use_VBP the_DT optimal_JJ pseudotree_NN found_VBN through_IN edge-traversal_JJ ._.
We_PRP acknowledge_VBP that_IN pseudotree_NN arrangements_NNS that_WDT allow_VBP parent-child_JJ relationships_NNS without_IN an_DT actual_JJ constraint_NN can_MD solve_VB the_DT problem_NN in_IN Figure_NNP #_# -LRB-_-LRB- a_DT -RRB-_-RRB- with_IN maximum_NN computation_NN size_NN of_IN four_CD domains_NNS ._.
However_RB ,_, current_JJ heuristics_NNS used_VBN with_IN DPOP_NN do_VBP not_RB produce_VB such_JJ pseudotrees_NNS ,_, and_CC such_PDT a_DT heuristic_NN would_MD be_VB difficult_JJ to_TO distribute_VB since_IN each_DT node_NN would_MD require_VB information_NN about_IN nodes_NNS with_IN which_WDT it_PRP has_VBZ no_DT constraint_NN ._.
Also_RB ,_, while_IN we_PRP do_VBP not_RB prove_VB it_PRP here_RB ,_, cross-edged_JJ pseudotrees_NNS can_MD produce_VB smaller_JJR message_NN sizes_NNS than_IN such_JJ pseudotrees_NNS even_RB if_IN the_DT computation_NN size_NN is_VBZ similar_JJ ._.
In_IN practice_NN ,_, since_IN finding_VBG the_DT best_JJS pseudotree_NN arrangement_NN is_VBZ NP-Hard_JJ ,_, we_PRP find_VBP that_IN heuristics_NNS that_WDT produce_VBP cross-edged_JJ pseudotrees_NNS often_RB produce_VBP significantly_RB smaller_JJR computation_NN and_CC message_NN sizes_NNS ._.
7_CD ._.
EXPERIMENTAL_JJ RESULTS_NNS 746_CD The_DT Sixth_NNP Intl_NNP ._.
Joint_NNP Conf_NNP ._.
on_IN Autonomous_NNP Agents_NNPS and_CC Multi-Agent_NNP Systems_NNP -LRB-_-LRB- AAMAS_NNP ##_CD -RRB-_-RRB- Existing_VBG performance_NN metrics_NNS for_IN DCOP_NN algorithms_NNS include_VBP the_DT total_JJ number_NN of_IN messages_NNS ,_, synchronous_JJ clock_NN cycles_NNS ,_, and_CC message_NN size_NN ._.
We_PRP have_VBP already_RB shown_VBN that_IN the_DT total_JJ number_NN of_IN messages_NNS is_VBZ linear_JJ with_IN respect_NN to_TO the_DT number_NN of_IN constraints_NNS in_IN the_DT DCOP_NN instance_NN ._.
We_PRP also_RB introduced_VBD the_DT maximum_NN sequential_JJ path_NN cost_NN -LRB-_-LRB- PC_NN -RRB-_-RRB- as_IN a_DT measurement_NN of_IN the_DT maximum_NN amount_NN of_IN parallelism_NN achievable_JJ by_IN the_DT algorithm_NN ._.
The_DT maximum_NN sequential_JJ path_NN cost_NN is_VBZ equal_JJ to_TO the_DT sum_NN of_IN the_DT computations_NNS performed_VBN on_IN the_DT longest_JJS path_NN from_IN the_DT root_NN to_TO any_DT leaf_NN node_NN ._.
We_PRP also_RB include_VBP as_IN metrics_NNS the_DT maximum_NN computation_NN size_NN in_IN number_NN of_IN dimensions_NNS -LRB-_-LRB- CD_NN -RRB-_-RRB- and_CC maximum_NN message_NN size_NN in_IN number_NN of_IN dimensions_NNS -LRB-_-LRB- MD_NN -RRB-_-RRB- ._.
To_TO analyze_VB the_DT relative_JJ complexity_NN of_IN a_DT given_VBN DCOP_NN instance_NN ,_, we_PRP find_VBP the_DT minimum_NN induced_VBD width_NN -LRB-_-LRB- IW_NN -RRB-_-RRB- of_IN any_DT traditional_JJ pseudotree_NN produced_VBN by_IN a_DT heuristic_NN for_IN the_DT original_JJ DPOP_NN ._.
7_CD ._.
#_# Generic_JJ DCOP_NN instances_NNS For_IN our_PRP$ initial_JJ tests_NNS we_PRP randomly_RB generated_VBD two_CD sets_NNS of_IN problems_NNS with_IN ####_NN cases_NNS in_IN each_DT ._.
Each_DT problem_NN was_VBD generated_VBN by_IN assigning_VBG a_DT random_JJ number_NN -LRB-_-LRB- picked_VBN from_IN a_DT range_NN -RRB-_-RRB- of_IN constraints_NNS to_TO each_DT variable_NN ._.
The_DT generator_NN then_RB created_VBD binary_JJ constraints_NNS until_IN each_DT variable_JJ reached_VBD its_PRP$ maximum_NN number_NN of_IN constraints_NNS ._.
The_DT first_JJ set_NN uses_VBZ ##_CD variables_NNS ,_, and_CC the_DT best_JJS DPOP_NN IW_NN ranges_VBZ from_IN #_# to_TO ##_VB with_IN an_DT average_NN of_IN #_# ._.
#_# ._.
The_DT second_JJ set_NN uses_VBZ ###_CD variables_NNS ,_, and_CC the_DT best_JJS DPOP_NN IW_NN ranged_VBD from_IN #_# to_TO ##_VB with_IN an_DT average_NN of_IN ##_NN ._.
#_# ._.
Since_IN most_JJS of_IN the_DT problems_NNS in_IN the_DT second_JJ set_NN were_VBD too_RB complex_JJ to_TO actually_RB compute_VB the_DT solution_NN ,_, we_PRP took_VBD measurements_NNS of_IN the_DT metrics_NNS using_VBG the_DT techniques_NNS described_VBN earlier_RBR in_IN Section_NNP #_# without_IN actually_RB solving_VBG the_DT problem_NN ._.
Results_NNS are_VBP shown_VBN for_IN the_DT first_JJ set_NN in_IN Table_NNP #_# and_CC for_IN the_DT second_JJ set_NN in_IN Table_NNP #_# ._.
For_IN the_DT two_CD problem_NN sets_NNS we_PRP split_VBD the_DT cases_NNS into_IN low_JJ density_NN and_CC high_JJ density_NN categories_NNS ._.
Low_JJ density_NN cases_NNS consist_VBP of_IN those_DT problems_NNS that_WDT have_VBP a_DT best_JJS DPOP_NN IW_NN less_JJR than_IN or_CC equal_JJ to_TO half_NN of_IN the_DT total_JJ number_NN of_IN nodes_NNS -LRB-_-LRB- e_LS ._.
g_NN ._.
IW_NNP ##_NNP for_IN the_DT ##_CD node_NN problems_NNS and_CC IW_NNP ##_NNP for_IN the_DT ###_CD node_NN problems_NNS -RRB-_-RRB- ._.
High_JJ density_NN problems_NNS consist_VBP of_IN the_DT remainder_NN of_IN the_DT problem_NN sets_NNS ._.
In_IN both_DT Table_NNP #_# and_CC Table_NNP #_# we_PRP have_VBP listed_VBN performance_NN metrics_NNS for_IN the_DT original_JJ DPOP_NN algorithm_NN ,_, the_DT DCPOP_NNP algorithm_NN using_VBG only_RB cross-edged_JJ pseudotrees_NNS -LRB-_-LRB- DCPOP-CE_NN -RRB-_-RRB- ,_, and_CC the_DT DCPOP_NN algorithm_NN using_VBG traditional_JJ and_CC cross-edged_JJ pseudotrees_NNS -LRB-_-LRB- DCPOP-All_NN -RRB-_-RRB- ._.
The_DT pseudotrees_NNS used_VBN for_IN DPOP_NN were_VBD generated_VBN using_VBG #_# heuristics_NNS :_: DFS_NN ,_, DFS_NN MCN_NNP ,_, DFS_NN CLIQUE_NN MCN_NN ,_, DFS_NN MCN_NNP DSTB_NNP ,_, and_CC DFS_NN MCN_NNP BEC_NNP ._.
These_DT are_VBP all_DT versions_NNS of_IN the_DT guided_VBN DFS_NN traversal_NN discussed_VBN in_IN Section_NN #_# ._.
The_DT cross-edged_JJ pseudotrees_NNS used_VBN for_IN DCPOP-CE_NN were_VBD generated_VBN using_VBG #_# heuristics_NNS :_: MCN_NNP ,_, LCN_NNP ,_, MCN_NNP A-B_NNP ,_, LCN_NNP A-B_NNP ,_, and_CC LCSG_NN A-B_NN ._.
These_DT are_VBP all_DT versions_NNS of_IN the_DT best-first_JJ traversal_NN discussed_VBN in_IN Section_NN #_# ._.
For_IN both_DT DPOP_NN and_CC DCPOP-CE_NN we_PRP chose_VBD the_DT best_JJS pseudotree_NN produced_VBN by_IN their_PRP$ respective_JJ #_# heuristics_NNS for_IN each_DT problem_NN in_IN the_DT set_NN ._.
For_IN DCPOP-All_NN we_PRP chose_VBD the_DT best_JJS pseudotree_NN produced_VBN by_IN all_DT 10_CD heuristics_NNS for_IN each_DT problem_NN in_IN the_DT set_NN ._.
For_IN the_DT CD_NNP and_CC MD_NNP metrics_NNS the_DT value_NN shown_VBN is_VBZ the_DT average_JJ number_NN of_IN dimensions_NNS ._.
For_IN the_DT PC_NN metric_JJ the_DT value_NN shown_VBN is_VBZ the_DT natural_JJ logarithm_NN of_IN the_DT maximum_NN sequential_JJ path_NN cost_NN -LRB-_-LRB- since_IN the_DT actual_JJ value_NN grows_VBZ exponentially_RB with_IN the_DT complexity_NN of_IN the_DT problem_NN -RRB-_-RRB- ._.
The_DT final_JJ row_NN in_IN both_CC tables_NNS is_VBZ a_DT measurement_NN of_IN improvement_NN of_IN DCPOP-All_NN over_IN DPOP_NN ._.
For_IN the_DT CD_NNP and_CC MD_NNP metrics_NNS the_DT value_NN shown_VBN is_VBZ a_DT reduction_NN in_IN number_NN of_IN dimensions_NNS ._.
For_IN the_DT PC_NN metric_JJ the_DT value_NN shown_VBN is_VBZ a_DT percentage_NN reduction_NN in_IN the_DT maximum_NN sequential_JJ path_NN cost_NN -LRB-_-LRB- %_NN =_JJ DP_NN OP_NN DCP_NN OP_NN DCP_NN OP_NN ###_CD -RRB-_-RRB- ._.
Notice_NNP that_IN DCPOPAll_NNP outperforms_VBZ DPOP_NN on_IN all_DT metrics_NNS ._.
This_DT logically_RB follows_VBZ from_IN our_PRP$ earlier_JJR assertion_NN that_IN given_VBN the_DT same_JJ input_NN ,_, DCPOP_NN performs_VBZ exactly_RB the_DT same_JJ as_IN DPOP_NN ._.
Thus_RB given_VBN the_DT choice_NN between_IN the_DT pseudotrees_NNS produced_VBN by_IN all_DT ##_CD heuristics_NNS ,_, DCPOP-All_NN will_MD always_RB outLow_VB Density_NNP High_NNP Density_NNP Algorithm_NNP CD_NNP MD_NNP PC_NNP CD_NNP MD_NNP PC_NNP DPOP_NNP #_# ._.
##_NN #_# ._.
##_NN #_# ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN #_# ._.
##_NN DCPOP-CE_NN #_# ._.
##_NN #_# ._.
##_NN #_# ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN #_# ._.
##_NN DCPOP-All_NN #_# ._.
##_NN #_# ._.
##_NN #_# ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN #_# ._.
##_NN Improvement_NN #_# ._.
##_NN #_# ._.
##_NN ##_CD %_NN #_# ._.
##_NN #_# ._.
##_NN ##_CD %_NN Table_NNP #_# :_: ##_CD node_NN problems_NNS Low_JJ Density_NNP High_NNP Density_NNP Algorithm_NNP CD_NNP MD_NNP PC_NNP CD_NNP MD_NNP PC_NNP DPOP_NNP ##_NN ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN DCPOP-CE_NN ##_CD ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN DCPOP-All_NN ##_CD ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN ##_CD ._.
##_NN Improvement_NN #_# ._.
##_NN #_# ._.
##_CD ###_CD %_NN #_# ._.
##_NN #_# ._.
##_CD ###_CD %_NN Table_NNP #_# :_: ###_CD node_NN problems_NNS Figure_NNP #_# :_: Computation_NNP Dimension_NNP Size_NN Figure_NN #_# :_: Message_NN Dimension_NN Size_NN The_DT Sixth_NNP Intl_NNP ._.
Joint_NNP Conf_NNP ._.
on_IN Autonomous_NNP Agents_NNPS and_CC Multi-Agent_NNP Systems_NNP -LRB-_-LRB- AAMAS_NNP ##_CD -RRB-_-RRB- ###_CD Figure_NNP #_# :_: Path_NN Cost_NN DCPOP_NN Improvement_NN Ag_NN Mtg_NN Vars_NNP Const_NNP IW_NNP CD_NNP MD_NNP PC_NNP 10_CD #_# ##_CD ##_CD ._.
#_# #_# ._.
##_SYM -_: #_# ._.
##_NN -0_CD ._.
##_NN #_# ._.
#_# %_NN 30_CD ##_CD ##_CD ##_NN ._.
#_# #_# ._.
##_NN #_# ._.
##_NN #_# ._.
##_NN ##_CD ._.
#_# %_NN 50_CD ##_CD ##_CD ###_CD ._.
#_# #_# ._.
##_NN #_# ._.
##_NN #_# ._.
##_NN ##_CD ._.
#_# %_NN 100_CD ##_CD ###_CD ###_CD ._.
#_# #_# ._.
##_NN #_# ._.
##_NN #_# ._.
##_NN ##_CD ._.
#_# %_NN 150_CD ##_CD ###_CD ###_CD ._.
#_# #_# ._.
##_NN #_# ._.
##_NN #_# ._.
##_NN ##_CD ._.
#_# %_NN 200_CD ##_CD ###_CD ###_CD ._.
#_# #_# ._.
##_NN #_# ._.
##_NN #_# ._.
##_NN ##_CD ._.
#_# %_NN Table_NNP #_# :_: Meeting_VBG Scheduling_NN Problems_NNS perform_VBP DPOP_NN ._.
Another_DT trend_NN we_PRP notice_VBP is_VBZ that_IN the_DT improvement_NN is_VBZ greater_JJR for_IN high_JJ density_NN problems_NNS than_IN low_JJ density_NN problems_NNS ._.
We_PRP show_VBP this_DT trend_NN in_IN greater_JJR detail_NN in_IN Figures_NNS #_# ,_, #_# ,_, and_CC #_# ._.
Notice_NNP how_WRB the_DT improvement_NN increases_VBZ as_IN the_DT complexity_NN of_IN the_DT problem_NN increases_NNS ._.
7_CD ._.
#_# Meeting_VBG Scheduling_VBG Problem_NNP In_IN addition_NN to_TO our_PRP$ initial_JJ generic_JJ DCOP_NN tests_NNS ,_, we_PRP ran_VBD a_DT series_NN of_IN tests_NNS on_IN the_DT Meeting_VBG Scheduling_NN Problem_NNP -LRB-_-LRB- MSP_NNP -RRB-_-RRB- as_IN described_VBN in_IN -LSB-_-LRB- #_# -RSB-_-RRB- ._.
The_DT problem_NN setup_NN includes_VBZ a_DT number_NN of_IN people_NNS that_WDT are_VBP grouped_VBN into_IN departments_NNS ._.
Each_DT person_NN must_MD attend_VB a_DT specified_VBN number_NN of_IN meetings_NNS ._.
Meetings_NNS can_MD be_VB held_VBN within_IN departments_NNS or_CC among_IN departments_NNS ,_, and_CC can_MD be_VB assigned_VBN to_TO one_CD of_IN eight_CD time_NN slots_NNS ._.
The_DT MSP_NNP maps_VBZ to_TO a_DT DCOP_NN instance_NN where_WRB each_DT variable_NN represents_VBZ the_DT time_NN slot_NN that_IN a_DT specific_JJ person_NN will_MD attend_VB a_DT specific_JJ meeting_NN ._.
All_DT variables_NNS that_WDT belong_VBP to_TO the_DT same_JJ person_NN have_VBP mutual_JJ exclusion_NN constraints_NNS placed_VBN so_IN that_IN the_DT person_NN can_MD not_RB attend_VB more_JJR than_IN one_CD meeting_NN during_IN the_DT same_JJ time_NN slot_NN ._.
All_DT variables_NNS that_WDT belong_VBP to_TO the_DT same_JJ meeting_NN have_VBP equality_NN constraints_NNS so_IN that_IN all_DT of_IN the_DT participants_NNS choose_VB the_DT same_JJ time_NN slot_NN ._.
Unary_JJ constraints_NNS are_VBP placed_VBN on_IN each_DT variable_NN to_TO account_VB for_IN a_DT person_NN ''_'' s_NNS valuation_NN of_IN each_DT meeting_NN and_CC time_NN slot_NN ._.
For_IN our_PRP$ tests_NNS we_PRP generated_VBD ###_CD sample_NN problems_NNS for_IN each_DT combination_NN of_IN agents_NNS and_CC meetings_NNS ._.
Results_NNS are_VBP shown_VBN in_IN Table_NNP #_# ._.
The_DT values_NNS in_IN the_DT first_JJ five_CD columns_NNS represent_VBP -LRB-_-LRB- in_IN left_VBN to_TO right_JJ order_NN -RRB-_-RRB- ,_, the_DT total_JJ number_NN of_IN agents_NNS ,_, the_DT total_JJ number_NN of_IN meetings_NNS ,_, the_DT total_JJ number_NN of_IN variables_NNS ,_, the_DT average_JJ total_JJ number_NN of_IN constraints_NNS ,_, and_CC the_DT average_JJ minimum_JJ IW_NN produced_VBN by_IN a_DT traditional_JJ pseudotree_NN ._.
The_DT last_JJ three_CD columns_NNS show_VBP the_DT same_JJ metrics_NNS we_PRP used_VBD for_IN the_DT generic_JJ DCOP_NN instances_NNS ,_, except_IN this_DT time_NN we_PRP only_RB show_VBP the_DT improvements_NNS of_IN DCPOP-All_NN over_IN DPOP_NN ._.
Performance_NNP is_VBZ better_RBR on_IN average_NN for_IN all_DT MSP_NN instances_NNS ,_, but_CC again_RB we_PRP see_VBP larger_JJR improvements_NNS for_IN more_JJR complex_NN problem_NN instances_NNS ._.
8_CD ._.
CONCLUSIONS_NNS AND_CC FUTURE_NNS WORK_VBP We_PRP presented_VBD a_DT complete_JJ ,_, distributed_VBN algorithm_NN that_WDT solves_VBZ general_JJ DCOP_NN instances_NNS using_VBG cross-edged_JJ pseudotree_NN arrangements_NNS ._.
Our_PRP$ algorithm_NN extends_VBZ the_DT DPOP_NN algorithm_NN by_IN adding_VBG additional_JJ utility_NN propagation_NN messages_NNS ,_, and_CC introducing_VBG the_DT concept_NN of_IN branch_NN merging_VBG during_IN the_DT utility_NN propagation_NN phase_NN ._.
Our_PRP$ algorithm_NN also_RB allows_VBZ value_NN assignments_NNS to_TO occur_VB at_IN higher_JJR level_NN merge_VBP points_NNS for_IN lower_JJR level_NN nodes_NNS ._.
We_PRP have_VBP shown_VBN that_IN DCPOP_NN fully_RB extends_VBZ DPOP_NN by_IN performing_VBG the_DT same_JJ operations_NNS given_VBN the_DT same_JJ input_NN ._.
We_PRP have_VBP also_RB shown_VBN through_IN some_DT examples_NNS and_CC experimental_JJ data_NNS that_WDT DCPOP_NNP can_MD achieve_VB greater_JJR performance_NN for_IN some_DT problem_NN instances_NNS by_IN extending_VBG the_DT allowable_JJ input_NN set_VBN to_TO include_VB cross-edged_JJ pseudotrees_NNS ._.
We_PRP placed_VBD particular_JJ emphasis_NN on_IN the_DT role_NN that_WDT edge-traversal_JJ heuristics_NNS play_VBP in_IN the_DT generation_NN of_IN pseudotrees_NNS ._.
We_PRP have_VBP shown_VBN that_IN the_DT performance_NN penalty_NN is_VBZ minimal_JJ to_TO generate_VB multiple_JJ heuristics_NNS ,_, and_CC that_IN we_PRP can_MD choose_VB the_DT best_JJS generated_VBN pseudotree_NN in_IN linear_JJ space-time_NN complexity_NN ._.
Given_VBN the_DT importance_NN of_IN a_DT good_JJ pseudotree_NN for_IN performance_NN ,_, future_JJ work_NN will_MD include_VB new_JJ heuristics_NNS to_TO find_VB better_JJR pseudotrees_NNS ._.
Future_JJ work_NN will_MD also_RB include_VB adapting_VBG existing_VBG DPOP_NN extensions_NNS -LSB-_-LRB- #_# ,_, #_# -RSB-_-RRB- that_WDT support_VBP different_JJ problem_NN domains_NNS for_IN use_NN with_IN DCPOP_NN ._.
9_CD ._.
REFERENCES_NNS -LSB-_-LRB- #_# -RSB-_-RRB- J_NN ._.
Liu_NNP and_CC K_NNP ._.
P_NN ._.
Sycara_NNP ._.
Exploiting_VBG problem_NN structure_NN for_IN distributed_VBN constraint_NN optimization_NN ._.
In_IN V_NN ._.
Lesser_RBR ,_, editor_NN ,_, Proceedings_NNP of_IN the_DT First_NNP International_NNP Conference_NNP on_IN Multi-Agent_NNP Systems_NNPS ,_, pages_NNS 246-254_CD ,_, San_NNP Francisco_NNP ,_, CA_NNP ,_, 1995_CD ._.
MIT_NNP Press_NNP ._.
-LSB-_-LRB- #_# -RSB-_-RRB- P_NN ._.
J_NN ._.
Modi_NNP ,_, H_NN ._.
Jung_NNP ,_, M_NN ._.
Tambe_NNP ,_, W_NNP ._.
-_: M_NN ._.
Shen_NNP ,_, and_CC S_NN ._.
Kulkarni_NNP ._.
A_DT dynamic_JJ distributed_VBN constraint_NN satisfaction_NN approach_NN to_TO resource_NN allocation_NN ._.
Lecture_NNP Notes_NNP in_IN Computer_NNP Science_NNP ,_, 2239_CD :_: 685-700_CD ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- P_NN ._.
J_NN ._.
Modi_NNP ,_, W_NNP ._.
Shen_NNP ,_, M_NN ._.
Tambe_NNP ,_, and_CC M_NN ._.
Yokoo_NNP ._.
An_DT asynchronous_JJ complete_JJ method_NN for_IN distributed_VBN constraint_NN optimization_NN ._.
In_IN AAMAS_NNP ##_CD ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- A_DT ._.
Petcu_NNP ._.
Frodo_NNP :_: A_NNP framework_NN for_IN open_JJ /_: distributed_VBN constraint_NN optimization_NN ._.
Technical_NNP Report_NNP No_NNP ._.
####_CD /_: ###_CD 2006_CD /_: ###_CD ,_, Swiss_NNP Federal_NNP Institute_NNP of_IN Technology_NNP -LRB-_-LRB- EPFL_NNP -RRB-_-RRB- ,_, Lausanne_NNP -LRB-_-LRB- Switzerland_NNP -RRB-_-RRB- ,_, ####_NN ._.
http_NN :_: /_: /_: liawww_NN ._.
epfl_NN ._.
ch_NN /_: frodo_NN /_: ._.
-LSB-_-LRB- #_# -RSB-_-RRB- A_DT ._.
Petcu_NN and_CC B_NN ._.
Faltings_NNP ._.
A-dpop_NNP :_: Approximations_NNS in_IN distributed_VBN optimization_NN ._.
In_IN poster_NN in_IN CP_NNP ####_NNP ,_, pages_NNS 802-806_CD ,_, Sitges_NNP ,_, Spain_NNP ,_, October_NNP ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- A_DT ._.
Petcu_NN and_CC B_NN ._.
Faltings_NNP ._.
Dpop_NNP :_: A_NNP scalable_JJ method_NN for_IN multiagent_JJ constraint_NN optimization_NN ._.
In_IN IJCAI_NNP ##_CD ,_, pages_NNS 266-271_CD ,_, Edinburgh_NNP ,_, Scotland_NNP ,_, Aug_NNP ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- A_DT ._.
Petcu_NNP ,_, B_NN ._.
Faltings_NNP ,_, and_CC D_NN ._.
Parkes_NNP ._.
M-dpop_NNP :_: Faithful_NNP distributed_VBN implementation_NN of_IN efficient_JJ social_JJ choice_NN problems_NNS ._.
In_IN AAMAS_NNP ##_CD ,_, pages_NNS 1397-1404_CD ,_, Hakodate_NNP ,_, Japan_NNP ,_, May_NNP ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- G_NN ._.
Ushakov_NNP ._.
Solving_VBG meeting_NN scheduling_NN problems_NNS using_VBG distributed_VBN pseudotree-optimization_NN procedure_NN ._.
Master_NN ''_'' s_NNS thesis_NN ,_, Ecole_NNP Polytechnique_NNP Federale_NNP de_IN Lausanne_NNP ,_, ####_CD ._.
-LSB-_-LRB- #_# -RSB-_-RRB- M_NN ._.
Yokoo_NNP ,_, E_NNP ._.
H_NN ._.
Durfee_NNP ,_, T_NN ._.
Ishida_NNP ,_, and_CC K_NN ._.
Kuwabara_NNP ._.
Distributed_VBN constraint_NN satisfaction_NN for_IN formalizing_VBG distributed_VBN problem_NN solving_VBG ._.
In_IN International_NNP Conference_NNP on_IN Distributed_VBN Computing_NNP Systems_NNPS ,_, pages_NNS 614-621_CD ,_, ####_CD ._.
-LSB-_-LRB- ##_NN -RSB-_-RRB- M_NN ._.
Yokoo_NNP ,_, E_NNP ._.
H_NN ._.
Durfee_NNP ,_, T_NN ._.
Ishida_NNP ,_, and_CC K_NN ._.
Kuwabara_NNP ._.
The_DT distributed_VBN constraint_NN satisfaction_NN problem_NN :_: Formalization_NN and_CC algorithms_NNS ._.
Knowledge_NN and_CC Data_NNP Engineering_NNP ,_, 10_CD -LRB-_-LRB- #_# -RRB-_-RRB- :_: 673-685_CD ,_, ####_CD ._.
748_CD The_DT Sixth_NNP Intl_NNP ._.
Joint_NNP Conf_NNP ._.
on_IN Autonomous_NNP Agents_NNPS and_CC Multi-Agent_NNP Systems_NNP -LRB-_-LRB- AAMAS_NNP ##_CD -RRB-_-RRB-
